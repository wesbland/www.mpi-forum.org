<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-pt2pt/pt2pt.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Passing <font face="sans-serif">  MPI_STATUS_IGNORE</font> for Status</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node48">48. Passing   MPI_STATUS_IGNORE for Status</a></H2>
<A HREF="node47.htm#Node47"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node42.htm#Node42"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node49.htm#Node49"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node42.htm#Node42"> Blocking Send and Receive Operations</a>
<b>Next: </b><A HREF="node49.htm#Node49"> Data Type Matching and Data Conversion</a>
<b>Previous: </b><A HREF="node47.htm#Node47"> Return Status</a>
<P>
  
<P> 
Every call to <font face="sans-serif"> MPI_RECV</font> includes a <font face="sans-serif"> status</font> argument, wherein  
the system can return details about the message received.  
  
There are also a number of other <font face="sans-serif"> MPI</font> calls  
where <font face="sans-serif"> status</font> is returned.  
  
An object of type  
<font face="sans-serif"> MPI_STATUS</font> is not an <font face="sans-serif"> MPI</font> opaque object; its structure is declared  
in <tt> mpi.h</tt> and <tt> mpif.h</tt>, and it exists in the user's program.  In many  
cases, application programs are constructed so that it is unnecessary for them  
to examine the <tt> status</tt> fields.  In these cases, it is a waste for the user  
to allocate a status object, and it is particularly wasteful for the <font face="sans-serif"> MPI</font>  
implementation to fill in fields in this object.  
<P> 
  
<P> 
To cope with this problem, there are two predefined constants,  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, which when  
passed to a receive, wait, or test function, inform the implementation that  
the status fields are not to be filled in.  Note that  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> is not a special type of <font face="sans-serif"> MPI_STATUS</font>  
object; rather, it is a special value for the argument.  In C one would expect  
it to be <font face="sans-serif">  NULL</font>, not the address of a special <font face="sans-serif"> MPI_STATUS</font>.  
<P> 
<font face="sans-serif">  MPI_STATUS_IGNORE</font>, and the array version  
<font face="sans-serif">  MPI_STATUSES_IGNORE</font>, can be used everywhere a status argument is  
passed to a receive, wait, or test function.  <font face="sans-serif">  MPI_STATUS_IGNORE</font>  
cannot be used when status is an IN argument.  
  
Note that in Fortran <font face="sans-serif">  MPI_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_STATUSES_IGNORE</font> are  
objects like <font face="sans-serif">  MPI_BOTTOM</font> (not usable for initialization or  
assignment).  See Section <a href="node24.htm#Node24">Named Constants 
</a>.  
<P> 
  
<P> 
  
<P> 
  
<P> 
In general, this optimization can apply to all functions for which  
<font face="sans-serif"> status</font> or an array of <font face="sans-serif"> status</font>es is an OUT argument.  
  
Note that this converts <font face="sans-serif"> status</font> into an INOUT argument.  
  
The functions that can be passed <font face="sans-serif">  MPI_STATUS_IGNORE</font> are all the various forms of  
  
<font face="sans-serif"> MPI_RECV</font>, <font face="sans-serif"> MPI_TEST</font>, and <font face="sans-serif"> MPI_WAIT</font>, as well as  
<font face="sans-serif"> MPI_REQUEST_GET_STATUS</font>.  
  
When an array is passed, as in the   
<font face="sans-serif"> </font><font face="sans-serif"> MPI_</font> {<font face="sans-serif"> TEST<I>|</I>WAIT</font> }{<font face="sans-serif"> ALL<I>|</I>SOME</font> }</font>  
functions, a separate constant, <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, is passed for  
the array argument.  
  
It is possible for an <font face="sans-serif"> MPI</font> function to return <font face="sans-serif">  MPI_ERR_IN_STATUS</font>  
even when <font face="sans-serif">  MPI_STATUS_IGNORE</font> or <font face="sans-serif">  MPI_STATUSES_IGNORE</font> has  
been passed to that function.  
  
<P> 
  
<P> 
  
<P> 
<font face="sans-serif">  MPI_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_STATUSES_IGNORE</font> are not  
  
required to have the same values in C and Fortran.   
<P> 
It is not allowed to have some of the statuses in an array of statuses for  
<font face="sans-serif"> </font><font face="sans-serif"> MPI_</font> {<font face="sans-serif"> TEST<I>|</I>WAIT</font> }{<font face="sans-serif"> ALL<I>|</I>SOME</font> }</font>  
functions set to  
<font face="sans-serif">  MPI_STATUS_IGNORE</font>;  one either specifies ignoring <em> all </em> of  
the statuses in such a call with <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, or <em>  
  none</em> of them by passing normal statuses in all positions in the array  
of statuses.  
<P> 
  
<P> 
  
<P> 
  
<P> 
There are no C++ bindings for  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> or <font face="sans-serif">  MPI_STATUSES_IGNORE</font>.   
To allow an <font face="sans-serif">  OUT</font> or <font face="sans-serif">  INOUT</font> <tt> MPI::Status</tt> argument to be ignored,  
all <font face="sans-serif"> MPI</font> C++ bindings that have <font face="sans-serif">  OUT</font> or <font face="sans-serif">  INOUT</font> <tt> MPI::Status</tt>  
parameters are overloaded with a second version that omits the <font face="sans-serif">  OUT</font> or <font face="sans-serif">  INOUT</font>  
<tt> MPI::Status</tt> parameter.  
<P> 
<BR><b> Example</b>The C++ bindings for <font face="sans-serif"> MPI_PROBE</font> are:  
  
<P> 
<tt> void MPI::Comm::Probe(int source, int tag, MPI::Status&amp; status)  
const</tt>  
<P> 
<tt> void MPI::Comm::Probe(int source, int tag) const</tt>  
  
<P> 
  
  

<P>
<HR>
<A HREF="node47.htm#Node47"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node42.htm#Node42"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node49.htm#Node49"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node42.htm#Node42"> Blocking Send and Receive Operations</a>
<b>Next: </b><A HREF="node49.htm#Node49"> Data Type Matching and Data Conversion</a>
<b>Previous: </b><A HREF="node47.htm#Node47"> Return Status</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
