<HTML>
<HEAD>
<!-- This file was generated by tohtml from func-index.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node435">390. Index</a></H1>
<A HREF="node434.htm#Node434"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node436.htm#Node436"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node436.htm#Node436"> Index</a>
<b>Previous: </b><A HREF="node434.htm#Node434"> Index</a>
<P>
menu> 
<li><a href="node29.htm#Node29">COMM_COPY_ATTR_FN</a>
<li><a href="node29.htm#Node29">COMM_DELETE_ATTR_FN</a>
<li><a href="node74.htm#Node74">CONST:&amp;</a>
<li><a href="node50.htm#Node50">CONST:CHARACTER</a>
<li><a href="node191.htm#Node191">CONST:CHARACTER*(*)</a>
<li><a href="node187.htm#Node187">CONST:COMM</a>
<li><a href="node174.htm#Node174">CONST:DIMS</a>
<li><a href="node174.htm#Node174">CONST:DIMS(i+1)</a>
<li><a href="node174.htm#Node174">CONST:DIRECTION 
= i</a>
<li><a href="node187.htm#Node187">CONST:FILE</a>
<li><a href="node195.htm#Node195">CONST:IERROR</a>
<li><a href="node150.htm#Node150">CONST:INTEGER</a>
<li><a href="node192.htm#Node192">CONST:LASTCODE</a>
<li><a href="node335.htm#Node335">CONST:MPI::*_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::ANY_SOURCE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ANY_TAG</a>
<li><a href="node375.htm#Node375">CONST:MPI::APPNUM</a>
<li><a href="node375.htm#Node375">CONST:MPI::ARGVS_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::ARGV_NULL</a>
<li><a href="node26.htm#Node26">CONST:MPI::Aint</a>
<li><a href="node26.htm#Node26">CONST:MPI::Aint|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::BAND</a>
<li><a href="node336.htm#Node336">CONST:MPI::BOOL</a>
<li><a href="node375.htm#Node375">CONST:MPI::BOR</a>
<li><a href="node375.htm#Node375">CONST:MPI::BOTTOM</a>
<li><a href="node375.htm#Node375">CONST:MPI::BSEND_OVERHEAD</a>
<li><a href="node375.htm#Node375">CONST:MPI::BXOR</a>
<li><a href="node336.htm#Node336">CONST:MPI::BYTE</a>
<li><a href="node375.htm#Node375">CONST:MPI::CART</a>
<li><a href="node336.htm#Node336">CONST:MPI::CHAR</a>
<li><a href="node336.htm#Node336">CONST:MPI::CHARACTER</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_CONTIGUOUS</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_DARRAY</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_DUP</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_F90_COMPLEX</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_F90_INTEGER</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_F90_REAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_HINDEXED</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_HINDEXED_INTEGER</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_HVECTOR</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_HVECTOR_INTEGER</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_INDEXED</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_INDEXED_BLOCK</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_NAMED</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_RESIZED</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_STRUCT</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_STRUCT_INTEGER</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_SUBARRAY</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMBINER_VECTOR</a>
<li><a href="node335.htm#Node335">CONST:MPI::COMM_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMM_SELF</a>
<li><a href="node375.htm#Node375">CONST:MPI::COMM_WORLD</a>
<li><a href="node336.htm#Node336">CONST:MPI::COMPLEX</a>
<li><a href="node375.htm#Node375">CONST:MPI::CONGRUENT</a>
<li><a href="node169.htm#Node169">CONST:MPI::Cartcomm</a>
<li><a href="node337.htm#Node337">CONST:MPI::Cartcomm|uu</a>
<li><a href="node130.htm#Node130">CONST:MPI::Comm</a>
<li><a href="node43.htm#Node43">CONST:MPI::Comm|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::DATATYPE_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::DISPLACEMENT_CURRENT</a>
<li><a href="node375.htm#Node375">CONST:MPI::DISTRIBUTE_BLOCK</a>
<li><a href="node375.htm#Node375">CONST:MPI::DISTRIBUTE_CYCLIC</a>
<li><a href="node375.htm#Node375">CONST:MPI::DISTRIBUTE_DFLT_DARG</a>
<li><a href="node375.htm#Node375">CONST:MPI::DISTRIBUTE_NONE</a>
<li><a href="node375.htm#Node375">CONST:MPI::DIST_GRAPH</a>
<li><a href="node336.htm#Node336">CONST:MPI::DOUBLE</a>
<li><a href="node336.htm#Node336">CONST:MPI::DOUBLE_COMPLEX</a>
<li><a href="node336.htm#Node336">CONST:MPI::DOUBLE_INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::DOUBLE_PRECISION</a>
<li><a href="node375.htm#Node375">CONST:MPI::DUP_FN</a>
<li><a href="node32.htm#Node32">CONST:MPI::Datatype</a>
<li><a href="node71.htm#Node71">CONST:MPI::Datatype|uu</a>
<li><a href="node376.htm#Node376">CONST:MPI::Distgraphcomm</a>
<li><a href="node337.htm#Node337">CONST:MPI::Distgraphcomm|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERRHANDLER_NULL</a>
<li><a href="node32.htm#Node32">CONST:MPI::ERRORS_ARE_FATAL</a>
<li><a href="node32.htm#Node32">CONST:MPI::ERRORS_RETURN</a>
<li><a href="node32.htm#Node32">CONST:MPI::ERRORS_THROW_EXCEPTIONS</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_ACCESS</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_AMODE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_ARG</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_ASSERT</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_BAD_FILE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_BASE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_BUFFER</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_COMM</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_CONVERSION</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_COUNT</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_DIMS</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_DISP</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_DUP_DATAREP</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_FILE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_FILE_EXISTS</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_FILE_IN_USE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_GROUP</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_INFO</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_INFO_KEY</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_INFO_NOKEY</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_INFO_VALUE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_INTERN</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_IN_STATUS</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_IO</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_KEYVAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_LASTCODE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_LOCKTYPE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_NAME</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_NOT_SAME</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_NO_MEM</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_NO_SPACE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_NO_SUCH_FILE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_OP</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_OTHER</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_PENDING</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_PORT</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_QUOTA</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_RANK</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_READ_ONLY</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_REQUEST</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_RMA_CONFLICT</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_RMA_SYNC</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_ROOT</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_SERVICE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_SIZE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_SPAWN</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_TAG</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_TOPOLOGY</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_TRUNCATE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_TYPE</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_UNKNOWN</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_UNSUPPORTED_DATAREP</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_UNSUPPORTED_OPERATION</a>
<li><a href="node375.htm#Node375">CONST:MPI::ERR_WIN</a>
<li><a href="node188.htm#Node188">CONST:MPI::Errhandler</a>
<li><a href="node188.htm#Node188">CONST:MPI::Errhandler|uu</a>
<li><a href="node32.htm#Node32">CONST:MPI::Exception</a>
<li><a href="node338.htm#Node338">CONST:MPI::Exception|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::FILE_NULL</a>
<li><a href="node336.htm#Node336">CONST:MPI::FLOAT</a>
<li><a href="node336.htm#Node336">CONST:MPI::FLOAT_INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_COMPLEX</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_COMPLEX16</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_COMPLEX32</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_COMPLEX4</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_COMPLEX8</a>
<li><a href="node336.htm#Node336">CONST:MPI::F_DOUBLE_COMPLEX</a>
<li><a href="node190.htm#Node190">CONST:MPI::File</a>
<li><a href="node265.htm#Node265">CONST:MPI::File|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::GRAPH</a>
<li><a href="node375.htm#Node375">CONST:MPI::GROUP_EMPTY</a>
<li><a href="node375.htm#Node375">CONST:MPI::GROUP_NULL</a>
<li><a href="node171.htm#Node171">CONST:MPI::Graphcomm</a>
<li><a href="node337.htm#Node337">CONST:MPI::Graphcomm|uu</a>
<li><a href="node254.htm#Node254">CONST:MPI::Grequest</a>
<li><a href="node254.htm#Node254">CONST:MPI::Grequest|uu</a>
<li><a href="node129.htm#Node129">CONST:MPI::Group</a>
<li><a href="node129.htm#Node129">CONST:MPI::Group|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::HOST</a>
<li><a href="node375.htm#Node375">CONST:MPI::IDENT</a>
<li><a href="node375.htm#Node375">CONST:MPI::INFO_NULL</a>
<li><a href="node336.htm#Node336">CONST:MPI::INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER1</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER16</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER2</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER4</a>
<li><a href="node336.htm#Node336">CONST:MPI::INTEGER8</a>
<li><a href="node375.htm#Node375">CONST:MPI::IN_PLACE</a>
<li><a href="node375.htm#Node375">CONST:MPI::IO</a>
<li><a href="node186.htm#Node186">CONST:MPI::Info</a>
<li><a href="node199.htm#Node199">CONST:MPI::Info|uu</a>
<li><a href="node333.htm#Node333">CONST:MPI::Intercomm</a>
<li><a href="node337.htm#Node337">CONST:MPI::Intercomm|uu</a>
<li><a href="node333.htm#Node333">CONST:MPI::Intracomm</a>
<li><a href="node337.htm#Node337">CONST:MPI::Intracomm|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::KEYVAL_INVALID</a>
<li><a href="node375.htm#Node375">CONST:MPI::LAND</a>
<li><a href="node375.htm#Node375">CONST:MPI::LASTUSEDCODE</a>
<li><a href="node375.htm#Node375">CONST:MPI::LB</a>
<li><a href="node375.htm#Node375">CONST:MPI::LOCK_EXCLUSIVE</a>
<li><a href="node375.htm#Node375">CONST:MPI::LOCK_SHARED</a>
<li><a href="node336.htm#Node336">CONST:MPI::LOGICAL</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG_DOUBLE</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG_DOUBLE_COMPLEX</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG_DOUBLE_INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG_INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::LONG_LONG</a>
<li><a href="node375.htm#Node375">CONST:MPI::LONG_LONG_INT</a>
<li><a href="node375.htm#Node375">CONST:MPI::LOR</a>
<li><a href="node375.htm#Node375">CONST:MPI::LXOR</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX</a>
<li><a href="node336.htm#Node336">CONST:MPI::MAXLOC</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_DATAREP_STRING</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_ERROR_STRING</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_INFO_KEY</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_INFO_VAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_OBJECT_NAME</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_PORT_NAME</a>
<li><a href="node375.htm#Node375">CONST:MPI::MAX_PROCESSOR_NAME</a>
<li><a href="node375.htm#Node375">CONST:MPI::MIN</a>
<li><a href="node336.htm#Node336">CONST:MPI::MINLOC</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_APPEND</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_CREATE</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_DELETE_ON_CLOSE</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_EXCL</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_NOCHECK</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_NOPRECEDE</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_NOPUT</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_NOSTORE</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_NOSUCCEED</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_RDONLY</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_RDWR</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_SEQUENTIAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_UNIQUE_OPEN</a>
<li><a href="node375.htm#Node375">CONST:MPI::MODE_WRONLY</a>
<li><a href="node375.htm#Node375">CONST:MPI::NULL_COPY_FN</a>
<li><a href="node375.htm#Node375">CONST:MPI::NULL_DELETE_FN</a>
<li><a href="node375.htm#Node375">CONST:MPI::OP_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::ORDER_C</a>
<li><a href="node375.htm#Node375">CONST:MPI::ORDER_FORTRAN</a>
<li><a href="node27.htm#Node27">CONST:MPI::Offset</a>
<li><a href="node27.htm#Node27">CONST:MPI::Offset|uu</a>
<li><a href="node103.htm#Node103">CONST:MPI::Op</a>
<li><a href="node107.htm#Node107">CONST:MPI::Op|uu</a>
<li><a href="node336.htm#Node336">CONST:MPI::PACKED</a>
<li><a href="node375.htm#Node375">CONST:MPI::PROC_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::PROD</a>
<li><a href="node333.htm#Node333">CONST:MPI::Prequest</a>
<li><a href="node65.htm#Node65">CONST:MPI::Prequest|uu</a>
<li><a href="node336.htm#Node336">CONST:MPI::REAL</a>
<li><a href="node336.htm#Node336">CONST:MPI::REAL16</a>
<li><a href="node336.htm#Node336">CONST:MPI::REAL2</a>
<li><a href="node336.htm#Node336">CONST:MPI::REAL4</a>
<li><a href="node336.htm#Node336">CONST:MPI::REAL8</a>
<li><a href="node375.htm#Node375">CONST:MPI::REPLACE</a>
<li><a href="node375.htm#Node375">CONST:MPI::REQUEST_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::ROOT</a>
<li><a href="node59.htm#Node59">CONST:MPI::Request</a>
<li><a href="node60.htm#Node60">CONST:MPI::Request|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::SEEK_CUR</a>
<li><a href="node375.htm#Node375">CONST:MPI::SEEK_END</a>
<li><a href="node375.htm#Node375">CONST:MPI::SEEK_SET</a>
<li><a href="node336.htm#Node336">CONST:MPI::SHORT</a>
<li><a href="node336.htm#Node336">CONST:MPI::SHORT_INT</a>
<li><a href="node336.htm#Node336">CONST:MPI::SIGNED_CHAR</a>
<li><a href="node375.htm#Node375">CONST:MPI::SIMILAR</a>
<li><a href="node375.htm#Node375">CONST:MPI::SUCCESS</a>
<li><a href="node375.htm#Node375">CONST:MPI::SUM</a>
<li><a href="node47.htm#Node47">CONST:MPI::Status</a>
<li><a href="node46.htm#Node46">CONST:MPI::Status|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI::TAG_UB</a>
<li><a href="node375.htm#Node375">CONST:MPI::THREAD_FUNNELED</a>
<li><a href="node375.htm#Node375">CONST:MPI::THREAD_MULTIPLE</a>
<li><a href="node375.htm#Node375">CONST:MPI::THREAD_SERIALIZED</a>
<li><a href="node375.htm#Node375">CONST:MPI::THREAD_SINGLE</a>
<li><a href="node336.htm#Node336">CONST:MPI::TWODOUBLE_PRECISION</a>
<li><a href="node336.htm#Node336">CONST:MPI::TWOINT</a>
<li><a href="node336.htm#Node336">CONST:MPI::TWOINTEGER</a>
<li><a href="node336.htm#Node336">CONST:MPI::TWOREAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::TYPECLASS_COMPLEX</a>
<li><a href="node375.htm#Node375">CONST:MPI::TYPECLASS_INTEGER</a>
<li><a href="node375.htm#Node375">CONST:MPI::TYPECLASS_REAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::UB</a>
<li><a href="node375.htm#Node375">CONST:MPI::UNDEFINED</a>
<li><a href="node375.htm#Node375">CONST:MPI::UNEQUAL</a>
<li><a href="node375.htm#Node375">CONST:MPI::UNIVERSE_SIZE</a>
<li><a href="node336.htm#Node336">CONST:MPI::UNSIGNED</a>
<li><a href="node336.htm#Node336">CONST:MPI::UNSIGNED_CHAR</a>
<li><a href="node336.htm#Node336">CONST:MPI::UNSIGNED_LONG</a>
<li><a href="node336.htm#Node336">CONST:MPI::UNSIGNED_LONG_LONG</a>
<li><a href="node336.htm#Node336">CONST:MPI::UNSIGNED_SHORT</a>
<li><a href="node336.htm#Node336">CONST:MPI::WCHAR</a>
<li><a href="node375.htm#Node375">CONST:MPI::WIN_BASE</a>
<li><a href="node375.htm#Node375">CONST:MPI::WIN_DISP_UNIT</a>
<li><a href="node375.htm#Node375">CONST:MPI::WIN_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI::WIN_SIZE</a>
<li><a href="node375.htm#Node375">CONST:MPI::WTIME_IS_GLOBAL</a>
<li><a href="node152.htm#Node152">CONST:MPI::Win</a>
<li><a href="node231.htm#Node231">CONST:MPI::Win|uu</a>
<li><a href="node106.htm#Node106">CONST:MPI_2DOUBLE_PRECISION</a>
<li><a href="node106.htm#Node106">CONST:MPI_2INT</a>
<li><a href="node106.htm#Node106">CONST:MPI_2INTEGER</a>
<li><a href="node106.htm#Node106">CONST:MPI_2REAL</a>
<li><a href="node26.htm#Node26">CONST:MPI_ADDRESS_KIND</a>
<li><a href="node44.htm#Node44">CONST:MPI_ADDRESS_KIND)</a>
<li><a href="node26.htm#Node26">CONST:MPI_ADDRESS_KIND|uu</a>
<li><a href="node44.htm#Node44">CONST:MPI_AINT</a>
<li><a href="node46.htm#Node46">CONST:MPI_ANY_SOURCE</a>
<li><a href="node24.htm#Node24">CONST:MPI_ANY_TAG</a>
<li><a href="node224.htm#Node224">CONST:MPI_APPNUM</a>
<li><a href="node24.htm#Node24">CONST:MPI_ARGVS_NULL</a>
<li><a href="node24.htm#Node24">CONST:MPI_ARGV_NULL</a>
<li><a href="node26.htm#Node26">CONST:MPI_Aint</a>
<li><a href="node26.htm#Node26">CONST:MPI_Aint|uu</a>
<li><a href="node375.htm#Node375">CONST:MPI_BAND</a>
<li><a href="node375.htm#Node375">CONST:MPI_BOR</a>
<li><a href="node18.htm#Node18">CONST:MPI_BOTTOM</a>
<li><a href="node56.htm#Node56">CONST:MPI_BSEND_OVERHEAD</a>
<li><a href="node375.htm#Node375">CONST:MPI_BXOR</a>
<li><a href="node44.htm#Node44">CONST:MPI_BYTE</a>
<li><a href="node375.htm#Node375">CONST:MPI_CART</a>
<li><a href="node44.htm#Node44">CONST:MPI_CHAR</a>
<li><a href="node44.htm#Node44">CONST:MPI_CHARACTER</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_CONTIGUOUS</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_DARRAY</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_DUP</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_F90_COMPLEX</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_F90_INTEGER</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_F90_REAL</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_HINDEXED</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_HINDEXED_INTEGER</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_HVECTOR</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_HVECTOR_INTEGER</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_INDEXED</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_INDEXED_BLOCK</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_NAMED</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_RESIZED</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_STRUCT</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_STRUCT_INTEGER</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_SUBARRAY</a>
<li><a href="node82.htm#Node82">CONST:MPI_COMBINER_VECTOR</a>
<li><a href="node187.htm#Node187">CONST:MPI_COMM-</a>
<li><a href="node127.htm#Node127">CONST:MPI_COMM_NULL</a>
<li><a href="node156.htm#Node156">CONST:MPI_COMM_PARENT</a>
<li><a href="node127.htm#Node127">CONST:MPI_COMM_SELF</a>
<li><a href="node24.htm#Node24">CONST:MPI_COMM_WORLD</a>
<li><a href="node44.htm#Node44">CONST:MPI_COMPLEX</a>
<li><a href="node375.htm#Node375">CONST:MPI_COMPLEX16</a>
<li><a href="node375.htm#Node375">CONST:MPI_COMPLEX32</a>
<li><a href="node375.htm#Node375">CONST:MPI_COMPLEX4</a>
<li><a href="node375.htm#Node375">CONST:MPI_COMPLEX8</a>
<li><a href="node133.htm#Node133">CONST:MPI_CONGRUENT</a>
<li><a href="node291.htm#Node293">CONST:MPI_CONVERSION_FN_NULL</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_BOOL</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_COMPLEX</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_DOUBLE_COMPLEX</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_FLOAT_COMPLEX</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_FLOAT_COMPLEX (as a synonym)</a>
<li><a href="node44.htm#Node44">CONST:MPI_C_LONG_DOUBLE_COMPLEX</a>
<li><a href="node130.htm#Node130">CONST:MPI_Comm</a>
<li><a href="node43.htm#Node43">CONST:MPI_Comm|uu</a>
<li><a href="node32.htm#Node32">CONST:MPI_DATATYPE</a>
<li><a href="node78.htm#Node78">CONST:MPI_DATATYPE_NULL</a>
<li><a href="node274.htm#Node274">CONST:MPI_DISPLACEMENT_CURRENT</a>
<li><a href="node73.htm#Node73">CONST:MPI_DISTRIBUTE_BLOCK</a>
<li><a href="node73.htm#Node73">CONST:MPI_DISTRIBUTE_CYCLIC</a>
<li><a href="node73.htm#Node73">CONST:MPI_DISTRIBUTE_DFLT_DARG</a>
<li><a href="node73.htm#Node73">CONST:MPI_DISTRIBUTE_NONE</a>
<li><a href="node375.htm#Node375">CONST:MPI_DIST_GRAPH</a>
<li><a href="node44.htm#Node44">CONST:MPI_DOUBLE</a>
<li><a href="node44.htm#Node44">CONST:MPI_DOUBLE_COMPLEX</a>
<li><a href="node106.htm#Node106">CONST:MPI_DOUBLE_INT</a>
<li><a href="node44.htm#Node44">CONST:MPI_DOUBLE_PRECISION</a>
<li><a href="node375.htm#Node375">CONST:MPI_DUP_FN</a>
<li><a href="node343.htm#Node348">CONST:MPI_Datatype</a>
<li><a href="node71.htm#Node71">CONST:MPI_Datatype|uu</a>
<li><a href="node24.htm#Node24">CONST:MPI_ERRCODES_IGNORE</a>
<li><a href="node191.htm#Node191">CONST:MPI_ERRHANDLER_NULL</a>
<li><a href="node47.htm#Node47">CONST:MPI_ERROR</a>
<li><a href="node187.htm#Node187">CONST:MPI_ERRORS_ARE_FATAL</a>
<li><a href="node187.htm#Node187">CONST:MPI_ERRORS_RETURN</a>
<li><a href="node191.htm#Node191">CONST:MPI_ERROR_STRING</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_ACCESS</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_AMODE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_ARG</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_ASSERT</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_BAD_FILE</a>
<li><a href="node186.htm#Node186">CONST:MPI_ERR_BASE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_BUFFER</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_COMM</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_CONVERSION</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_COUNT</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_DIMS</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_DISP</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_DUP_DATAREP</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_FILE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_FILE_EXISTS</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_FILE_IN_USE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_GROUP</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_INFO</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_INFO_KEY</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_INFO_NOKEY</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_INFO_VALUE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_INTERN</a>
<li><a href="node47.htm#Node47">CONST:MPI_ERR_IN_STATUS</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_IO</a>
<li><a href="node154.htm#Node154">CONST:MPI_ERR_KEYVAL</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_LASTCODE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_LOCKTYPE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_NAME</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_NOT_SAME</a>
<li><a href="node186.htm#Node186">CONST:MPI_ERR_NO_MEM</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_NO_SPACE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_NO_SUCH_FILE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_OP</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_OTHER</a>
<li><a href="node62.htm#Node62">CONST:MPI_ERR_PENDING</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_PORT</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_QUOTA</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_RANK</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_READ_ONLY</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_REQUEST</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_RMA_CONFLICT</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_RMA_SYNC</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_ROOT</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_SERVICE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_SIZE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_SPAWN</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_TAG</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_TOPOLOGY</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_TRUNCATE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_TYPE</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_UNKNOWN</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_UNSUPPORTED_DATAREP</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_UNSUPPORTED_OPERATION</a>
<li><a href="node192.htm#Node192">CONST:MPI_ERR_WIN</a>
<li><a href="node188.htm#Node188">CONST:MPI_Errhandler</a>
<li><a href="node188.htm#Node188">CONST:MPI_Errhandler|uu</a>
<li><a href="node266.htm#Node266">CONST:MPI_FILE_NULL</a>
<li><a href="node44.htm#Node44">CONST:MPI_FLOAT</a>
<li><a href="node19.htm#Node19">CONST:MPI_FLOAT_INT</a>
<li><a href="node362.htm#Node362">CONST:MPI_F_STATUSES_IGNORE</a>
<li><a href="node362.htm#Node362">CONST:MPI_F_STATUS_IGNORE</a>
<li><a href="node190.htm#Node190">CONST:MPI_File</a>
<li><a href="node265.htm#Node265">CONST:MPI_File|uu</a>
<li><a href="node361.htm#Node361">CONST:MPI_Fint</a>
<li><a href="node375.htm#Node375">CONST:MPI_GRAPH</a>
<li><a href="node124.htm#Node124">CONST:MPI_GROUP_EMPTY</a>
<li><a href="node124.htm#Node124">CONST:MPI_GROUP_NULL</a>
<li><a href="node129.htm#Node129">CONST:MPI_Group</a>
<li><a href="node129.htm#Node129">CONST:MPI_Group|uu</a>
<li><a href="node181.htm#Node181">CONST:MPI_HOST</a>
<li><a href="node129.htm#Node129">CONST:MPI_IDENT</a>
<li><a href="node172.htm#Node172">CONST:MPI_INFO_NULL</a>
<li><a href="node19.htm#Node19">CONST:MPI_INT</a>
<li><a href="node44.htm#Node44">CONST:MPI_INT16_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_INT32_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_INT64_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_INT8_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_INTEGER</a>
<li><a href="node44.htm#Node44">CONST:MPI_INTEGER1</a>
<li><a href="node375.htm#Node375">CONST:MPI_INTEGER16</a>
<li><a href="node44.htm#Node44">CONST:MPI_INTEGER2</a>
<li><a href="node44.htm#Node44">CONST:MPI_INTEGER4</a>
<li><a href="node353.htm#Node355">CONST:MPI_INTEGER8</a>
<li><a href="node82.htm#Node82">CONST:MPI_INTEGER_KIND</a>
<li><a href="node24.htm#Node24">CONST:MPI_IN_PLACE</a>
<li><a href="node181.htm#Node181">CONST:MPI_IO</a>
<li><a href="node186.htm#Node186">CONST:MPI_Info</a>
<li><a href="node199.htm#Node199">CONST:MPI_Info|uu</a>
<li><a href="node151.htm#Node151">CONST:MPI_KEYVAL_INVALID</a>
<li><a href="node375.htm#Node375">CONST:MPI_LAND</a>
<li><a href="node193.htm#Node193">CONST:MPI_LASTUSEDCODE</a>
<li><a href="node29.htm#Node29">CONST:MPI_LB</a>
<li><a href="node241.htm#Node241">CONST:MPI_LOCK_EXCLUSIVE</a>
<li><a href="node241.htm#Node241">CONST:MPI_LOCK_SHARED</a>
<li><a href="node44.htm#Node44">CONST:MPI_LOGICAL</a>
<li><a href="node44.htm#Node44">CONST:MPI_LONG</a>
<li><a href="node44.htm#Node44">CONST:MPI_LONG_DOUBLE</a>
<li><a href="node375.htm#Node375">CONST:MPI_LONG_DOUBLE_INT</a>
<li><a href="node106.htm#Node106">CONST:MPI_LONG_INT</a>
<li><a href="node44.htm#Node44">CONST:MPI_LONG_LONG</a>
<li><a href="node44.htm#Node44">CONST:MPI_LONG_LONG_INT</a>
<li><a href="node375.htm#Node375">CONST:MPI_LOR</a>
<li><a href="node375.htm#Node375">CONST:MPI_LXOR</a>
<li><a href="node103.htm#Node103">CONST:MPI_MAX</a>
<li><a href="node104.htm#Node104">CONST:MPI_MAXLOC</a>
<li><a href="node274.htm#Node274">CONST:MPI_MAX_DATAREP_STRING</a>
<li><a href="node191.htm#Node191">CONST:MPI_MAX_ERROR_STRING</a>
<li><a href="node192.htm#Node192">CONST:MPI_MAX_INFO_KEY</a>
<li><a href="node192.htm#Node192">CONST:MPI_MAX_INFO_VAL</a>
<li><a href="node156.htm#Node156">CONST:MPI_MAX_OBJECT_NAME</a>
<li><a href="node214.htm#Node214">CONST:MPI_MAX_PORT_NAME</a>
<li><a href="node181.htm#Node185">CONST:MPI_MAX_PROCESSOR_NAME</a>
<li><a href="node375.htm#Node375">CONST:MPI_MIN</a>
<li><a href="node104.htm#Node104">CONST:MPI_MINLOC</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_APPEND</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_CREATE</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_DELETE_ON_CLOSE</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_EXCL</a>
<li><a href="node242.htm#Node242">CONST:MPI_MODE_NOCHECK</a>
<li><a href="node242.htm#Node242">CONST:MPI_MODE_NOPRECEDE</a>
<li><a href="node242.htm#Node242">CONST:MPI_MODE_NOPUT</a>
<li><a href="node242.htm#Node242">CONST:MPI_MODE_NOSTORE</a>
<li><a href="node242.htm#Node242">CONST:MPI_MODE_NOSUCCEED</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_RDONLY</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_RDWR</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_SEQUENTIAL</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_UNIQUE_OPEN</a>
<li><a href="node265.htm#Node265">CONST:MPI_MODE_WRONLY</a>
<li><a href="node375.htm#Node375">CONST:MPI_NULL_COPY_FN</a>
<li><a href="node375.htm#Node375">CONST:MPI_NULL_DELETE_FN</a>
<li><a href="node44.htm#Node44">CONST:MPI_OFFSET</a>
<li><a href="node44.htm#Node44">CONST:MPI_OFFSET </a>
<li><a href="node44.htm#Node44">CONST:MPI_OFFSET_KIND</a>
<li><a href="node27.htm#Node27">CONST:MPI_OFFSET_KIND|uu</a>
<li><a href="node107.htm#Node107">CONST:MPI_OP_NULL</a>
<li><a href="node23.htm#Node23">CONST:MPI_ORDER_C</a>
<li><a href="node23.htm#Node23">CONST:MPI_ORDER_FORTRAN</a>
<li><a href="node27.htm#Node27">CONST:MPI_Offset</a>
<li><a href="node27.htm#Node27">CONST:MPI_Offset|uu</a>
<li><a href="node103.htm#Node103">CONST:MPI_Op</a>
<li><a href="node107.htm#Node107">CONST:MPI_Op|uu</a>
<li><a href="node44.htm#Node44">CONST:MPI_PACKED</a>
<li><a href="node41.htm#Node41">CONST:MPI_PROC_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI_PROD</a>
<li><a href="node44.htm#Node44">CONST:MPI_REAL</a>
<li><a href="node375.htm#Node375">CONST:MPI_REAL16</a>
<li><a href="node44.htm#Node44">CONST:MPI_REAL2</a>
<li><a href="node44.htm#Node44">CONST:MPI_REAL4</a>
<li><a href="node44.htm#Node44">CONST:MPI_REAL8</a>
<li><a href="node237.htm#Node237">CONST:MPI_REPLACE</a>
<li><a href="node60.htm#Node60">CONST:MPI_REQUEST_NULL</a>
<li><a href="node91.htm#Node91">CONST:MPI_ROOT</a>
<li><a href="node59.htm#Node59">CONST:MPI_Request</a>
<li><a href="node60.htm#Node60">CONST:MPI_Request|uu</a>
<li><a href="node282.htm#Node282">CONST:MPI_SEEK_CUR</a>
<li><a href="node282.htm#Node282">CONST:MPI_SEEK_END</a>
<li><a href="node282.htm#Node282">CONST:MPI_SEEK_SET</a>
<li><a href="node44.htm#Node44">CONST:MPI_SHORT</a>
<li><a href="node375.htm#Node375">CONST:MPI_SHORT_INT</a>
<li><a href="node44.htm#Node44">CONST:MPI_SIGNED_CHAR</a>
<li><a href="node129.htm#Node129">CONST:MPI_SIMILAR</a>
<li><a href="node47.htm#Node47">CONST:MPI_SOURCE</a>
<li><a href="node32.htm#Node32">CONST:MPI_STATUS</a>
<li><a href="node22.htm#Node22">CONST:MPI_STATUSES_IGNORE</a>
<li><a href="node18.htm#Node18">CONST:MPI_STATUS_IGNORE</a>
<li><a href="node47.htm#Node47">CONST:MPI_STATUS_SIZE</a>
<li><a href="node180.htm#Node180">CONST:MPI_SUBVERSION</a>
<li><a href="node30.htm#Node30">CONST:MPI_SUCCESS</a>
<li><a href="node371.htm#Node371">CONST:MPI_SUM</a>
<li><a href="node47.htm#Node47">CONST:MPI_Status</a>
<li><a href="node46.htm#Node46">CONST:MPI_Status|uu</a>
<li><a href="node47.htm#Node47">CONST:MPI_TAG</a>
<li><a href="node45.htm#Node45">CONST:MPI_TAG_UB</a>
<li><a href="node260.htm#Node260">CONST:MPI_THREAD_FUNNELED</a>
<li><a href="node260.htm#Node260">CONST:MPI_THREAD_MULTIPLE</a>
<li><a href="node260.htm#Node260">CONST:MPI_THREAD_SERIALIZED</a>
<li><a href="node260.htm#Node260">CONST:MPI_THREAD_SINGLE</a>
<li><a href="node353.htm#Node355">CONST:MPI_TYPECLASS_COMPLEX</a>
<li><a href="node353.htm#Node355">CONST:MPI_TYPECLASS_INTEGER</a>
<li><a href="node353.htm#Node355">CONST:MPI_TYPECLASS_REAL</a>
<li><a href="node19.htm#Node19">CONST:MPI_UB</a>
<li><a href="node44.htm#Node44">CONST:MPI_UINT16_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_UINT32_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_UINT64_T</a>
<li><a href="node44.htm#Node44">CONST:MPI_UINT8_T</a>
<li><a href="node47.htm#Node47">CONST:MPI_UNDEFINED</a>
<li><a href="node129.htm#Node129">CONST:MPI_UNEQUAL</a>
<li><a href="node204.htm#Node204">CONST:MPI_UNIVERSE_SIZE</a>
<li><a href="node44.htm#Node44">CONST:MPI_UNSIGNED</a>
<li><a href="node44.htm#Node44">CONST:MPI_UNSIGNED_CHAR</a>
<li><a href="node44.htm#Node44">CONST:MPI_UNSIGNED_LONG</a>
<li><a href="node44.htm#Node44">CONST:MPI_UNSIGNED_LONG_LONG</a>
<li><a href="node44.htm#Node44">CONST:MPI_UNSIGNED_SHORT</a>
<li><a href="node24.htm#Node24">CONST:MPI_UNWEIGHTED</a>
<li><a href="node180.htm#Node180">CONST:MPI_VERSION</a>
<li><a href="node44.htm#Node44">CONST:MPI_WCHAR</a>
<li><a href="node369.htm#Node369">CONST:MPI_WIN_BASE</a>
<li><a href="node375.htm#Node375">CONST:MPI_WIN_DISP_UNIT</a>
<li><a href="node231.htm#Node231">CONST:MPI_WIN_NULL</a>
<li><a href="node375.htm#Node375">CONST:MPI_WIN_SIZE</a>
<li><a href="node181.htm#Node181">CONST:MPI_WTIME_IS_GLOBAL</a>
<li><a href="node152.htm#Node152">CONST:MPI_Win</a>
<li><a href="node231.htm#Node231">CONST:MPI_Win|uu</a>
<li><a href="node48.htm#Node48">CONST:NULL</a>
<li><a href="node191.htm#Node191">CONST:PRINT</a>
<li><a href="node187.htm#Node187">CONST:WIN</a>
<li><a href="node187.htm#Node187">CONST:XXX</a>
<li><a href="node187.htm#Node187">CONST:_WORLD</a>
<li><a href="node50.htm#Node51">CONST:a</a>
<li><a href="node272.htm#Node273">CONST:access_style</a>
<li><a href="node225.htm#Node225">CONST:appnum</a>
<li><a href="node209.htm#Node209">CONST:arch</a>
<li><a href="node50.htm#Node51">CONST:b</a>
<li><a href="node272.htm#Node273">CONST:cb_block_size</a>
<li><a href="node272.htm#Node273">CONST:cb_buffer_size</a>
<li><a href="node272.htm#Node273">CONST:cb_nodes</a>
<li><a href="node55.htm#Node55">CONST:char**</a>
<li><a href="node272.htm#Node273">CONST:chunked</a>
<li><a href="node272.htm#Node273">CONST:chunked_item</a>
<li><a href="node272.htm#Node273">CONST:chunked_size</a>
<li><a href="node272.htm#Node273">CONST:collective_buffering</a>
<li><a href="node174.htm#Node174">CONST:dims[i]</a>
<li><a href="node174.htm#Node174">CONST:direction = i</a>
<li><a href="node191.htm#Node191">CONST:errorcode</a>
<li><a href="node288.htm#Node288">CONST:external32</a>
<li><a href="node60.htm#Node60">CONST:false</a>
<li><a href="node209.htm#Node209">CONST:file</a>
<li><a href="node272.htm#Node273">CONST:file_perm</a>
<li><a href="node272.htm#Node273">CONST:filename</a>
<li><a href="node151.htm#Node151">CONST:flag = 0</a>
<li><a href="node151.htm#Node151">CONST:flag = 1</a>
<li><a href="node209.htm#Node209">CONST:host</a>
<li><a href="node74.htm#Node74">CONST:int</a>
<li><a href="node288.htm#Node288">CONST:internal</a>
<li><a href="node272.htm#Node273">CONST:io_node_list</a>
<li><a href="node217.htm#Node217">CONST:ip_address</a>
<li><a href="node217.htm#Node217">CONST:ip_port</a>
<li><a href="node288.htm#Node288">CONST:native</a>
<li><a href="node272.htm#Node273">CONST:nb_proc</a>
<li><a href="node231.htm#Node231">CONST:no_locks</a>
<li><a href="node272.htm#Node273">CONST:num_io_nodes</a>
<li><a href="node209.htm#Node209">CONST:path</a>
<li><a href="node272.htm#Node273">CONST:random</a>
<li><a href="node272.htm#Node273">CONST:read_mostly</a>
<li><a href="node272.htm#Node273">CONST:read_once</a>
<li><a href="node272.htm#Node273">CONST:reverse_sequential</a>
<li><a href="node272.htm#Node273">CONST:sequential</a>
<li><a href="node207.htm#Node207">CONST:soft</a>
<li><a href="node191.htm#Node191">CONST:string</a>
<li><a href="node272.htm#Node273">CONST:striping_factor</a>
<li><a href="node272.htm#Node273">CONST:striping_unit</a>
<li><a href="node19.htm#Node19">CONST:true</a>
<li><a href="node81.htm#Node81">CONST:v</a>
<li><a href="node150.htm#Node150">CONST:void *</a>
<li><a href="node55.htm#Node55">CONST:void*</a>
<li><a href="node55.htm#Node55">CONST:void**</a>
<li><a href="node209.htm#Node209">CONST:wdir</a>
<li><a href="node272.htm#Node273">CONST:write_mostly</a>
<li><a href="node272.htm#Node273">CONST:write_once</a>
<li><a href="node29.htm#Node29">COPY_FUNCTION</a>
<li><a href="node29.htm#Node29">DELETE_FUNCTION</a>
<li><a href="node369.htm#Node369">EXAMPLES:Attributes between languages</a>
<li><a href="node335.htm#Node335">EXAMPLES:C++ MPI class comparison operator</a>
<li><a href="node340.htm#Node340">EXAMPLES:C++ declarations in <tt> mpi.h</tt></a>
<li><a href="node334.htm#Node334">EXAMPLES:C++ deriving from C++ MPI class</a>
<li><a href="node337.htm#Node337">EXAMPLES:C++ handle assignement and comparison operators</a>
<li><a href="node335.htm#Node335">EXAMPLES:C++ handle assignment operator</a>
<li><a href="node335.htm#Node335">EXAMPLES:C++ handle scope destruction</a>
<li><a href="node337.htm#Node337">EXAMPLES:C++ illegal communicator handle initialization</a>
<li><a href="node340.htm#Node340">EXAMPLES:C++ profiling example</a>
<li><a href="node361.htm#Node361">EXAMPLES:C/C++ handle conversion</a>
<li><a href="node361.htm#Node361">EXAMPLES:C/Fortran handle conversion</a>
<li><a href="node62.htm#Node62">EXAMPLES:Client-server code</a>
<li><a href="node64.htm#Node64">EXAMPLES:Client-server code!with blocking probe</a>
<li><a href="node64.htm#Node64">EXAMPLES:Client-server code!with blocking probe, wrong</a>
<li><a href="node83.htm#Node83">EXAMPLES:Datatype!3D array</a>
<li><a href="node83.htm#Node83">EXAMPLES:Datatype!absolute addresses</a>
<li><a href="node83.htm#Node83">EXAMPLES:Datatype!array of structures</a>
<li><a href="node84.htm#Node84">EXAMPLES:Datatype!elaborate example</a>
<li><a href="node80.htm#Node80">EXAMPLES:Datatype!matching type</a>
<li><a href="node83.htm#Node83">EXAMPLES:Datatype!matrix transpose</a>
<li><a href="node83.htm#Node83">EXAMPLES:Datatype!union</a>
<li><a href="node50.htm#Node50">EXAMPLES:Datatypes!matching</a>
<li><a href="node50.htm#Node50">EXAMPLES:Datatypes!not matching</a>
<li><a href="node50.htm#Node50">EXAMPLES:Datatypes!untyped</a>
<li><a href="node54.htm#Node54">EXAMPLES:Deadlock!if not buffered</a>
<li><a href="node118.htm#Node118">EXAMPLES:Deadlock!with MPI_Bcast</a>
<li><a href="node54.htm#Node54">EXAMPLES:Deadlock!wrong message exchange</a>
<li><a href="node353.htm#Node355">EXAMPLES:Fortran 90 MPI_TYPE_MATCH_SIZE implementation</a>
<li><a href="node343.htm#Node344">EXAMPLES:Fortran 90 copying and sequence problem</a>
<li><a href="node343.htm#Node347">EXAMPLES:Fortran 90 derived types</a>
<li><a href="node353.htm#Node356">EXAMPLES:Fortran 90 heterogeneous communication (unsafe)</a>
<li><a href="node353.htm#Node354">EXAMPLES:Fortran 90 illegal KIND</a>
<li><a href="node343.htm#Node348">EXAMPLES:Fortran 90 register optimization</a>
<li><a href="node134.htm#Node134">EXAMPLES:Intercommunicator</a>
<li><a href="node372.htm#Node372">EXAMPLES:Interlanguage communication</a>
<li><a href="node54.htm#Node54">EXAMPLES:Intertwined matching pairs</a>
<li><a href="node48.htm#Node48">EXAMPLES:MPI::Comm::Probe</a>
<li><a href="node237.htm#Node237">EXAMPLES:MPI_ACCUMULATE</a>
<li><a href="node74.htm#Node74">EXAMPLES:MPI_ADDRESS</a>
<li><a href="node186.htm#Node186">EXAMPLES:MPI_ALLOC_MEM</a>
<li><a href="node109.htm#Node109">EXAMPLES:MPI_ALLREDUCE</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Address</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Aint</a>
<li><a href="node100.htm#Node100">EXAMPLES:MPI_Allgather</a>
<li><a href="node186.htm#Node186">EXAMPLES:MPI_Alloc_mem</a>
<li><a href="node54.htm#Node54">EXAMPLES:MPI_BSEND</a>
<li><a href="node50.htm#Node50">EXAMPLES:MPI_BYTE</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Barrier</a>
<li><a href="node94.htm#Node94">EXAMPLES:MPI_Bcast</a>
<li><a href="node55.htm#Node55">EXAMPLES:MPI_Buffer_attach</a>
<li><a href="node55.htm#Node55">EXAMPLES:MPI_Buffer_detach</a>
<li><a href="node174.htm#Node174">EXAMPLES:MPI_CART_COORDS</a>
<li><a href="node177.htm#Node177">EXAMPLES:MPI_CART_GET</a>
<li><a href="node174.htm#Node174">EXAMPLES:MPI_CART_RANK</a>
<li><a href="node174.htm#Node174">EXAMPLES:MPI_CART_SHIFT</a>
<li><a href="node175.htm#Node175">EXAMPLES:MPI_CART_SUB</a>
<li><a href="node50.htm#Node51">EXAMPLES:MPI_CHARACTER</a>
<li><a href="node207.htm#Node207">EXAMPLES:MPI_COMM_SPAWN</a>
<li><a href="node208.htm#Node208">EXAMPLES:MPI_COMM_SPAWN_MULTIPLE</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Cancel</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Comm_create</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Comm_group</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Comm_remote_size</a>
<li><a href="node207.htm#Node207">EXAMPLES:MPI_Comm_spawn</a>
<li><a href="node208.htm#Node208">EXAMPLES:MPI_Comm_spawn_multiple</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Comm_split</a>
<li><a href="node170.htm#Node170">EXAMPLES:MPI_DIMS_CREATE</a>
<li><a href="node172.htm#Node172">EXAMPLES:MPI_DIST_GRAPH_CREATE</a>
<li><a href="node172.htm#Node172">EXAMPLES:MPI_DIST_GRAPH_CREATE_ADJACENT</a>
<li><a href="node172.htm#Node172">EXAMPLES:MPI_Dist_graph_create</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_FILE_CLOSE</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_FILE_GET_AMODE</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_FILE_IREAD</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_FILE_OPEN</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_FILE_READ</a>
<li><a href="node305.htm#Node305">EXAMPLES:MPI_FILE_SET_ATOMICITY</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_FILE_SET_VIEW</a>
<li><a href="node305.htm#Node305">EXAMPLES:MPI_FILE_SYNC</a>
<li><a href="node186.htm#Node186">EXAMPLES:MPI_FREE_MEM</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Finalize</a>
<li><a href="node236.htm#Node236">EXAMPLES:MPI_GET</a>
<li><a href="node74.htm#Node74">EXAMPLES:MPI_GET_ADDRESS</a>
<li><a href="node80.htm#Node80">EXAMPLES:MPI_GET_COUNT</a>
<li><a href="node80.htm#Node80">EXAMPLES:MPI_GET_ELEMENTS</a>
<li><a href="node171.htm#Node171">EXAMPLES:MPI_GRAPH_CREATE</a>
<li><a href="node173.htm#Node173">EXAMPLES:MPI_GRAPH_NEIGHBORS</a>
<li><a href="node173.htm#Node173">EXAMPLES:MPI_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node84.htm#Node84">EXAMPLES:MPI_Gather</a>
<li><a href="node84.htm#Node84">EXAMPLES:MPI_Gatherv</a>
<li><a href="node244.htm#Node244">EXAMPLES:MPI_Get</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Get_address</a>
<li><a href="node255.htm#Node255">EXAMPLES:MPI_Grequest_complete</a>
<li><a href="node255.htm#Node255">EXAMPLES:MPI_Grequest_start</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Group_free</a>
<li><a href="node134.htm#Node134">EXAMPLES:MPI_Group_incl</a>
<li><a href="node60.htm#Node60">EXAMPLES:MPI_IRECV</a>
<li><a href="node60.htm#Node60">EXAMPLES:MPI_ISEND</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Iprobe</a>
<li><a href="node107.htm#Node108">EXAMPLES:MPI_Op_create</a>
<li><a href="node64.htm#Node64">EXAMPLES:MPI_PROBE</a>
<li><a href="node84.htm#Node84">EXAMPLES:MPI_Pack</a>
<li><a href="node84.htm#Node84">EXAMPLES:MPI_Pack_size</a>
<li><a href="node240.htm#Node240">EXAMPLES:MPI_Put</a>
<li><a href="node50.htm#Node50">EXAMPLES:MPI_RECV</a>
<li><a href="node104.htm#Node104">EXAMPLES:MPI_REDUCE</a>
<li><a href="node60.htm#Node60">EXAMPLES:MPI_REQUEST_FREE</a>
<li><a href="node106.htm#Node106">EXAMPLES:MPI_Reduce</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Request_free</a>
<li><a href="node50.htm#Node50">EXAMPLES:MPI_SEND</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_SENDRECV</a>
<li><a href="node174.htm#Node174">EXAMPLES:MPI_SENDRECV_REPLACE</a>
<li><a href="node54.htm#Node54">EXAMPLES:MPI_SSEND</a>
<li><a href="node117.htm#Node117">EXAMPLES:MPI_Scan</a>
<li><a href="node98.htm#Node98">EXAMPLES:MPI_Scatter</a>
<li><a href="node98.htm#Node98">EXAMPLES:MPI_Scatterv</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Send</a>
<li><a href="node78.htm#Node78">EXAMPLES:MPI_TYPE_COMMIT</a>
<li><a href="node71.htm#Node71">EXAMPLES:MPI_TYPE_CONTIGUOUS</a>
<li><a href="node73.htm#Node73">EXAMPLES:MPI_TYPE_CREATE_DARRAY</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_TYPE_CREATE_HVECTOR</a>
<li><a href="node236.htm#Node236">EXAMPLES:MPI_TYPE_CREATE_INDEXED_BLOCK</a>
<li><a href="node71.htm#Node71">EXAMPLES:MPI_TYPE_CREATE_STRUCT</a>
<li><a href="node311.htm#Node311">EXAMPLES:MPI_TYPE_CREATE_SUBARRAY</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_TYPE_EXTENT</a>
<li><a href="node236.htm#Node236">EXAMPLES:MPI_TYPE_FREE</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_TYPE_HVECTOR</a>
<li><a href="node71.htm#Node71">EXAMPLES:MPI_TYPE_INDEXED</a>
<li><a href="node71.htm#Node71">EXAMPLES:MPI_TYPE_STRUCT</a>
<li><a href="node71.htm#Node71">EXAMPLES:MPI_TYPE_VECTOR</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Test_cancelled</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_commit</a>
<li><a href="node96.htm#Node96">EXAMPLES:MPI_Type_contiguous</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_create_hvector</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_create_struct</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_extent</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_get_contents</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_get_envelope</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_hvector</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_indexed</a>
<li><a href="node83.htm#Node83">EXAMPLES:MPI_Type_struct</a>
<li><a href="node96.htm#Node96">EXAMPLES:MPI_Type_vector</a>
<li><a href="node84.htm#Node84">EXAMPLES:MPI_Unpack</a>
<li><a href="node60.htm#Node60">EXAMPLES:MPI_WAIT</a>
<li><a href="node62.htm#Node62">EXAMPLES:MPI_WAITANY</a>
<li><a href="node62.htm#Node62">EXAMPLES:MPI_WAITSOME</a>
<li><a href="node236.htm#Node236">EXAMPLES:MPI_WIN_CREATE</a>
<li><a href="node236.htm#Node236">EXAMPLES:MPI_WIN_FENCE</a>
<li><a href="node240.htm#Node240">EXAMPLES:MPI_Win_complete</a>
<li><a href="node244.htm#Node244">EXAMPLES:MPI_Win_fence</a>
<li><a href="node241.htm#Node241">EXAMPLES:MPI_Win_lock</a>
<li><a href="node244.htm#Node244">EXAMPLES:MPI_Win_post</a>
<li><a href="node240.htm#Node240">EXAMPLES:MPI_Win_start</a>
<li><a href="node241.htm#Node241">EXAMPLES:MPI_Win_unlock</a>
<li><a href="node244.htm#Node244">EXAMPLES:MPI_Win_wait</a>
<li><a href="node54.htm#Node54">EXAMPLES:Message exchange (ping-pong)</a>
<li><a href="node118.htm#Node118">EXAMPLES:Non-deterministic program with MPI_Bcast</a>
<li><a href="node54.htm#Node54">EXAMPLES:Non-overtaking messages</a>
<li><a href="node60.htm#Node60">EXAMPLES:Nonblocking operations</a>
<li><a href="node61.htm#Node61">EXAMPLES:Nonblocking operations!message ordering</a>
<li><a href="node61.htm#Node61">EXAMPLES:Nonblocking operations!progress</a>
<li><a href="node318.htm#Node318">EXAMPLES:Profiling interface</a>
<li><a href="node258.htm#Node258">EXAMPLES:Threads and <font face="sans-serif"> MPI</font></a>
<li><a href="node69.htm#Node69">EXAMPLES:Typemap</a>
<li><a href="node198.htm#Node198">EXAMPLES:mpiexec</a>
<li><a href="node32.htm#Node32">MPI::Is_finalized</a>
<li><a href="node107.htm#Node107">MPI_ABORT</a>
<li><a href="node195.htm#Node195">MPI_ABORT( comm, errorcode )</a>
<li><a href="node229.htm#Node229">MPI_ACCUMULATE</a>
<li><a href="node237.htm#Node237">MPI_ACCUMULATE(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, 
target_datatype, op, win)</a>
<li><a href="node29.htm#Node29">MPI_ADDRESS</a>
<li><a href="node327.htm#Node327">MPI_ADDRESS(location, address)</a>
<li><a href="node193.htm#Node193">MPI_ADD_ERROR_CLASS</a>
<li><a href="node193.htm#Node193">MPI_ADD_ERROR_CLASS(errorclass)</a>
<li><a href="node193.htm#Node193">MPI_ADD_ERROR_CODE(errorclass, errorcode)</a>
<li><a href="node193.htm#Node193">MPI_ADD_ERROR_STRING</a>
<li><a href="node193.htm#Node193">MPI_ADD_ERROR_STRING(errorcode, string)</a>
<li><a href="node87.htm#Node87">MPI_ALLGATHER</a>
<li><a href="node99.htm#Node99">MPI_ALLGATHER( sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node99.htm#Node99">MPI_ALLGATHER(...)</a>
<li><a href="node87.htm#Node87">MPI_ALLGATHERV</a>
<li><a href="node99.htm#Node99">MPI_ALLGATHERV( sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, comm)</a>
<li><a href="node186.htm#Node186">MPI_ALLOC_MEM</a>
<li><a href="node186.htm#Node186">MPI_ALLOC_MEM(size, info, baseptr)</a>
<li><a href="node87.htm#Node87">MPI_ALLREDUCE</a>
<li><a href="node109.htm#Node109">MPI_ALLREDUCE( sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node87.htm#Node87">MPI_ALLTOALL</a>
<li><a href="node101.htm#Node101">MPI_ALLTOALL(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node87.htm#Node87">MPI_ALLTOALLV</a>
<li><a href="node101.htm#Node101">MPI_ALLTOALLV(sendbuf, sendcounts, sdispls, sendtype, 
recvbuf, recvcounts, rdispls, recvtype, comm)</a>
<li><a href="node87.htm#Node87">MPI_ALLTOALLW</a>
<li><a href="node101.htm#Node101">MPI_ALLTOALLW(sendbuf, sendcounts, sdispls, sendtypes, 
recvbuf, recvcounts, rdispls, recvtypes, comm)</a>
<li><a href="node29.htm#Node29">MPI_ATTR_DELETE</a>
<li><a href="node327.htm#Node327">MPI_ATTR_DELETE(comm, keyval)</a>
<li><a href="node29.htm#Node29">MPI_ATTR_GET</a>
<li><a href="node327.htm#Node327">MPI_ATTR_GET(comm, keyval, attribute_val, flag)</a>
<li><a href="node29.htm#Node29">MPI_ATTR_PUT</a>
<li><a href="node327.htm#Node327">MPI_ATTR_PUT(comm, keyval, attribute_val)</a>
<li><a href="node87.htm#Node87">MPI_BARRIER</a>
<li><a href="node92.htm#Node92">MPI_BARRIER( comm )</a>
<li><a href="node87.htm#Node87">MPI_BCAST</a>
<li><a href="node93.htm#Node93">MPI_BCAST( buffer, count, datatype, root, comm )</a>
<li><a href="node56.htm#Node56">MPI_BSEND</a>
<li><a href="node53.htm#Node53">MPI_BSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node65.htm#Node65">MPI_BSEND_INIT</a>
<li><a href="node65.htm#Node65">MPI_BSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node32.htm#Node32">MPI_BUFFER_ATTACH</a>
<li><a href="node55.htm#Node55">MPI_BUFFER_ATTACH(buffer, size)</a>
<li><a href="node195.htm#Node195">MPI_BUFFER_DETACH</a>
<li><a href="node55.htm#Node55">MPI_BUFFER_DETACH(buffer_addr, size)</a>
<li><a href="node54.htm#Node54">MPI_CANCEL</a>
<li><a href="node64.htm#Node64">MPI_CANCEL(request)</a>
<li><a href="node167.htm#Node167">MPI_CARTDIM_GET</a>
<li><a href="node173.htm#Node173">MPI_CARTDIM_GET(comm, ndims)</a>
<li><a href="node167.htm#Node167">MPI_CART_COORDS</a>
<li><a href="node173.htm#Node173">MPI_CART_COORDS(comm, rank, maxdims, coords)</a>
<li><a href="node143.htm#Node143">MPI_CART_CREATE</a>
<li><a href="node176.htm#Node176">MPI_CART_CREATE(comm, ndims, dims, 
periods, reorder, comm_cart)</a>
<li><a href="node169.htm#Node169">MPI_CART_CREATE(comm_old, ndims, dims, periods, reorder, comm_cart)</a>
<li><a href="node167.htm#Node167">MPI_CART_GET</a>
<li><a href="node173.htm#Node173">MPI_CART_GET(comm, maxdims, dims, periods, coords)</a>
<li><a href="node167.htm#Node167">MPI_CART_MAP</a>
<li><a href="node176.htm#Node176">MPI_CART_MAP(comm, ndims, dims, periods, newrank)</a>
<li><a href="node167.htm#Node167">MPI_CART_RANK</a>
<li><a href="node173.htm#Node173">MPI_CART_RANK(comm, coords, rank)</a>
<li><a href="node167.htm#Node167">MPI_CART_SHIFT</a>
<li><a href="node174.htm#Node174">MPI_CART_SHIFT(comm, direction, disp, rank_source, rank_dest)</a>
<li><a href="node167.htm#Node167">MPI_CART_SUB</a>
<li><a href="node175.htm#Node175">MPI_CART_SUB(comm, remain_dims, comm_new)</a>
<li><a href="node175.htm#Node175">MPI_CART_SUB(comm, remain_dims, newcomm)</a>
<li><a href="node214.htm#Node214">MPI_CLOSE_PORT</a>
<li><a href="node214.htm#Node214">MPI_CLOSE_PORT(port_name)</a>
<li><a href="node213.htm#Node213">MPI_COMM_ACCEPT</a>
<li><a href="node214.htm#Node214">MPI_COMM_ACCEPT(port_name, info, root, comm, newcomm)</a>
<li><a href="node361.htm#Node361">MPI_COMM_C2F|uu</a>
<li><a href="node193.htm#Node193">MPI_COMM_CALL_ERRHANDLER</a>
<li><a href="node193.htm#Node193">MPI_COMM_CALL_ERRHANDLER (comm, errorcode)</a>
<li><a href="node337.htm#Node337">MPI_COMM_CLONE|uu</a>
<li><a href="node144.htm#Node144">MPI_COMM_COMPARE</a>
<li><a href="node133.htm#Node133">MPI_COMM_COMPARE(comm1, comm2, result)</a>
<li><a href="node192.htm#Node192">MPI_COMM_CONNECT</a>
<li><a href="node215.htm#Node215">MPI_COMM_CONNECT(port_name, info, root, comm, 
newcomm)</a>
<li><a href="node131.htm#Node131">MPI_COMM_CREATE</a>
<li><a href="node134.htm#Node134">MPI_COMM_CREATE(comm, group, newcomm)</a>
<li><a href="node29.htm#Node29">MPI_COMM_CREATE_ERRHANDLER</a>
<li><a href="node188.htm#Node188">MPI_COMM_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node29.htm#Node29">MPI_COMM_CREATE_KEYVAL</a>
<li><a href="node151.htm#Node151">MPI_COMM_CREATE_KEYVAL(comm_copy_attr_fn, comm_delete_attr_fn, comm_keyval,  extra_state)</a>
<li><a href="node29.htm#Node29">MPI_COMM_DELETE_ATTR</a>
<li><a href="node151.htm#Node151">MPI_COMM_DELETE_ATTR(comm, comm_keyval)</a>
<li><a href="node154.htm#Node154">MPI_COMM_DISCONNECT</a>
<li><a href="node226.htm#Node226">MPI_COMM_DISCONNECT(comm)</a>
<li><a href="node130.htm#Node130">MPI_COMM_DUP</a>
<li><a href="node134.htm#Node134">MPI_COMM_DUP(comm, newcomm)</a>
<li><a href="node29.htm#Node29">MPI_COMM_DUP_FN</a>
<li><a href="node151.htm#Node151">MPI_COMM_DUP_FN|uu</a>
<li><a href="node361.htm#Node361">MPI_COMM_F2C|uu</a>
<li><a href="node131.htm#Node131">MPI_COMM_FREE</a>
<li><a href="node135.htm#Node135">MPI_COMM_FREE(comm)</a>
<li><a href="node29.htm#Node29">MPI_COMM_FREE_KEYVAL</a>
<li><a href="node151.htm#Node151">MPI_COMM_FREE_KEYVAL(comm_keyval)</a>
<li><a href="node29.htm#Node29">MPI_COMM_GET_ATTR</a>
<li><a href="node369.htm#Node369">MPI_COMM_GET_ATTR(MPI_COMM_WORLD, MPI_TAG_UB, val, flag, ierr)</a>
<li><a href="node151.htm#Node151">MPI_COMM_GET_ATTR(comm, comm_keyval, attribute_val, flag)</a>
<li><a href="node29.htm#Node29">MPI_COMM_GET_ERRHANDLER</a>
<li><a href="node188.htm#Node188">MPI_COMM_GET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node156.htm#Node156">MPI_COMM_GET_NAME</a>
<li><a href="node156.htm#Node156">MPI_COMM_GET_NAME (comm, comm_name, resultlen)</a>
<li><a href="node156.htm#Node156">MPI_COMM_GET_PARENT</a>
<li><a href="node207.htm#Node207">MPI_COMM_GET_PARENT(parent)</a>
<li><a href="node21.htm#Node21">MPI_COMM_GROUP</a>
<li><a href="node130.htm#Node130">MPI_COMM_GROUP(comm, group)</a>
<li><a href="node227.htm#Node227">MPI_COMM_JOIN</a>
<li><a href="node227.htm#Node227">MPI_COMM_JOIN(fd, intercomm)</a>
<li><a href="node29.htm#Node29">MPI_COMM_NULL_COPY_FN</a>
<li><a href="node151.htm#Node151">MPI_COMM_NULL_COPY_FN|uu</a>
<li><a href="node29.htm#Node29">MPI_COMM_NULL_DELETE_FN</a>
<li><a href="node151.htm#Node151">MPI_COMM_NULL_DELETE_FN|uu</a>
<li><a href="node133.htm#Node133">MPI_COMM_RANK</a>
<li><a href="node133.htm#Node133">MPI_COMM_RANK(comm, rank)</a>
<li><a href="node144.htm#Node144">MPI_COMM_REMOTE_GROUP(comm, group)</a>
<li><a href="node144.htm#Node144">MPI_COMM_REMOTE_SIZE</a>
<li><a href="node144.htm#Node144">MPI_COMM_REMOTE_SIZE(comm, size)</a>
<li><a href="node29.htm#Node29">MPI_COMM_SET_ATTR</a>
<li><a href="node151.htm#Node151">MPI_COMM_SET_ATTR(comm, comm_keyval, attribute_val)</a>
<li><a href="node29.htm#Node29">MPI_COMM_SET_ERRHANDLER</a>
<li><a href="node188.htm#Node188">MPI_COMM_SET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node156.htm#Node156">MPI_COMM_SET_NAME</a>
<li><a href="node156.htm#Node156">MPI_COMM_SET_NAME (comm, comm_name)</a>
<li><a href="node32.htm#Node32">MPI_COMM_SIZE</a>
<li><a href="node133.htm#Node133">MPI_COMM_SIZE(comm, size)</a>
<li><a href="node198.htm#Node198">MPI_COMM_SPAWN</a>
<li><a href="node207.htm#Node207">MPI_COMM_SPAWN(command, argv, maxprocs, info,  
root, comm, intercomm,  array_of_errcodes)</a>
<li><a href="node198.htm#Node198">MPI_COMM_SPAWN_MULTIPLE</a>
<li><a href="node208.htm#Node208">MPI_COMM_SPAWN_MULTIPLE(count, 
array_of_commands, array_of_argv, array_of_maxprocs,  
array_of_info, root, comm, intercomm, array_of_errcodes)</a>
<li><a href="node134.htm#Node134">MPI_COMM_SPLIT</a>
<li><a href="node176.htm#Node176">MPI_COMM_SPLIT(comm, color, key, comm_cart)</a>
<li><a href="node176.htm#Node176">MPI_COMM_SPLIT(comm, color, key, comm_graph)</a>
<li><a href="node176.htm#Node176">MPI_COMM_SPLIT(comm, color, key, comm_new)</a>
<li><a href="node134.htm#Node134">MPI_COMM_SPLIT(comm, color, key, newcomm)</a>
<li><a href="node143.htm#Node143">MPI_COMM_TEST_INTER</a>
<li><a href="node144.htm#Node144">MPI_COMM_TEST_INTER(comm, flag)</a>
<li><a href="node167.htm#Node167">MPI_DIMS_CREATE</a>
<li><a href="node170.htm#Node170">MPI_DIMS_CREATE(6, 2, dims)</a>
<li><a href="node170.htm#Node170">MPI_DIMS_CREATE(6, 3, dims)</a>
<li><a href="node170.htm#Node170">MPI_DIMS_CREATE(7, 2, dims)</a>
<li><a href="node170.htm#Node170">MPI_DIMS_CREATE(7, 3, dims)</a>
<li><a href="node170.htm#Node170">MPI_DIMS_CREATE(nnodes, ndims, dims)</a>
<li><a href="node167.htm#Node167">MPI_DIST_GRAPH_CREATE</a>
<li><a href="node172.htm#Node172">MPI_DIST_GRAPH_CREATE(comm_old, n, sources, degrees,  
destinations, weights, info, reorder, comm_dist_graph)</a>
<li><a href="node167.htm#Node167">MPI_DIST_GRAPH_CREATE_ADJACENT</a>
<li><a href="node172.htm#Node172">MPI_DIST_GRAPH_CREATE_ADJACENT(comm_old, indegree, sources, sourceweights,  
outdegree, destinations, destweights, info, reorder, comm_dist_graph)</a>
<li><a href="node173.htm#Node173">MPI_DIST_GRAPH_NEIGHBORS</a>
<li><a href="node173.htm#Node173">MPI_DIST_GRAPH_NEIGHBORS(comm, maxindegree, sources, sourceweights,  
    maxoutdegree, destinations, destweights)</a>
<li><a href="node173.htm#Node173">MPI_DIST_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node173.htm#Node173">MPI_DIST_GRAPH_NEIGHBORS_COUNT(comm, indegree, outdegree, weighted)</a>
<li><a href="node173.htm#Node173">MPI_DIST_GRAPH_NEIGHBOR_COUNT</a>
<li><a href="node167.htm#Node167">MPI_DIST_NEIGHBORS</a>
<li><a href="node167.htm#Node167">MPI_DIST_NEIGHBORS_COUNT</a>
<li><a href="node29.htm#Node29">MPI_DUP_FN</a>
<li><a href="node172.htm#Node172">MPI_Dist_graph_create</a>
<li><a href="node361.htm#Node361">MPI_ERRHANDLER_C2F|uu</a>
<li><a href="node29.htm#Node29">MPI_ERRHANDLER_CREATE</a>
<li><a href="node327.htm#Node327">MPI_ERRHANDLER_CREATE( function, errhandler )</a>
<li><a href="node361.htm#Node361">MPI_ERRHANDLER_F2C|uu</a>
<li><a href="node187.htm#Node187">MPI_ERRHANDLER_FREE</a>
<li><a href="node191.htm#Node191">MPI_ERRHANDLER_FREE( errhandler )</a>
<li><a href="node29.htm#Node29">MPI_ERRHANDLER_GET</a>
<li><a href="node327.htm#Node327">MPI_ERRHANDLER_GET( comm, errhandler )</a>
<li><a href="node29.htm#Node29">MPI_ERRHANDLER_SET</a>
<li><a href="node327.htm#Node327">MPI_ERRHANDLER_SET( comm, errhandler )</a>
<li><a href="node192.htm#Node192">MPI_ERROR_CLASS</a>
<li><a href="node192.htm#Node192">MPI_ERROR_CLASS( errorcode, errorclass )</a>
<li><a href="node192.htm#Node192">MPI_ERROR_STRING</a>
<li><a href="node191.htm#Node191">MPI_ERROR_STRING( errorcode, string, resultlen )</a>
<li><a href="node87.htm#Node87">MPI_EXSCAN</a>
<li><a href="node116.htm#Node116">MPI_EXSCAN(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node361.htm#Node361">MPI_FILE_C2F|uu</a>
<li><a href="node193.htm#Node193">MPI_FILE_CALL_ERRHANDLER</a>
<li><a href="node193.htm#Node193">MPI_FILE_CALL_ERRHANDLER (fh, errorcode)</a>
<li><a href="node226.htm#Node226">MPI_FILE_CLOSE</a>
<li><a href="node266.htm#Node266">MPI_FILE_CLOSE(fh)</a>
<li><a href="node187.htm#Node187">MPI_FILE_CREATE_ERRHANDLER</a>
<li><a href="node190.htm#Node190">MPI_FILE_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node265.htm#Node265">MPI_FILE_DELETE</a>
<li><a href="node267.htm#Node267">MPI_FILE_DELETE(filename, info)</a>
<li><a href="node361.htm#Node361">MPI_FILE_F2C|uu</a>
<li><a href="node271.htm#Node271">MPI_FILE_GET_AMODE</a>
<li><a href="node271.htm#Node271">MPI_FILE_GET_AMODE(fh, amode)</a>
<li><a href="node296.htm#Node296">MPI_FILE_GET_ATOMICITY</a>
<li><a href="node296.htm#Node296">MPI_FILE_GET_ATOMICITY(fh, flag)</a>
<li><a href="node282.htm#Node282">MPI_FILE_GET_BYTE_OFFSET</a>
<li><a href="node282.htm#Node282">MPI_FILE_GET_BYTE_OFFSET(fh, offset, disp)</a>
<li><a href="node187.htm#Node187">MPI_FILE_GET_ERRHANDLER</a>
<li><a href="node190.htm#Node190">MPI_FILE_GET_ERRHANDLER(file, errhandler)</a>
<li><a href="node271.htm#Node271">MPI_FILE_GET_GROUP</a>
<li><a href="node271.htm#Node271">MPI_FILE_GET_GROUP(fh, group)</a>
<li><a href="node272.htm#Node272">MPI_FILE_GET_INFO</a>
<li><a href="node272.htm#Node272">MPI_FILE_GET_INFO(fh, info_used)</a>
<li><a href="node282.htm#Node282">MPI_FILE_GET_POSITION</a>
<li><a href="node282.htm#Node282">MPI_FILE_GET_POSITION(fh, offset)</a>
<li><a href="node283.htm#Node286">MPI_FILE_GET_POSITION_SHARED</a>
<li><a href="node283.htm#Node286">MPI_FILE_GET_POSITION_SHARED(fh, offset)</a>
<li><a href="node270.htm#Node270">MPI_FILE_GET_SIZE</a>
<li><a href="node270.htm#Node270">MPI_FILE_GET_SIZE(fh, size)</a>
<li><a href="node289.htm#Node289">MPI_FILE_GET_TYPE_EXTENT</a>
<li><a href="node289.htm#Node289">MPI_FILE_GET_TYPE_EXTENT(fh, datatype, extent)</a>
<li><a href="node274.htm#Node274">MPI_FILE_GET_VIEW</a>
<li><a href="node274.htm#Node274">MPI_FILE_GET_VIEW(fh, disp, etype, filetype, datarep)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IREAD</a>
<li><a href="node282.htm#Node282">MPI_FILE_IREAD(fh, buf, count, datatype, request)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IREAD_AT</a>
<li><a href="node281.htm#Node281">MPI_FILE_IREAD_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IREAD_SHARED</a>
<li><a href="node283.htm#Node284">MPI_FILE_IREAD_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IWRITE</a>
<li><a href="node282.htm#Node282">MPI_FILE_IWRITE(fh, buf, count, datatype, request)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IWRITE_AT</a>
<li><a href="node281.htm#Node281">MPI_FILE_IWRITE_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node276.htm#Node276">MPI_FILE_IWRITE_SHARED</a>
<li><a href="node283.htm#Node284">MPI_FILE_IWRITE_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node192.htm#Node192">MPI_FILE_OPEN</a>
<li><a href="node265.htm#Node265">MPI_FILE_OPEN(comm, filename, amode, info, fh)</a>
<li><a href="node268.htm#Node268">MPI_FILE_PREALLOCATE</a>
<li><a href="node269.htm#Node269">MPI_FILE_PREALLOCATE(fh, size)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ</a>
<li><a href="node282.htm#Node282">MPI_FILE_READ(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ALL</a>
<li><a href="node282.htm#Node282">MPI_FILE_READ_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ALL_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ALL_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_ALL_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_AT</a>
<li><a href="node281.htm#Node281">MPI_FILE_READ_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_AT_ALL</a>
<li><a href="node281.htm#Node281">MPI_FILE_READ_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_AT_ALL_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_AT_ALL_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_AT_ALL_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ORDERED</a>
<li><a href="node283.htm#Node285">MPI_FILE_READ_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ORDERED_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_ORDERED_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_READ_ORDERED_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_READ_SHARED</a>
<li><a href="node283.htm#Node284">MPI_FILE_READ_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node282.htm#Node282">MPI_FILE_SEEK</a>
<li><a href="node282.htm#Node282">MPI_FILE_SEEK(fh, offset, whence)</a>
<li><a href="node283.htm#Node286">MPI_FILE_SEEK_SHARED</a>
<li><a href="node283.htm#Node286">MPI_FILE_SEEK_SHARED(fh, offset, whence)</a>
<li><a href="node265.htm#Node265">MPI_FILE_SET_ATOMICITY</a>
<li><a href="node296.htm#Node296">MPI_FILE_SET_ATOMICITY(fh, flag)</a>
<li><a href="node187.htm#Node187">MPI_FILE_SET_ERRHANDLER</a>
<li><a href="node190.htm#Node190">MPI_FILE_SET_ERRHANDLER(file, errhandler)</a>
<li><a href="node272.htm#Node272">MPI_FILE_SET_INFO</a>
<li><a href="node272.htm#Node272">MPI_FILE_SET_INFO(fh, info)</a>
<li><a href="node268.htm#Node268">MPI_FILE_SET_SIZE</a>
<li><a href="node268.htm#Node268">MPI_FILE_SET_SIZE(fh, size)</a>
<li><a href="node73.htm#Node73">MPI_FILE_SET_VIEW</a>
<li><a href="node274.htm#Node274">MPI_FILE_SET_VIEW(fh, disp, etype, filetype, datarep, info)</a>
<li><a href="node266.htm#Node266">MPI_FILE_SYNC</a>
<li><a href="node296.htm#Node296">MPI_FILE_SYNC(fh)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE</a>
<li><a href="node282.htm#Node282">MPI_FILE_WRITE(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ALL</a>
<li><a href="node282.htm#Node282">MPI_FILE_WRITE_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ALL_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ALL_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_ALL_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_AT</a>
<li><a href="node281.htm#Node281">MPI_FILE_WRITE_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_AT_ALL</a>
<li><a href="node281.htm#Node281">MPI_FILE_WRITE_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_AT_ALL_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_AT_ALL_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_AT_ALL_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ORDERED</a>
<li><a href="node283.htm#Node285">MPI_FILE_WRITE_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ORDERED_BEGIN</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_ORDERED_END</a>
<li><a href="node287.htm#Node287">MPI_FILE_WRITE_ORDERED_END(fh, buf, status)</a>
<li><a href="node276.htm#Node276">MPI_FILE_WRITE_SHARED</a>
<li><a href="node283.htm#Node284">MPI_FILE_WRITE_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node24.htm#Node24">MPI_FINALIZE</a>
<li><a href="node32.htm#Node32">MPI_FINALIZED</a>
<li><a href="node197.htm#Node197">MPI_FINALIZED(flag)</a>
<li><a href="node186.htm#Node186">MPI_FREE_MEM</a>
<li><a href="node186.htm#Node186">MPI_FREE_MEM(base)</a>
<li><a href="node87.htm#Node87">MPI_GATHER</a>
<li><a href="node95.htm#Node95">MPI_GATHER( sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm) </a>
<li><a href="node87.htm#Node87">MPI_GATHERV</a>
<li><a href="node95.htm#Node95">MPI_GATHERV( sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, root, comm) </a>
<li><a href="node229.htm#Node229">MPI_GET</a>
<li><a href="node248.htm#Node248">MPI_GET(Y)</a>
<li><a href="node235.htm#Node235">MPI_GET(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, <BR>target_datatype, win)</a>
<li><a href="node29.htm#Node29">MPI_GET_ADDRESS</a>
<li><a href="node74.htm#Node74">MPI_GET_ADDRESS(location, address)</a>
<li><a href="node47.htm#Node47">MPI_GET_COUNT</a>
<li><a href="node47.htm#Node47">MPI_GET_COUNT(status, datatype, count)</a>
<li><a href="node60.htm#Node60">MPI_GET_ELEMENTS</a>
<li><a href="node80.htm#Node80">MPI_GET_ELEMENTS( status, datatype, count)</a>
<li><a href="node256.htm#Node256">MPI_GET_ELEMENTS(status, datatype, count)</a>
<li><a href="node181.htm#Node185">MPI_GET_PROCESSOR_NAME</a>
<li><a href="node181.htm#Node185">MPI_GET_PROCESSOR_NAME( name, resultlen )</a>
<li><a href="node180.htm#Node180">MPI_GET_VERSION</a>
<li><a href="node180.htm#Node180">MPI_GET_VERSION( version, subversion )</a>
<li><a href="node167.htm#Node167">MPI_GRAPHDIMS_GET</a>
<li><a href="node173.htm#Node173">MPI_GRAPHDIMS_GET(comm, nnodes, nedges)</a>
<li><a href="node167.htm#Node167">MPI_GRAPH_CREATE</a>
<li><a href="node176.htm#Node176">MPI_GRAPH_CREATE(comm, nnodes, index, edges, 
reorder, comm_graph)</a>
<li><a href="node171.htm#Node171">MPI_GRAPH_CREATE(comm_old, nnodes, index, edges, reorder, comm_graph)</a>
<li><a href="node167.htm#Node167">MPI_GRAPH_GET</a>
<li><a href="node173.htm#Node173">MPI_GRAPH_GET(comm, maxindex, maxedges, index, edges)</a>
<li><a href="node167.htm#Node167">MPI_GRAPH_MAP</a>
<li><a href="node176.htm#Node176">MPI_GRAPH_MAP(comm, nnodes, index, edges, newrank)</a>
<li><a href="node167.htm#Node167">MPI_GRAPH_NEIGHBORS</a>
<li><a href="node173.htm#Node173">MPI_GRAPH_NEIGHBORS(comm, rank, maxneighbors, neighbors)</a>
<li><a href="node167.htm#Node167">MPI_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node173.htm#Node173">MPI_GRAPH_NEIGHBORS_COUNT(comm, rank, nneighbors)</a>
<li><a href="node254.htm#Node254">MPI_GREQUEST_COMPLETE</a>
<li><a href="node254.htm#Node254">MPI_GREQUEST_COMPLETE(request)</a>
<li><a href="node254.htm#Node254">MPI_GREQUEST_START</a>
<li><a href="node254.htm#Node254">MPI_GREQUEST_START(query_fn, free_fn, cancel_fn, extra_state, request)</a>
<li><a href="node361.htm#Node361">MPI_GROUP_C2F|uu</a>
<li><a href="node130.htm#Node130">MPI_GROUP_COMPARE</a>
<li><a href="node129.htm#Node129">MPI_GROUP_COMPARE(group1, group2, result)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_DIFFERENCE(group1, group2, newgroup)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_EXCL</a>
<li><a href="node130.htm#Node130">MPI_GROUP_EXCL(group, n, ranks, newgroup)</a>
<li><a href="node361.htm#Node361">MPI_GROUP_F2C|uu</a>
<li><a href="node131.htm#Node131">MPI_GROUP_FREE</a>
<li><a href="node131.htm#Node131">MPI_GROUP_FREE(group)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_INCL</a>
<li><a href="node130.htm#Node130">MPI_GROUP_INCL(group, n, ranks, newgroup)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_INTERSECTION(group1, group2, newgroup)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_RANGE_EXCL</a>
<li><a href="node130.htm#Node130">MPI_GROUP_RANGE_EXCL(group, n, ranges, newgroup)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_RANGE_INCL</a>
<li><a href="node130.htm#Node130">MPI_GROUP_RANGE_INCL(group, n, ranges, newgroup)</a>
<li><a href="node133.htm#Node133">MPI_GROUP_RANK</a>
<li><a href="node129.htm#Node129">MPI_GROUP_RANK(group, rank)</a>
<li><a href="node133.htm#Node133">MPI_GROUP_SIZE</a>
<li><a href="node129.htm#Node129">MPI_GROUP_SIZE(group, size)</a>
<li><a href="node129.htm#Node129">MPI_GROUP_TRANSLATE_RANKS</a>
<li><a href="node129.htm#Node129">MPI_GROUP_TRANSLATE_RANKS (group1, n, ranks1, group2, ranks2)</a>
<li><a href="node130.htm#Node130">MPI_GROUP_UNION(group1, group2, newgroup)</a>
<li><a href="node60.htm#Node60">MPI_IBSEND</a>
<li><a href="node59.htm#Node59">MPI_IBSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node361.htm#Node361">MPI_INFO_C2F|uu</a>
<li><a href="node199.htm#Node199">MPI_INFO_CREATE</a>
<li><a href="node199.htm#Node199">MPI_INFO_CREATE(info)</a>
<li><a href="node192.htm#Node192">MPI_INFO_DELETE</a>
<li><a href="node199.htm#Node199">MPI_INFO_DELETE(info, key)</a>
<li><a href="node199.htm#Node199">MPI_INFO_DUP</a>
<li><a href="node199.htm#Node199">MPI_INFO_DUP(info, newinfo)</a>
<li><a href="node361.htm#Node361">MPI_INFO_F2C|uu</a>
<li><a href="node272.htm#Node272">MPI_INFO_FREE</a>
<li><a href="node199.htm#Node199">MPI_INFO_FREE(info)</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET(info, key, valuelen, value, flag)</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_NKEYS</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_NKEYS(info, nkeys)</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_NTHKEY</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_NTHKEY(info, n, key)</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_VALUELEN</a>
<li><a href="node199.htm#Node199">MPI_INFO_GET_VALUELEN(info, key, valuelen, flag)</a>
<li><a href="node199.htm#Node199">MPI_INFO_SET</a>
<li><a href="node199.htm#Node199">MPI_INFO_SET(info, key, value)</a>
<li><a href="node24.htm#Node24">MPI_INIT</a>
<li><a href="node195.htm#Node195">MPI_INITIALIZED</a>
<li><a href="node195.htm#Node195">MPI_INITIALIZED( flag )</a>
<li><a href="node127.htm#Node127">MPI_INIT_THREAD</a>
<li><a href="node260.htm#Node260">MPI_INIT_THREAD()</a>
<li><a href="node260.htm#Node260">MPI_INIT_THREAD(required, provided)</a>
<li><a href="node134.htm#Node134">MPI_INTERCOMM_CREATE</a>
<li><a href="node143.htm#Node143">MPI_INTERCOMM_MERGE</a>
<li><a href="node145.htm#Node145">MPI_INTERCOMM_MERGE(intercomm, high, newintracomm)</a>
<li><a href="node47.htm#Node47">MPI_IPROBE</a>
<li><a href="node64.htm#Node64">MPI_IPROBE(source, tag, comm, flag, status)</a>
<li><a href="node343.htm#Node345">MPI_IRECV</a>
<li><a href="node59.htm#Node59">MPI_IRECV (buf, count, datatype, source, tag, comm, request)</a>
<li><a href="node59.htm#Node59">MPI_IRSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node19.htm#Node19">MPI_ISEND</a>
<li><a href="node59.htm#Node59">MPI_ISEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node59.htm#Node59">MPI_ISSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node260.htm#Node260">MPI_IS_THREAD_MAIN</a>
<li><a href="node260.htm#Node260">MPI_IS_THREAD_MAIN(flag)</a>
<li><a href="node29.htm#Node29">MPI_KEYVAL_CREATE</a>
<li><a href="node327.htm#Node327">MPI_KEYVAL_CREATE(copy_fn, delete_fn, keyval, extra_state)</a>
<li><a href="node29.htm#Node29">MPI_KEYVAL_FREE</a>
<li><a href="node327.htm#Node327">MPI_KEYVAL_FREE(keyval)</a>
<li><a href="node192.htm#Node192">MPI_LOOKUP_NAME</a>
<li><a href="node216.htm#Node216">MPI_LOOKUP_NAME(service_name, info, port_name)</a>
<li><a href="node29.htm#Node29">MPI_NULL_COPY_FN</a>
<li><a href="node29.htm#Node29">MPI_NULL_DELETE_FN</a>
<li><a href="node213.htm#Node213">MPI_OPEN_PORT</a>
<li><a href="node214.htm#Node214">MPI_OPEN_PORT(info, port_name)</a>
<li><a href="node361.htm#Node361">MPI_OP_C2F|uu</a>
<li><a href="node431.htm#Node431">MPI_OP_COMMUTATIVE</a>
<li><a href="node110.htm#Node110">MPI_OP_COMMUTATIVE( op, commute)</a>
<li><a href="node107.htm#Node107">MPI_OP_CREATE</a>
<li><a href="node107.htm#Node107">MPI_OP_CREATE(function, commute, op)</a>
<li><a href="node361.htm#Node361">MPI_OP_F2C|uu</a>
<li><a href="node107.htm#Node107">MPI_OP_FREE( op)</a>
<li><a href="node56.htm#Node56">MPI_PACK</a>
<li><a href="node84.htm#Node84">MPI_PACK(inbuf, incount, datatype, 
outbuf, outcount, position, comm)</a>
<li><a href="node84.htm#Node84">MPI_PACK(inbuf, incount, datatype, outbuf, outsize, 
position,  comm)</a>
<li><a href="node14.htm#Node14">MPI_PACK_EXTERNAL</a>
<li><a href="node85.htm#Node85">MPI_PACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position )</a>
<li><a href="node85.htm#Node85">MPI_PACK_EXTERNAL_SIZE( datarep, incount, datatype, size )</a>
<li><a href="node56.htm#Node56">MPI_PACK_SIZE(count, datatype, 
comm, size)</a>
<li><a href="node84.htm#Node84">MPI_PACK_SIZE(incount, datatype, comm, size)</a>
<li><a href="node313.htm#Node313">MPI_PCONTROL</a>
<li><a href="node316.htm#Node316">MPI_PCONTROL(level, ...)</a>
<li><a href="node46.htm#Node46">MPI_PROBE</a>
<li><a href="node64.htm#Node64">MPI_PROBE(source, tag, comm, status)</a>
<li><a href="node213.htm#Node213">MPI_PUBLISH_NAME</a>
<li><a href="node216.htm#Node216">MPI_PUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node229.htm#Node229">MPI_PUT</a>
<li><a href="node234.htm#Node234">MPI_PUT(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, target_datatype, win)</a>
<li><a href="node260.htm#Node260">MPI_QUERY_THREAD</a>
<li><a href="node260.htm#Node260">MPI_QUERY_THREAD(provided)</a>
<li><a href="node41.htm#Node41">MPI_RECV</a>
<li><a href="node46.htm#Node46">MPI_RECV (buf, count, datatype, source, tag, comm, status)</a>
<li><a href="node64.htm#Node64">MPI_RECV()</a>
<li><a href="node64.htm#Node64">MPI_RECV(..., 
source, tag, comm, status)</a>
<li><a href="node64.htm#Node64">MPI_RECV(..., source, tag, 
comm, status)</a>
<li><a href="node69.htm#Node69">MPI_RECV(buf, 1, datatype,...)</a>
<li><a href="node80.htm#Node80">MPI_RECV(buf, count, datatype, dest, tag, comm, status)</a>
<li><a href="node80.htm#Node80">MPI_RECV(buf, count, datatype, source, tag, comm, status)</a>
<li><a href="node95.htm#Node95">MPI_RECV(recvbuf, recvcount$.$n, recvtype, ...)</a>
<li><a href="node65.htm#Node65">MPI_RECV_INIT</a>
<li><a href="node65.htm#Node65">MPI_RECV_INIT(buf, count, datatype, source, tag, 
comm, request)</a>
<li><a href="node87.htm#Node87">MPI_REDUCE</a>
<li><a href="node103.htm#Node103">MPI_REDUCE( sendbuf, recvbuf, count, datatype, op, 
root, comm)</a>
<li><a href="node103.htm#Node103">MPI_REDUCE_LOCAL</a>
<li><a href="node110.htm#Node110">MPI_REDUCE_LOCAL( inbuf, inoutbuf, count, datatype, op)</a>
<li><a href="node87.htm#Node87">MPI_REDUCE_SCATTER</a>
<li><a href="node113.htm#Node113">MPI_REDUCE_SCATTER( sendbuf, recvbuf, recvcounts, 
datatype, op, comm)</a>
<li><a href="node111.htm#Node111">MPI_REDUCE_SCATTER_BLOCK</a>
<li><a href="node112.htm#Node112">MPI_REDUCE_SCATTER_BLOCK( sendbuf, recvbuf, recvcount, 
datatype, op, comm)</a>
<li><a href="node192.htm#Node192">MPI_REGISTER_DATAREP</a>
<li><a href="node291.htm#Node291">MPI_REGISTER_DATAREP(datarep, read_conversion_fn, write_conversion_fn,  dtype_file_extent_fn, extra_state)</a>
<li><a href="node361.htm#Node361">MPI_REQUEST_C2F|uu</a>
<li><a href="node361.htm#Node361">MPI_REQUEST_F2C|uu</a>
<li><a href="node32.htm#Node32">MPI_REQUEST_FREE</a>
<li><a href="node60.htm#Node60">MPI_REQUEST_FREE(request)</a>
<li><a href="node48.htm#Node48">MPI_REQUEST_GET_STATUS</a>
<li><a href="node63.htm#Node63">MPI_REQUEST_GET_STATUS( request, flag, status )</a>
<li><a href="node53.htm#Node53">MPI_RSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node65.htm#Node65">MPI_RSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node87.htm#Node87">MPI_SCAN</a>
<li><a href="node115.htm#Node115">MPI_SCAN( sendbuf, recvbuf, count, datatype, op, comm )</a>
<li><a href="node87.htm#Node87">MPI_SCATTER</a>
<li><a href="node97.htm#Node97">MPI_SCATTER( sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm)</a>
<li><a href="node87.htm#Node87">MPI_SCATTERV</a>
<li><a href="node97.htm#Node97">MPI_SCATTERV( sendbuf, sendcounts, displs, sendtype, 
recvbuf, recvcount, recvtype, root, comm)</a>
<li><a href="node41.htm#Node41">MPI_SEND</a>
<li><a href="node177.htm#Node177">MPI_SEND(...,neigh_rank(1),...)</a>
<li><a href="node69.htm#Node69">MPI_SEND(buf, 1, datatype,...)</a>
<li><a href="node80.htm#Node80">MPI_SEND(buf, count, 
datatype, dest, tag, comm)</a>
<li><a href="node80.htm#Node80">MPI_SEND(buf, count, datatype , ...)</a>
<li><a href="node43.htm#Node43">MPI_SEND(buf, count, datatype, dest, tag, comm)</a>
<li><a href="node174.htm#Node174">MPI_SENDRECV</a>
<li><a href="node66.htm#Node66">MPI_SENDRECV(sendbuf, sendcount, sendtype, dest, 
sendtag, recvbuf, recvcount, recvtype, source, recvtag, comm, status)</a>
<li><a href="node66.htm#Node66">MPI_SENDRECV_REPLACE(buf, count, datatype, dest, 
sendtag, source, recvtag, comm, status)</a>
<li><a href="node65.htm#Node65">MPI_SEND_INIT</a>
<li><a href="node65.htm#Node65">MPI_SEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node350.htm#Node350">MPI_SIZEOF</a>
<li><a href="node353.htm#Node355">MPI_SIZEOF(x, size)</a>
<li><a href="node53.htm#Node53">MPI_SSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node65.htm#Node65">MPI_SSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node65.htm#Node65">MPI_START</a>
<li><a href="node65.htm#Node65">MPI_START(request)</a>
<li><a href="node65.htm#Node65">MPI_STARTALL</a>
<li><a href="node65.htm#Node65">MPI_STARTALL(count, array_of_requests)</a>
<li><a href="node362.htm#Node362">MPI_STATUS_C2F|uu</a>
<li><a href="node362.htm#Node362">MPI_STATUS_F2C|uu</a>
<li><a href="node256.htm#Node256">MPI_STATUS_SET_CANCELLED(status, flag)</a>
<li><a href="node256.htm#Node256">MPI_STATUS_SET_ELEMENTS</a>
<li><a href="node256.htm#Node256">MPI_STATUS_SET_ELEMENTS(status, datatype, count)</a>
<li><a href="node19.htm#Node19">MPI_TEST</a>
<li><a href="node62.htm#Node62">MPI_TEST( &amp;array_of_requests[i], flag, status)</a>
<li><a href="node60.htm#Node60">MPI_TEST(request, flag, status)</a>
<li><a href="node62.htm#Node62">MPI_TESTALL</a>
<li><a href="node62.htm#Node62">MPI_TESTALL(count, array_of_requests, flag, 
array_of_statuses)</a>
<li><a href="node60.htm#Node60">MPI_TESTANY</a>
<li><a href="node62.htm#Node62">MPI_TESTANY(count, array_of_requests, 
index, status)</a>
<li><a href="node62.htm#Node62">MPI_TESTANY(count, array_of_requests, index, flag, status)</a>
<li><a href="node62.htm#Node62">MPI_TESTSOME</a>
<li><a href="node62.htm#Node62">MPI_TESTSOME(incount, array_of_requests, outcount, 
array_of_indices, array_of_statuses)</a>
<li><a href="node60.htm#Node60">MPI_TEST_CANCELLED</a>
<li><a href="node64.htm#Node64">MPI_TEST_CANCELLED(status, flag)</a>
<li><a href="node167.htm#Node167">MPI_TOPO_TEST</a>
<li><a href="node173.htm#Node173">MPI_TOPO_TEST(comm, status)</a>
<li><a href="node361.htm#Node361">MPI_TYPE_C2F|uu</a>
<li><a href="node78.htm#Node78">MPI_TYPE_COMMIT</a>
<li><a href="node78.htm#Node78">MPI_TYPE_COMMIT(datatype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CONTIGUOUS</a>
<li><a href="node75.htm#Node75">MPI_TYPE_CONTIGUOUS(2, type1, type2)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CONTIGUOUS(count, oldtype, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_DARRAY</a>
<li><a href="node73.htm#Node73">MPI_TYPE_CREATE_DARRAY(size, rank, ndims, array_of_gsizes,  
     array_of_distribs,  array_of_dargs, 
     array_of_psizes, order, oldtype, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_F90_COMPLEX</a>
<li><a href="node353.htm#Node354">MPI_TYPE_CREATE_F90_COMPLEX(p, r, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_F90_INTEGER</a>
<li><a href="node353.htm#Node354">MPI_TYPE_CREATE_F90_INTEGER(r, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_F90_REAL</a>
<li><a href="node353.htm#Node354">MPI_TYPE_CREATE_F90_REAL(p, r, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_HINDEXED</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_HINDEXED( count, 
array_of_blocklengths, array_of_displacements, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_HINDEXED(count, B, D, oldtype, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_HVECTOR</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_HVECTOR( count, blocklength, stride, 
oldtype, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_INDEXED_BLOCK</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_INDEXED_BLOCK(count, blocklength, array_of_displacements, oldtype, newtype)</a>
<li><a href="node149.htm#Node149">MPI_TYPE_CREATE_KEYVAL</a>
<li><a href="node153.htm#Node153">MPI_TYPE_CREATE_KEYVAL(type_copy_attr_fn, type_delete_attr_fn, type_keyval, extra_state)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_CREATE_RESIZED</a>
<li><a href="node76.htm#Node76">MPI_TYPE_CREATE_RESIZED(oldtype, lb, extent, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_STRUCT</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_STRUCT(count, B, D, T, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_CREATE_STRUCT(count, array_of_blocklengths, 
array_of_displacements,  array_of_types, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_CREATE_SUBARRAY</a>
<li><a href="node72.htm#Node72">MPI_TYPE_CREATE_SUBARRAY(ndims, array_of_sizes, array_of_subsizes, 
array_of_starts, order, oldtype, newtype)</a>
<li><a href="node149.htm#Node149">MPI_TYPE_DELETE_ATTR</a>
<li><a href="node153.htm#Node153">MPI_TYPE_DELETE_ATTR(type, type_keyval)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_DUP</a>
<li><a href="node79.htm#Node79">MPI_TYPE_DUP(type, newtype)</a>
<li><a href="node153.htm#Node153">MPI_TYPE_DUP_FN</a>
<li><a href="node153.htm#Node153">MPI_TYPE_DUP_FN|uu</a>
<li><a href="node29.htm#Node29">MPI_TYPE_EXTENT</a>
<li><a href="node327.htm#Node327">MPI_TYPE_EXTENT(datatype, extent)</a>
<li><a href="node361.htm#Node361">MPI_TYPE_F2C|uu</a>
<li><a href="node82.htm#Node82">MPI_TYPE_FREE</a>
<li><a href="node78.htm#Node78">MPI_TYPE_FREE(datatype)</a>
<li><a href="node149.htm#Node149">MPI_TYPE_FREE_KEYVAL</a>
<li><a href="node153.htm#Node153">MPI_TYPE_FREE_KEYVAL(type_keyval)</a>
<li><a href="node149.htm#Node149">MPI_TYPE_GET_ATTR</a>
<li><a href="node153.htm#Node153">MPI_TYPE_GET_ATTR(type, type_keyval, attribute_val, flag)</a>
<li><a href="node82.htm#Node82">MPI_TYPE_GET_CONTENTS</a>
<li><a href="node82.htm#Node82">MPI_TYPE_GET_CONTENTS(datatype, max_integers, 
max_addresses,  max_datatypes,  array_of_integers, array_of_addresses, array_of_datatypes)</a>
<li><a href="node82.htm#Node82">MPI_TYPE_GET_ENVELOPE</a>
<li><a href="node82.htm#Node82">MPI_TYPE_GET_ENVELOPE(datatype, num_integers, 
num_addresses, num_datatypes, combiner)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_GET_EXTENT</a>
<li><a href="node76.htm#Node76">MPI_TYPE_GET_EXTENT(datatype, lb, extent)</a>
<li><a href="node156.htm#Node156">MPI_TYPE_GET_NAME (type, type_name, resultlen)</a>
<li><a href="node77.htm#Node77">MPI_TYPE_GET_TRUE_EXTENT(datatype, true_lb, true_extent)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_HINDEXED</a>
<li><a href="node327.htm#Node327">MPI_TYPE_HINDEXED( count, array_of_blocklengths, 
array_of_displacements, oldtype, newtype)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_HVECTOR</a>
<li><a href="node327.htm#Node327">MPI_TYPE_HVECTOR( count, blocklength, stride, 
oldtype, newtype)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_INDEXED</a>
<li><a href="node71.htm#Node71">MPI_TYPE_INDEXED( count, array_of_blocklengths, 
array_of_displacements, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_INDEXED(2, B, D, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_INDEXED(count, B, D, oldtype, newtype)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_LB</a>
<li><a href="node327.htm#Node327">MPI_TYPE_LB( datatype, displacement)</a>
<li><a href="node350.htm#Node350">MPI_TYPE_MATCH_SIZE</a>
<li><a href="node353.htm#Node355">MPI_TYPE_MATCH_SIZE(typeclass, size, type)</a>
<li><a href="node153.htm#Node153">MPI_TYPE_NULL_COPY_FN</a>
<li><a href="node153.htm#Node153">MPI_TYPE_NULL_COPY_FN|uu</a>
<li><a href="node375.htm#Node375">MPI_TYPE_NULL_DELETE_FN</a>
<li><a href="node153.htm#Node153">MPI_TYPE_NULL_DELETE_FN|uu</a>
<li><a href="node149.htm#Node149">MPI_TYPE_SET_ATTR</a>
<li><a href="node153.htm#Node153">MPI_TYPE_SET_ATTR(type, type_keyval, attribute_val)</a>
<li><a href="node156.htm#Node156">MPI_TYPE_SET_NAME (type, type_name)</a>
<li><a href="node74.htm#Node74">MPI_TYPE_SIZE</a>
<li><a href="node74.htm#Node74">MPI_TYPE_SIZE(datatype, size)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_STRUCT</a>
<li><a href="node71.htm#Node71">MPI_TYPE_STRUCT(3, B, D, T, newtype)</a>
<li><a href="node75.htm#Node75">MPI_TYPE_STRUCT(3, B, D, T, type1)</a>
<li><a href="node327.htm#Node327">MPI_TYPE_STRUCT(count, array_of_blocklengths, 
array_of_displacements, array_of_types, newtype)</a>
<li><a href="node29.htm#Node29">MPI_TYPE_UB</a>
<li><a href="node327.htm#Node327">MPI_TYPE_UB( datatype, displacement)</a>
<li><a href="node19.htm#Node19">MPI_TYPE_VECTOR</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR( 2, 3, 4, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR( count, blocklength, stride, oldtype, 
newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR(1, count, n, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR(3, 1, -2, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR(count, 1, 1, oldtype, newtype)</a>
<li><a href="node71.htm#Node71">MPI_TYPE_VECTOR(count, blocklength, stride, oldtype, 
newtype)</a>
<li><a href="node84.htm#Node84">MPI_UNPACK</a>
<li><a href="node84.htm#Node84">MPI_UNPACK(inbuf, insize, position, outbuf, outcount, 
datatype, comm)</a>
<li><a href="node14.htm#Node14">MPI_UNPACK_EXTERNAL</a>
<li><a href="node85.htm#Node85">MPI_UNPACK_EXTERNAL(datarep, inbuf, insize, position, outbuf, outsize, position )</a>
<li><a href="node192.htm#Node192">MPI_UNPUBLISH_NAME</a>
<li><a href="node216.htm#Node216">MPI_UNPUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node47.htm#Node47">MPI_WAIT</a>
<li><a href="node62.htm#Node62">MPI_WAIT(&amp;array_of_request[i], &amp;array_of_statuses[i])</a>
<li><a href="node62.htm#Node62">MPI_WAIT(&amp;array_of_requests[i], status)</a>
<li><a href="node60.htm#Node60">MPI_WAIT(request, status)</a>
<li><a href="node62.htm#Node62">MPI_WAITALL</a>
<li><a href="node62.htm#Node62">MPI_WAITALL( count, array_of_requests, array_of_statuses)</a>
<li><a href="node62.htm#Node62">MPI_WAITALL(count, array_of_requests, 
array_of_statuses)</a>
<li><a href="node54.htm#Node54">MPI_WAITANY</a>
<li><a href="node62.htm#Node62">MPI_WAITANY (count, array_of_requests, index, status)</a>
<li><a href="node62.htm#Node62">MPI_WAITANY(count, array_of_requests, index, 
status)</a>
<li><a href="node62.htm#Node62">MPI_WAITSOME</a>
<li><a href="node62.htm#Node62">MPI_WAITSOME(incount, array_of_requests, outcount, 
array_of_indices, array_of_statuses)</a>
<li><a href="node361.htm#Node361">MPI_WIN_C2F|uu</a>
<li><a href="node193.htm#Node193">MPI_WIN_CALL_ERRHANDLER</a>
<li><a href="node193.htm#Node193">MPI_WIN_CALL_ERRHANDLER (win, errorcode)</a>
<li><a href="node231.htm#Node231">MPI_WIN_COMPLETE</a>
<li><a href="node240.htm#Node240">MPI_WIN_COMPLETE(win)</a>
<li><a href="node231.htm#Node231">MPI_WIN_CREATE</a>
<li><a href="node246.htm#Node246">MPI_WIN_CREATE(...,comm,...)</a>
<li><a href="node231.htm#Node231">MPI_WIN_CREATE(base, size, disp_unit, info, comm, win)</a>
<li><a href="node187.htm#Node187">MPI_WIN_CREATE_ERRHANDLER</a>
<li><a href="node189.htm#Node189">MPI_WIN_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node149.htm#Node149">MPI_WIN_CREATE_KEYVAL</a>
<li><a href="node152.htm#Node152">MPI_WIN_CREATE_KEYVAL(win_copy_attr_fn, win_delete_attr_fn, win_keyval, extra_state)</a>
<li><a href="node149.htm#Node149">MPI_WIN_DELETE_ATTR</a>
<li><a href="node152.htm#Node152">MPI_WIN_DELETE_ATTR(win, win_keyval)</a>
<li><a href="node152.htm#Node152">MPI_WIN_DUP_FN</a>
<li><a href="node152.htm#Node152">MPI_WIN_DUP_FN|uu</a>
<li><a href="node361.htm#Node361">MPI_WIN_F2C|uu</a>
<li><a href="node231.htm#Node231">MPI_WIN_FENCE</a>
<li><a href="node248.htm#Node248">MPI_WIN_FENCE(0, win1)</a>
<li><a href="node248.htm#Node248">MPI_WIN_FENCE(0, win2)</a>
<li><a href="node239.htm#Node239">MPI_WIN_FENCE(assert, win)</a>
<li><a href="node152.htm#Node152">MPI_WIN_FREE</a>
<li><a href="node231.htm#Node231">MPI_WIN_FREE(win)</a>
<li><a href="node149.htm#Node149">MPI_WIN_FREE_KEYVAL</a>
<li><a href="node152.htm#Node152">MPI_WIN_FREE_KEYVAL(win_keyval)</a>
<li><a href="node149.htm#Node149">MPI_WIN_GET_ATTR</a>
<li><a href="node232.htm#Node232">MPI_WIN_GET_ATTR(win, MPI_WIN_BASE, 
base, flag, ierror)</a>
<li><a href="node369.htm#Node369">MPI_WIN_GET_ATTR(win, MPI_WIN_BASE, val, flag, ierror)</a>
<li><a href="node232.htm#Node232">MPI_WIN_GET_ATTR(win, MPI_WIN_DISP_UNIT, disp_unit, 
flag, ierror)</a>
<li><a href="node232.htm#Node232">MPI_WIN_GET_ATTR(win, MPI_WIN_SIZE, size, flag, ierror)</a>
<li><a href="node152.htm#Node152">MPI_WIN_GET_ATTR(win, win_keyval, attribute_val, flag)</a>
<li><a href="node187.htm#Node187">MPI_WIN_GET_ERRHANDLER</a>
<li><a href="node189.htm#Node189">MPI_WIN_GET_ERRHANDLER(win, errhandler)</a>
<li><a href="node232.htm#Node232">MPI_WIN_GET_GROUP</a>
<li><a href="node232.htm#Node232">MPI_WIN_GET_GROUP(win, group)</a>
<li><a href="node156.htm#Node156">MPI_WIN_GET_NAME (win, win_name, resultlen)</a>
<li><a href="node186.htm#Node186">MPI_WIN_LOCK</a>
<li><a href="node241.htm#Node241">MPI_WIN_LOCK(...,win)</a>
<li><a href="node241.htm#Node241">MPI_WIN_LOCK(lock_type, rank, assert, win)</a>
<li><a href="node152.htm#Node152">MPI_WIN_NULL_COPY_FN</a>
<li><a href="node152.htm#Node152">MPI_WIN_NULL_COPY_FN|uu</a>
<li><a href="node375.htm#Node375">MPI_WIN_NULL_DELETE_FN</a>
<li><a href="node152.htm#Node152">MPI_WIN_NULL_DELETE_FN|uu</a>
<li><a href="node231.htm#Node231">MPI_WIN_POST</a>
<li><a href="node240.htm#Node240">MPI_WIN_POST($ingroup_i$, ...)</a>
<li><a href="node240.htm#Node240">MPI_WIN_POST(group, assert, win)</a>
<li><a href="node240.htm#Node240">MPI_WIN_POST(group,0,win)</a>
<li><a href="node149.htm#Node149">MPI_WIN_SET_ATTR</a>
<li><a href="node152.htm#Node152">MPI_WIN_SET_ATTR(win, win_keyval, attribute_val)</a>
<li><a href="node187.htm#Node187">MPI_WIN_SET_ERRHANDLER</a>
<li><a href="node189.htm#Node189">MPI_WIN_SET_ERRHANDLER(win, errhandler)</a>
<li><a href="node156.htm#Node156">MPI_WIN_SET_NAME (win, win_name)</a>
<li><a href="node238.htm#Node238">MPI_WIN_START</a>
<li><a href="node240.htm#Node240">MPI_WIN_START($outgroup_i$,...)</a>
<li><a href="node240.htm#Node240">MPI_WIN_START(group, assert, win)</a>
<li><a href="node240.htm#Node240">MPI_WIN_START(group,0,win)</a>
<li><a href="node240.htm#Node240">MPI_WIN_TEST</a>
<li><a href="node240.htm#Node240">MPI_WIN_TEST(win, flag)</a>
<li><a href="node186.htm#Node186">MPI_WIN_UNLOCK</a>
<li><a href="node241.htm#Node241">MPI_WIN_UNLOCK(rank, win)</a>
<li><a href="node231.htm#Node231">MPI_WIN_WAIT</a>
<li><a href="node240.htm#Node240">MPI_WIN_WAIT(win)</a>
<li><a href="node33.htm#Node33">MPI_WTICK</a>
<li><a href="node33.htm#Node33">MPI_WTIME</a>
<li><a href="node313.htm#Node313">PMPI_</a>
<li><a href="node33.htm#Node33">PMPI_WTICK</a>
<li><a href="node33.htm#Node33">PMPI_WTIME</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Comm_copy_attr_function</a>
<li><a href="node151.htm#Node151">TYPEDEF:MPI_Comm_copy_attr_function(MPI_Comm oldcomm, int comm_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Comm_delete_attr_function</a>
<li><a href="node151.htm#Node151">TYPEDEF:MPI_Comm_delete_attr_function(MPI_Comm comm, int comm_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node328.htm#Node328">TYPEDEF:MPI_Comm_errhandler_fn</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Comm_errhandler_function</a>
<li><a href="node188.htm#Node188">TYPEDEF:MPI_Comm_errhandler_function(MPI_Comm *, int *, ...)</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Copy_function</a>
<li><a href="node291.htm#Node293">TYPEDEF:MPI_Datarep_conversion_function(void *userbuf, MPI_Datatype datatype, int count, void *filebuf, MPI_Offset position, void *extra_state)</a>
<li><a href="node291.htm#Node292">TYPEDEF:MPI_Datarep_extent_function(MPI_Datatype datatype, MPI_Aint *file_extent, void *extra_state)</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Delete_function</a>
<li><a href="node328.htm#Node328">TYPEDEF:MPI_File_errhandler_fn</a>
<li><a href="node328.htm#Node328">TYPEDEF:MPI_File_errhandler_function</a>
<li><a href="node190.htm#Node190">TYPEDEF:MPI_File_errhandler_function(MPI_File *, int *, ...)</a>
<li><a href="node254.htm#Node254">TYPEDEF:MPI_Grequest_cancel_function(void *extra_state, int complete)</a>
<li><a href="node254.htm#Node254">TYPEDEF:MPI_Grequest_free_function(void *extra_state)</a>
<li><a href="node254.htm#Node254">TYPEDEF:MPI_Grequest_query_function(void *extra_state, MPI_Status *status)</a>
<li><a href="node29.htm#Node29">TYPEDEF:MPI_Handler_function</a>
<li><a href="node375.htm#Node375">TYPEDEF:MPI_Type_copy_attr_function</a>
<li><a href="node153.htm#Node153">TYPEDEF:MPI_Type_copy_attr_function(MPI_Datatype oldtype, int type_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node375.htm#Node375">TYPEDEF:MPI_Type_delete_attr_function</a>
<li><a href="node153.htm#Node153">TYPEDEF:MPI_Type_delete_attr_function(MPI_Datatype type, int type_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node107.htm#Node107">TYPEDEF:MPI_User_function(void *invec, void *inoutvec, int *len, MPI_Datatype *datatype)</a>
<li><a href="node375.htm#Node375">TYPEDEF:MPI_Win_copy_attr_function</a>
<li><a href="node152.htm#Node152">TYPEDEF:MPI_Win_copy_attr_function(MPI_Win oldwin, int win_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node375.htm#Node375">TYPEDEF:MPI_Win_delete_attr_function</a>
<li><a href="node152.htm#Node152">TYPEDEF:MPI_Win_delete_attr_function(MPI_Win win, int win_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node328.htm#Node328">TYPEDEF:MPI_Win_errhandler_fn</a>
<li><a href="node328.htm#Node328">TYPEDEF:MPI_Win_errhandler_function</a>
<li><a href="node189.htm#Node189">TYPEDEF:MPI_Win_errhandler_function(MPI_Win *, int *, ...)</a>
<li><a href="node254.htm#Node254">cancel_fn</a>
<li><a href="node151.htm#Node151">comm_copy_attr_fn</a>
<li><a href="node151.htm#Node151">comm_delete_attr_fn</a>
<li><a href="node327.htm#Node327">copy_fn</a>
<li><a href="node327.htm#Node327">delete_fn</a>
<li><a href="node254.htm#Node254">free_fn</a>
<li><a href="node195.htm#Node195">mpiexec</a>
<li><a href="node198.htm#Node198">mpiexec|uu</a>
<li><a href="node198.htm#Node198">mpirun</a>
<li><a href="node254.htm#Node254">query_fn</a>
<li><a href="node291.htm#Node293">read_conversion_fn</a>
<li><a href="node353.htm#Node355">sizeof()</a>
<li><a href="node291.htm#Node293">write_conversion_fn</a>
</menu> 
  
  
  
  
  
  
  

<P>
<HR>
<A HREF="node434.htm#Node434"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node436.htm#Node436"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node436.htm#Node436"> Index</a>
<b>Previous: </b><A HREF="node434.htm#Node434"> Index</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
