<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Group Accessors</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node129">127. Group Accessors</a></H2>
<A HREF="node128.htm#Node128"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node128.htm#Node128"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node130.htm#Node130"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node128.htm#Node128"> Group Management</a>
<b>Next: </b><A HREF="node130.htm#Node130"> Group Constructors</a>
<b>Previous: </b><A HREF="node128.htm#Node128"> Group Management</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_SIZE(group, size)</TD></TR>  
<TR><TD> IN group</TD><TD>  group (handle)</TD></TR>  
<TR><TD> OUT size</TD><TD> number of processes in the group (integer) </TD></TR>  
</TABLE>  
<P> 
   
 <tt> int MPI_Group_size(MPI_Group group, int *size) <BR></tt>  
<P> 
 <tt> MPI_GROUP_SIZE(GROUP, SIZE, IERROR)<BR> INTEGER GROUP, SIZE, IERROR <BR></tt>  
 <font color="red">{<font color="black"> int MPI::Group::Get_size() const <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_RANK(group, rank)</TD></TR>  
<TR><TD> IN group</TD><TD>  group (handle)</TD></TR>  
<TR><TD> OUT rank</TD><TD>  rank of the calling process in  
group, or <BR><font face="sans-serif">  MPI_UNDEFINED</font> if the process is not a  
member (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_rank(MPI_Group group, int *rank) <BR></tt>  
<P> 
 <tt> MPI_GROUP_RANK(GROUP, RANK, IERROR)<BR> INTEGER GROUP, RANK, IERROR <BR></tt>  
 <font color="red">{<font color="black"> int MPI::Group::Get_rank() const <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_TRANSLATE_RANKS (group1, n, ranks1, group2, ranks2)</TD></TR>  
<TR><TD> IN group1</TD><TD> group1  (handle) </TD></TR>  
<TR><TD> IN n</TD><TD> number of ranks in <font face="sans-serif">  ranks1</font> and  
<font face="sans-serif"> ranks2</font> arrays (integer)</TD></TR>  
<TR><TD> IN ranks1</TD><TD> array of zero or more valid ranks in group1 </TD></TR>  
<TR><TD> IN group2</TD><TD>  group2 (handle)</TD></TR>  
<TR><TD> OUT ranks2</TD><TD> array of corresponding ranks in group2,  
<font face="sans-serif">  MPI_UNDEFINED</font>   
when no correspondence exists.</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_translate_ranks (MPI_Group group1, int n, int *ranks1, MPI_Group group2, int *ranks2) <BR></tt>  
<P> 
 <tt> MPI_GROUP_TRANSLATE_RANKS(GROUP1, N, RANKS1, GROUP2, RANKS2, IERROR)<BR> INTEGER GROUP1, N, RANKS1(*), GROUP2, RANKS2(*), IERROR <BR></tt>  
 <font color="red">{<font color="black"> static void MPI::Group::Translate_ranks (const MPI::Group&amp; group1, int n, const int ranks1[], const MPI::Group&amp; group2, int ranks2[]) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
This function is important for determining the relative numbering of the  
same processes in two different groups.  For instance, if one knows the  
ranks of certain processes in the group of <font face="sans-serif">  MPI_COMM_WORLD</font>, one might want  
to know their ranks in a subset of that group.  
<P> 
<font face="sans-serif">  MPI_PROC_NULL</font> is a valid rank for input to  
<font face="sans-serif"> MPI_GROUP_TRANSLATE_RANKS</font>, which returns  
<font face="sans-serif">  MPI_PROC_NULL</font> as the translated rank.  
   
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_COMPARE(group1, group2, result)</TD></TR>  
<TR><TD> IN group1</TD><TD> first group (handle)</TD></TR>  
<TR><TD> IN group2</TD><TD> second group (handle)</TD></TR>  
<TR><TD> OUT result</TD><TD> result (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_compare(MPI_Group group1,MPI_Group group2, int *result) <BR></tt>  
<P> 
 <tt> MPI_GROUP_COMPARE(GROUP1, GROUP2, RESULT, IERROR)<BR> INTEGER GROUP1, GROUP2, RESULT, IERROR <BR></tt>  
 <font color="red">{<font color="black"> static int MPI::Group::Compare(const MPI::Group&amp; group1, const MPI::Group&amp; group2) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
<font face="sans-serif">  MPI_IDENT</font> results if the group members and group order is  
exactly the same in both groups.  This happens for instance if  
<font face="sans-serif"> group1</font> and <font face="sans-serif"> group2</font> are the same handle.  
<font face="sans-serif">  MPI_SIMILAR</font> results if the group members are the same but the order is  
different. <font face="sans-serif">  MPI_UNEQUAL</font> results otherwise.  
<P> 

<P>
<HR>
<A HREF="node128.htm#Node128"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node128.htm#Node128"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node130.htm#Node130"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node128.htm#Node128"> Group Management</a>
<b>Next: </b><A HREF="node130.htm#Node130"> Group Constructors</a>
<b>Previous: </b><A HREF="node128.htm#Node128"> Group Management</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
