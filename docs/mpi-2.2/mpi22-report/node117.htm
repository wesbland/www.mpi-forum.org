<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Example using <font face="sans-serif"> MPI_SCAN</font></TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node117">115. Example using  MPI_SCAN</a></H2>
<A HREF="node116.htm#Node116"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node114.htm#Node114"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node114.htm#Node114"> Scan</a>
<b>Next: </b><A HREF="node118.htm#Node118"> Correctness</a>
<b>Previous: </b><A HREF="node116.htm#Node116"> Exclusive Scan</a>
<P>
  
 <P> 
The example in this section uses an intracommunicator.  
  
<BR><b> Example</b>   
  
  
This example uses a user-defined operation to produce a <em> segmented  
scan</em>.  A segmented scan takes, as input, a set of values and a set of logicals,  
and the logicals delineate the various segments of the scan.  
For example:  
<P><IMG WIDTH=313 HEIGHT=36 SRC="img83.gif"><P>
<P> 
The operator that produces this effect is,  
<P> 
<P><IMG WIDTH=125 HEIGHT=29 SRC="img84.gif"><P>
<P> 
where,  
<P> 
<P><IMG WIDTH=114 HEIGHT=29 SRC="img85.gif"><P>
<P> 
Note that this is a non-commutative operator.  
C code that implements it is given below.  
<P> 
<BR> 
<pre><tt>typedef struct { 
    double val; 
    int log; 
} SegScanPair; 
 
/* the user-defined function 
 */ 
void segScan( SegScanPair *in, SegScanPair *inout, int *len, 
                                                MPI_Datatype *dptr ) 
{ 
    int i; 
    SegScanPair c; 
 
    for (i=0; i&lt; *len; ++i) { 
        if ( in-&gt;log == inout-&gt;log ) 
            c.val = in-&gt;val + inout-&gt;val; 
        else 
            c.val = inout-&gt;val; 
        c.log = inout-&gt;log; 
        *inout = c; 
        in++; inout++; 
    } 
} 
</tt></pre> 
Note that the <font face="sans-serif"> inout</font> argument to the user-defined function  
corresponds to the right-hand operand of the operator.  When using  
this operator, we must be careful to specify that it is non-commutative, as in the following.  
  
<P><IMG WIDTH=509 HEIGHT=294 SRC="img86.gif"><P>
   

<P>
<HR>
<A HREF="node116.htm#Node116"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node114.htm#Node114"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node114.htm#Node114"> Scan</a>
<b>Next: </b><A HREF="node118.htm#Node118"> Correctness</a>
<b>Previous: </b><A HREF="node116.htm#Node116"> Exclusive Scan</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
