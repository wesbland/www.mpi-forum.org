<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-binding/binding-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Interlanguage Communication</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node372">327. Interlanguage Communication</a></H2>
<A HREF="node371.htm#Node371"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node357.htm#Node357"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node373.htm#Node373"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node357.htm#Node357"> Language Interoperability</a>
<b>Next: </b><A HREF="node373.htm#Node373"> Language Bindings Summary</a>
<b>Previous: </b><A HREF="node371.htm#Node371"> Constants</a>
<P>
  
The type matching rules for communications in <font face="sans-serif"> MPI</font> are not changed:  
the datatype specification for each item sent should match,  
in type signature, the datatype specification used to receive this item  
(unless one of the types is <font face="sans-serif">  MPI_PACKED</font>).  
Also, the  
type of a message item should match the type declaration for the  
corresponding communication buffer location, unless the type is  
<font face="sans-serif">  MPI_BYTE</font> or <font face="sans-serif">  MPI_PACKED</font>.  Interlanguage  
communication is allowed if it complies with these rules.  
<P> 
  
<BR><b> Example</b>  
In the example below, a Fortran array is sent from Fortran and received in  
C.  
<P> 
<BR> 
<pre><tt>! FORTRAN CODE 
REAL R(5) 
INTEGER TYPE, IERR, MYRANK, AOBLEN(1), AOTYPE(1) 
INTEGER (KIND=MPI_ADDRESS_KIND) AODISP(1) 
 
! create an absolute datatype for array R 
AOBLEN(1) = 5 
CALL MPI_GET_ADDRESS( R, AODISP(1), IERR) 
AOTYPE(1) = MPI_REAL 
CALL MPI_TYPE_CREATE_STRUCT(1, AOBLEN,AODISP,AOTYPE, TYPE, IERR) 
CALL MPI_TYPE_COMMIT(TYPE, IERR) 
 
CALL MPI_COMM_RANK( MPI_COMM_WORLD, MYRANK, IERR) 
IF (MYRANK.EQ.0) THEN 
   CALL MPI_SEND( MPI_BOTTOM, 1, TYPE, 1, 0, MPI_COMM_WORLD, IERR) 
ELSE 
   CALL C_ROUTINE(TYPE) 
END IF 
</tt></pre> 
  
<BR> 
<pre><tt>/* C code */ 
 
void C_ROUTINE(MPI_Fint *fhandle) 
{ 
   MPI_Datatype type; 
   MPI_Status status; 
    
   type = MPI_Type_f2c(*fhandle); 
    
   MPI_Recv( MPI_BOTTOM, 1, type, 0, 0, MPI_COMM_WORLD, &amp;status); 
} 
</tt></pre> 
  
  
<P> 
<font face="sans-serif"> MPI</font> implementors may weaken these type matching rules, and allow  
messages to be sent with Fortran types and received with C types, and  
vice versa, when those types match.  I.e., if the Fortran type  
<font face="sans-serif">  INTEGER</font> is identical to the C type  
<font face="sans-serif">  int</font>, then an <font face="sans-serif"> MPI</font> implementation may allow data to be sent  
with datatype <font face="sans-serif">  MPI_INTEGER</font> and be received with datatype  
<font face="sans-serif">  MPI_INT</font>.  However, such code is not portable.  
  
<P> 
  
<P> 
  
   
   
   
   
   
   
   
   
   
   
   
   
 <P> 

<P>
<HR>
<A HREF="node371.htm#Node371"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node357.htm#Node357"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node373.htm#Node373"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node357.htm#Node357"> Language Interoperability</a>
<b>Next: </b><A HREF="node373.htm#Node373"> Language Bindings Summary</a>
<b>Previous: </b><A HREF="node371.htm#Node371"> Constants</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
