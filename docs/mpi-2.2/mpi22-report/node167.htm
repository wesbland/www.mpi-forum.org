<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-topol/topol.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Overview of the Functions</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node167">160. Overview of the Functions</a></H1>
<A HREF="node166.htm#Node166"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node168.htm#Node168"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node168.htm#Node168"> Topology Constructors</a>
<b>Previous: </b><A HREF="node166.htm#Node166"> Embedding in <font face="sans-serif"> MPI</font></a>
<P>
  
<P> 
The functions  
<font face="sans-serif"> MPI_GRAPH_CREATE</font>, <font color="red"><font face="sans-serif"> MPI_DIST_GRAPH_CREATE_ADJACENT</font>,  
<font face="sans-serif"> MPI_DIST_GRAPH_CREATE</font><font color="black"> and <font face="sans-serif"> MPI_CART_CREATE</font>  
are used to create general (graph) virtual topologies and Cartesian  
topologies, respectively.  These topology creation functions are  
collective.  As with other collective calls, the program must be  
written to work correctly, whether the call synchronizes or not.  
<P> 
The topology creation functions take as input an existing communicator  
<font face="sans-serif"> comm_old</font>,  
which defines the set of processes on which the topology is to be  
mapped.   
  
2.2<font color="red">For <font face="sans-serif"> MPI_GRAPH_CREATE</font> and <font face="sans-serif"> MPI_CART_CREATE</font>,   
all input arguments must have identical  
values on all processes of the group of <font face="sans-serif"> comm_old</font>. For  
<font face="sans-serif"> MPI_DIST_GRAPH_CREATE_ADJACENT</font> and   
<font face="sans-serif"> MPI_DIST_GRAPH_CREATE</font> the input  
communication graph is distributed across the calling  
processes. Therefore the processes provide different values for the  
arguments specifying the graph. However, all processes must give the  
same value for <font face="sans-serif"> reorder</font> and the <font face="sans-serif"> info</font> argument. In all cases, a  
<font color="black">  
new communicator <font face="sans-serif"> comm_topol</font> is created that  
carries the topological structure as cached information (see  
Chapter <a href="node119.htm#Node119">Groups, Contexts, Communicators, and Caching 
</a>). In analogy to function  
<font face="sans-serif"> MPI_COMM_CREATE</font>, no cached information propagates from  
<font face="sans-serif"> comm_old</font> to <font face="sans-serif"> comm_topol</font>.  
<P> 
<font face="sans-serif"> MPI_CART_CREATE</font> can be used to describe Cartesian structures of  
arbitrary dimension. For each coordinate direction one specifies whether the  
process structure is periodic or not.  
Note that an <I>n</I>-dimensional hypercube is  
an <I>n</I>-dimensional torus with 2 processes per coordinate direction. Thus,  
special support for hypercube structures is not necessary.  The local  
auxiliary function <font face="sans-serif"> MPI_DIMS_CREATE</font> can be used to compute a balanced  
distribution of processes among a given number of dimensions.  
<P> 
 
<BR> 
<em> Rationale.</em>  
Similar functions are contained in  
EXPRESS [<a href="node433.htm#-Bib12">12</a>] and PARMACS.   (<em> End of rationale.</em>) <BR> 
The function <font face="sans-serif"> MPI_TOPO_TEST</font> can be used to inquire about the  
topology associated with a communicator.  The topological information can be  
extracted from the communicator using the functions  
<font face="sans-serif"> MPI_GRAPHDIMS_GET</font> and <font face="sans-serif"> MPI_GRAPH_GET</font>, for general  
graphs, and <font face="sans-serif"> MPI_CARTDIM_GET</font> and <font face="sans-serif"> MPI_CART_GET</font>, for  
Cartesian topologies.  Several additional functions are provided to manipulate  
Cartesian topologies: the functions <font face="sans-serif"> MPI_CART_RANK</font> and  
<font face="sans-serif"> MPI_CART_COORDS</font> translate Cartesian coordinates into a group rank,  
and vice-versa; the function <font face="sans-serif"> MPI_CART_SUB</font> can be used to extract a  
Cartesian subspace (analogous to <font face="sans-serif"> MPI_COMM_SPLIT</font>).  The function  
<font face="sans-serif"> MPI_CART_SHIFT</font> provides the information needed to communicate with  
neighbors in a Cartesian dimension.  The two functions  
<BR>  
<font face="sans-serif"> MPI_GRAPH_NEIGHBORS_COUNT</font> and <font face="sans-serif"> MPI_GRAPH_NEIGHBORS</font> can  
be used to extract the neighbors of a node in a graph.  
<font color="red">  
For distributed graphs, the functions <font face="sans-serif"> MPI_DIST_NEIGHBORS_COUNT</font> and   
<font face="sans-serif"> MPI_DIST_NEIGHBORS</font> can be used to extract the neighbors of the calling node.  
<font color="black">  
The function  
<font face="sans-serif"> MPI_CART_SUB</font> is collective over the input communicator's group;  
all other functions are local.  
<P> 
Two additional functions, <font face="sans-serif"> MPI_GRAPH_MAP</font> and  
<font face="sans-serif"> MPI_CART_MAP</font> are presented in the last section.  In general these  
functions are not called by the user directly.  However, together with the  
communicator manipulation functions presented in Chapter <a href="node119.htm#Node119">Groups, Contexts, Communicators, and Caching 
</a>,  
they are sufficient to implement all other topology functions.  
Section <a href="node176.htm#Node176">Low-Level Topology Functions 
</a> outlines such an implementation.  
<P> 

<P>
<HR>
<A HREF="node166.htm#Node166"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node168.htm#Node168"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node168.htm#Node168"> Topology Constructors</a>
<b>Previous: </b><A HREF="node166.htm#Node166"> Embedding in <font face="sans-serif"> MPI</font></a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
