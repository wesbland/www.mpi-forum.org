<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-binding/binding-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Exceptions</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node338">308. Exceptions</a></H2>
<A HREF="node337.htm#Node337"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node330.htm#Node330"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node339.htm#Node339"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node330.htm#Node330"> C++</a>
<b>Next: </b><A HREF="node339.htm#Node339"> Mixed-Language Operability</a>
<b>Previous: </b><A HREF="node337.htm#Node337"> Communicators</a>
<P>
  
<P> 
The C++ language interface for <font face="sans-serif"> MPI</font> includes the predefined error  
handler <tt> MPI::ERRORS_THROW_EXCEPTIONS</tt> for use with  
the <tt> Set_errhandler()</tt> member functions.  
  
<tt> MPI::ERRORS_THROW_EXCEPTIONS</tt> can only be set or retrieved   
by C++ functions.  
  
If a non-C++ program causes an error that invokes the  
<tt> MPI::ERRORS_THROW_EXCEPTIONS</tt> error handler, the exception  
will pass up the calling stack until C++ code can catch it.  If there  
is no C++ code to catch it, the behavior is undefined.  In a  
multi-threaded environment or if a nonblocking <font face="sans-serif"> MPI</font> call throws an  
exception while making progress in the background, the behavior is  
implementation dependent.  
<P> 
  
<P> 
The error handler <tt> MPI::ERRORS_THROW_EXCEPTIONS</tt> causes an  
<tt> MPI::Exception</tt> to be thrown for any <font face="sans-serif"> MPI</font> result code other  
than <tt> MPI::SUCCESS</tt>.  The public interface to  
<tt> MPI::Exception</tt> class is defined as follows:  
<P> 
   
 <P> 
<BR> 
<pre><tt>namespace MPI { 
  class Exception { 
  public: 
 
    Exception(int error_code);  
 
    int Get_error_code() const; 
    int Get_error_class() const; 
    const char *Get_error_string() const; 
  }; 
}; 
</tt></pre> 
  
<P> 
  
<P> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
The exception will be thrown within the body of  
  <tt> MPI::ERRORS_THROW_EXCEPTIONS</tt>.  It is expected that control  
  will be returned to the user when the exception is thrown.  
  Some <font face="sans-serif"> MPI</font> functions specify certain return information in their  
  parameters in the case of an error and <tt> MPI_ERRORS_RETURN</tt>  
  is specified.  The same type of return information must be provided  
  when exceptions are thrown.  
  <P> 
For example, <font face="sans-serif"> MPI_WAITALL</font> puts an error code for each  
  request in the corresponding entry in the status array and returns  
  <font face="sans-serif">  MPI_ERR_IN_STATUS</font>.  When using  
  <tt> MPI::ERRORS_THROW_EXCEPTIONS</tt>, it is expected that the  
  error codes in the status array will be set appropriately before the  
  exception is thrown.  
<P> 
 (<em> End of advice to implementors.</em>) <BR> 
  
<P> 

<P>
<HR>
<A HREF="node337.htm#Node337"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node330.htm#Node330"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node339.htm#Node339"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node330.htm#Node330"> C++</a>
<b>Next: </b><A HREF="node339.htm#Node339"> Mixed-Language Operability</a>
<b>Previous: </b><A HREF="node337.htm#Node337"> Communicators</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
