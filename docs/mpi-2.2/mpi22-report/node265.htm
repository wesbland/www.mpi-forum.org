<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Opening a File</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node265">250. Opening a File</a></H2>
<A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node266.htm#Node266"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node264.htm#Node264"> File Manipulation</a>
<b>Next: </b><A HREF="node266.htm#Node266"> Closing a File</a>
<b>Previous: </b><A HREF="node264.htm#Node264"> File Manipulation</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_OPEN(comm, filename, amode, info, fh)</TD></TR>  
<TR><TD> IN comm</TD><TD>communicator (handle)</TD></TR>  
<TR><TD> IN filename</TD><TD>name of file to open (string)</TD></TR>  
<TR><TD> IN amode</TD><TD>file access mode (integer)</TD></TR>  
<TR><TD> IN info</TD><TD>info object (handle)</TD></TR>  
<TR><TD> OUT fh</TD><TD>new file handle (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_open(MPI_Comm comm, char *filename, int amode, MPI_Info info, MPI_File *fh) <BR></tt>  
 <tt> MPI_FILE_OPEN(COMM, FILENAME, AMODE, INFO, FH, IERROR)<BR> CHARACTER*(*) FILENAME <BR>INTEGER COMM, AMODE, INFO, FH, IERROR <BR></tt>  
 <font color="red">{<font color="black"> static MPI::File MPI::File::Open(const MPI::Intracomm&amp; comm, const char* filename, int amode, const MPI::Info&amp; info) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_OPEN</font> opens the file identified by the file name  
<font face="sans-serif"> filename</font> on all processes in the <font face="sans-serif"> comm</font> communicator group.  
<font face="sans-serif"> MPI_FILE_OPEN</font> is a collective routine:  
all processes must provide the same value for <font face="sans-serif"> amode</font>,  
and all processes must provide <font face="sans-serif"> filename</font>s that  
reference the same file.  
  
  
(Values for <font face="sans-serif"> info</font> may vary.)  
<font face="sans-serif"> comm</font> must be an intracommunicator;  
it is erroneous to pass an intercommunicator to <font face="sans-serif"> MPI_FILE_OPEN</font>.  
  
Errors in <font face="sans-serif"> MPI_FILE_OPEN</font> are raised   
using the default file error handler  
  
(see Section <a href="node307.htm#Node307">I/O Error Handling 
</a>, page <a href="node307.htm#Node307">I/O Error Handling 
</a>).  
A process can open a file independently of other processes  
by using the <font face="sans-serif">  MPI_COMM_SELF</font> communicator.  
The file handle returned, <font face="sans-serif"> fh</font>,  
can be subsequently used to access the file until the file is  
closed using <font face="sans-serif"> MPI_FILE_CLOSE</font>.  
Before calling <font face="sans-serif"> MPI_FINALIZE</font>,  
the user is required to close (via <font face="sans-serif"> MPI_FILE_CLOSE</font>)  
all files that were opened with <font face="sans-serif"> MPI_FILE_OPEN</font>.  
Note that the communicator <font face="sans-serif"> comm</font> is unaffected by <font face="sans-serif"> MPI_FILE_OPEN</font>  
and continues to be usable in all <font face="sans-serif"> MPI</font> routines (e.g., <font face="sans-serif"> MPI_SEND</font>).  
Furthermore, the use of <font face="sans-serif"> comm</font> will not interfere with I/O behavior.  
<P> 
The format for specifying the file name in the <font face="sans-serif"> filename</font>  
argument is implementation dependent  
and must be documented by the implementation.  
<P> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
An implementation may require that <font face="sans-serif"> filename</font> include  
a string or strings specifying additional information about the file.  
  
Examples include the type of filesystem (e.g., a prefix of ufs:),  
a remote hostname (e.g., a prefix of machine.univ.edu:),  
or a file password (e.g., a suffix of /PASSWORD=SECRET).  
 (<em> End of advice to implementors.</em>) <BR> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
On some implementations of <font face="sans-serif"> MPI</font>,  
the file namespace may not be identical from all processes of all applications.  
For example,  
``/tmp/foo'' may denote different files on different processes,  
or a single file may have many names, dependent on process location.  
The user is responsible for ensuring that a single file  
is referenced by the <font face="sans-serif"> filename</font> argument,  
as it may be impossible for an implementation to detect  
this type of namespace error.  
 (<em> End of advice to users.</em>) <BR> 
Initially, all processes view the file as a linear byte stream,  
and each process views data in its own native representation  
(no data representation conversion is performed).  
  
(POSIX files are linear byte streams in the native representation.)  
The file view can be changed  
via the <font face="sans-serif"> MPI_FILE_SET_VIEW</font> routine.  
<P> 
The following access modes are supported  
(specified in <font face="sans-serif"> amode</font>, a bit vector OR of the following  
integer constants):  
<ul> 
 
<li><font face="sans-serif">  MPI_MODE_RDONLY</font> --- read only,  
 
<li><font face="sans-serif">  MPI_MODE_RDWR</font>   --- reading and writing,  
 
<li><font face="sans-serif">  MPI_MODE_WRONLY</font> --- write only,  
 
<li><font face="sans-serif">  MPI_MODE_CREATE</font> --- create the file if it does not exist,  
 
<li><font face="sans-serif">  MPI_MODE_EXCL</font> --- error if creating file that already exists,  
 
<li><font face="sans-serif">  MPI_MODE_DELETE_ON_CLOSE</font> --- delete file on close,  
 
<li><font face="sans-serif">  MPI_MODE_UNIQUE_OPEN</font> --- file will not be concurrently opened elsewhere,  
 
<li><font face="sans-serif">  MPI_MODE_SEQUENTIAL</font> --- file will only be accessed sequentially,  
 
<li><font face="sans-serif">  MPI_MODE_APPEND</font> --- set initial position of all file pointers to end of file.  
</ul> 
<BR> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
C/C++ users can use bit vector OR (<IMG WIDTH=1 HEIGHT=11 SRC="img144.gif">
) to combine these constants;  
  
Fortran 90 users can use the bit vector <tt> IOR</tt> intrinsic.  
Fortran 77 users can use (nonportably) bit vector <tt> IOR</tt>  
  
on systems that support it.  
Alternatively,  
Fortran users can portably use integer addition to OR the constants  
(each constant should appear at most once in the addition.).  
 (<em> End of advice to users.</em>) <BR> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
The values of these constants must be defined such that  
the bitwise OR and the sum of any distinct set  
of these constants is equivalent.  
 (<em> End of advice to implementors.</em>) <BR> 
The modes <font face="sans-serif">  MPI_MODE_RDONLY</font>, <font face="sans-serif">  MPI_MODE_RDWR</font>,   
<font face="sans-serif">  MPI_MODE_WRONLY</font>,  
<font face="sans-serif">  MPI_MODE_CREATE</font>, and <font face="sans-serif">  MPI_MODE_EXCL</font> have identical semantics  
to their POSIX counterparts [<a href="node433.htm#-Bib29">29</a>].  
Exactly one of <font face="sans-serif">  MPI_MODE_RDONLY</font>, <font face="sans-serif">  MPI_MODE_RDWR</font>,   
or <font face="sans-serif">  MPI_MODE_WRONLY</font>,  
must be specified.  
It is erroneous to specify <font face="sans-serif">  MPI_MODE_CREATE</font>   
or <font face="sans-serif">  MPI_MODE_EXCL</font>  
in conjunction with <font face="sans-serif">  MPI_MODE_RDONLY</font>;  
it is erroneous to specify <font face="sans-serif">  MPI_MODE_SEQUENTIAL</font>  
together with <font face="sans-serif">  MPI_MODE_RDWR</font>.  
<P> 
The <font face="sans-serif">  MPI_MODE_DELETE_ON_CLOSE</font> mode causes the file to be deleted  
(equivalent to performing an <font face="sans-serif"> MPI_FILE_DELETE</font>)  
when the file is closed.  
<P> 
The <font face="sans-serif">  MPI_MODE_UNIQUE_OPEN</font> mode allows an implementation to  
optimize access by eliminating the overhead of file locking.  
It is erroneous to open a file in this mode unless the file will  
not be concurrently opened elsewhere.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
For <font face="sans-serif">  MPI_MODE_UNIQUE_OPEN</font>, <em> not opened elsewhere</em> includes  
both inside and outside the <font face="sans-serif"> MPI</font> environment.  
In particular, one needs to be aware of potential external events  
which may open files (e.g., automated backup facilities).  
When <font face="sans-serif">  MPI_MODE_UNIQUE_OPEN</font> is specified,  
the user is responsible for ensuring that no such external events take place.  
 (<em> End of advice to users.</em>) <BR> 
The <font face="sans-serif">  MPI_MODE_SEQUENTIAL</font> mode allows an implementation to  
optimize access to some sequential devices (tapes and network streams).  
It is erroneous to attempt nonsequential access to a  
file that has been opened in this mode.  
  
<P> 
Specifying <font face="sans-serif">  MPI_MODE_APPEND</font> only guarantees that all shared and individual  
file pointers are positioned at the initial end of file when <font face="sans-serif"> MPI_FILE_OPEN</font>  
returns.  
Subsequent positioning of file pointers is application dependent.  
In particular, the implementation does not ensure that all writes are  
appended.  
<P> 
Errors related to the access mode are raised  
  
in the class <font face="sans-serif"> MPI_ERR_AMODE</font>.  
  
<P> 
The <font face="sans-serif"> info</font> argument is used to provide information  
regarding file access patterns and file system specifics  
  
(see Section <a href="node272.htm#Node272">File Info 
</a>, page <a href="node272.htm#Node272">File Info 
</a>).  
  
The constant <font face="sans-serif">  MPI_INFO_NULL</font>  
  
can be used when no info needs to be specified.  
 
<BR> 
<em> Advice to users.</em>  
<P> 
Some file attributes are inherently implementation dependent  
(e.g., file permissions).  
These attributes must be set using either  
the <font face="sans-serif"> info</font> argument or facilities outside the scope of <font face="sans-serif"> MPI</font>.  
 (<em> End of advice to users.</em>) <BR> 
Files are opened by default using nonatomic mode file consistency semantics  
(see Section <a href="node296.htm#Node296">File Consistency 
</a>,  
page <a href="node296.htm#Node296">File Consistency 
</a>).  
The more stringent atomic mode consistency semantics,  
  
required for atomicity of conflicting accesses,  
  
can be set using <font face="sans-serif"> MPI_FILE_SET_ATOMICITY</font>.  
<P> 

<P>
<HR>
<A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node266.htm#Node266"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node264.htm#Node264"> File Manipulation</a>
<b>Next: </b><A HREF="node266.htm#Node266"> Closing a File</a>
<b>Previous: </b><A HREF="node264.htm#Node264"> File Manipulation</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
