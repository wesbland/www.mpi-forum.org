<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Subarray Filetype Constructor</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node311">285. Subarray Filetype Constructor</a></H2>
<A HREF="node310.htm#Node310"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node309.htm#Node309"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node312.htm#Node312"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node309.htm#Node309"> Examples</a>
<b>Next: </b><A HREF="node312.htm#Node312"> Profiling Interface</a>
<b>Previous: </b><A HREF="node310.htm#Node310"> Double Buffering with Split Collective I/O</a>
<P>
  
  
<P> 
  <CENTER><P><IMG WIDTH=222 HEIGHT=257 SRC="io-array-file.gif"><P>
</CENTER>  
  <BR> 
<b>Figure 28: </b><A NAME="Figure28">Example array file layout</a><P> 
  
    
  <CENTER><P><IMG WIDTH=216 HEIGHT=187 SRC="io-array-p1.gif"><P>
</CENTER>  
  <BR> 
<b>Figure 29: </b><A NAME="Figure29">Example local array filetype for process 1</a><P> 
  
    
Assume we are writing out a 100x100 2D array of double  
precision floating point numbers that is  
distributed among 4 processes such that each process has a block of  
25 columns (e.g., process 0 has columns 0-24, process 1 has columns  
25-49, etc.; see Figure <a href="node311.htm#Figure28">28 
</a>).  
To create the filetypes for each process one could  
use the following C program  
(see Section <a href="node72.htm#Node72">Subarray Datatype Constructor 
</a> on   
page <a href="node72.htm#Node72">Subarray Datatype Constructor 
</a>):  
  
<BR> 
<pre><tt>   double subarray[100][25]; 
   MPI_Datatype filetype; 
   int sizes[2], subsizes[2], starts[2]; 
   int rank; 
 
   MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank); 
   sizes[0]=100; sizes[1]=100; 
   subsizes[0]=100; subsizes[1]=25; 
   starts[0]=0; starts[1]=rank*subsizes[1]; 
 
   MPI_Type_create_subarray(2, sizes, subsizes, starts, MPI_ORDER_C, 
                            MPI_DOUBLE, &amp;filetype); 
</tt></pre> 
Or, equivalently in Fortran:  
<P> 
<BR> 
<pre><tt>       double precision subarray(100,25) 
       integer filetype, rank, ierror 
       integer sizes(2), subsizes(2), starts(2) 
 
       call MPI_COMM_RANK(MPI_COMM_WORLD, rank, ierror) 
       sizes(1)=100 
       sizes(2)=100 
       subsizes(1)=100 
       subsizes(2)=25 
       starts(1)=0 
       starts(2)=rank*subsizes(2) 
 
       call MPI_TYPE_CREATE_SUBARRAY(2, sizes, subsizes, starts, &amp; 
                  MPI_ORDER_FORTRAN, MPI_DOUBLE_PRECISION,       &amp; 
                  filetype, ierror) 
</tt></pre> 
The generated filetype will then describe the portion of the file  
contained within the process's subarray with holes for the space taken  
by the other processes.  Figure <a href="node311.htm#Figure29">29 
</a> shows the  
filetype created for process 1.  
<P> 
  
<P> 
  

<P>
<HR>
<A HREF="node310.htm#Node310"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node309.htm#Node309"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node312.htm#Node312"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node309.htm#Node309"> Examples</a>
<b>Next: </b><A HREF="node312.htm#Node312"> Profiling Interface</a>
<b>Previous: </b><A HREF="node310.htm#Node310"> Double Buffering with Split Collective I/O</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
