<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-changes/changes.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Changes from Version 2.0 to Version 2.1</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node432">387. Changes from Version 2.0 to Version 2.1</a></H1>
<A HREF="node431.htm#Node431"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node433.htm#Node433"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node433.htm#Node433"> Bibliography</a>
<b>Previous: </b><A HREF="node431.htm#Node431"> Changes from Version 2.1 to Version 2.2</a>
<P>
  
<ol> 
 
1. Section <a href="node44.htm#Node44">Message Data 
</a> on page <a href="node44.htm#Node44">Message Data 
</a>,  
                                       Section <a href="node336.htm#Node336">C++ Datatypes 
</a> on page <a href="node336.htm#Node336">C++ Datatypes 
</a>, and  
                                       Annex <a href="node374.htm#Node374">Defined  Values and Handles 
</a> on page <a href="node374.htm#Node374">Defined  Values and Handles 
</a>.   
<BR>  
   
In addition, the <font face="sans-serif"> MPI_LONG_LONG</font> should be added as an optional  
type; it is a synonym for <font face="sans-serif">  MPI_LONG_LONG_INT</font>.  
<P> 
 
<BR> 
2. Section <a href="node44.htm#Node44">Message Data 
</a> on page <a href="node44.htm#Node44">Message Data 
</a>,  
                                       Section <a href="node336.htm#Node336">C++ Datatypes 
</a> on page <a href="node336.htm#Node336">C++ Datatypes 
</a>, and  
                                       Annex <a href="node374.htm#Node374">Defined  Values and Handles 
</a> on page <a href="node374.htm#Node374">Defined  Values and Handles 
</a>.   
<BR>  
<font face="sans-serif"> MPI_LONG_LONG_INT</font>, <font face="sans-serif"> MPI_LONG_LONG</font> (as synonym), <font face="sans-serif"> MPI_UNSIGNED_LONG_LONG</font>,     
<font face="sans-serif"> MPI_SIGNED_CHAR</font>,  
and <font face="sans-serif"> MPI_WCHAR</font> are moved from optional to official and they are therefore  
defined for all three language bindings.  
  
 
<BR> 
3. Section <a href="node47.htm#Node47">Return Status 
</a> on page <a href="node47.htm#Node47">Return Status 
</a>.  
<BR>  
<font face="sans-serif"> MPI_GET_COUNT</font> with zero-length datatypes:  
   
The value returned as the <font face="sans-serif"> count</font> argument of  
<font face="sans-serif"> MPI_GET_COUNT</font> for a datatype of length zero where zero bytes  
have been transferred is zero.  If the number of bytes transferred is  
greater than zero, <font face="sans-serif">  MPI_UNDEFINED</font> is returned.   
<P> 
 
<BR> 
4. Section <a href="node69.htm#Node69">Derived Datatypes 
</a> on page <a href="node69.htm#Node69">Derived Datatypes 
</a>.  
<BR>  
General rule about derived datatypes:  
   
Most datatype constructors have replication count or block length arguments.  
Allowed values are   
<font color="red">non-negative<font color="black">  
integers. If the value is zero, no elements are  
generated in the type map and there is no effect on datatype bounds or  
extent.   
<P> 
 
<BR> 
5. Section <a href="node85.htm#Node85">Canonical <font face="sans-serif"> MPI_PACK</font> and <font face="sans-serif"> MPI_UNPACK</font> 
</a> on page <a href="node85.htm#Node85">Canonical <font face="sans-serif"> MPI_PACK</font> and <font face="sans-serif"> MPI_UNPACK</font> 
</a>.  
<BR>  
   
<font face="sans-serif">  MPI_BYTE</font> should be used to send and receive data that is packed  
using <font face="sans-serif"> MPI_PACK_EXTERNAL</font>.  
<P> 
 
<BR> 
6. Section <a href="node109.htm#Node109">All-Reduce 
</a> on page <a href="node109.htm#Node109">All-Reduce 
</a>.  
<BR>  
If <font face="sans-serif"> comm</font> is an intercommunicator in <font face="sans-serif"> MPI_ALLREDUCE</font>, then  
   
both groups should  
provide <font face="sans-serif"> count</font> and <font face="sans-serif"> datatype</font> arguments that specify the same type  
signature  
(i.e., it is not necessary that both groups provide the same <font face="sans-serif"> count</font> value).   
  
 
<BR> 
7. Section <a href="node129.htm#Node129">Group Accessors 
</a> on page <a href="node129.htm#Node129">Group Accessors 
</a>.  
<BR>  
<font face="sans-serif"> MPI_GROUP_TRANSLATE_RANKS</font> and <font face="sans-serif">  MPI_PROC_NULL</font>:  
   
<font face="sans-serif">  MPI_PROC_NULL</font> is a valid rank for input to  
<font face="sans-serif"> MPI_GROUP_TRANSLATE_RANKS</font>, which returns  
<font face="sans-serif">  MPI_PROC_NULL</font> as the translated rank.  
<P> 
 
<BR> 
8. Section <a href="node149.htm#Node149">Caching 
</a> on page <a href="node149.htm#Node149">Caching 
</a>.  
<BR>  
About the attribute caching functions:   
   
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
High-quality implementations should raise an error when a keyval  
that was created by a call to <font face="sans-serif"> MPI_XXX_CREATE_KEYVAL</font> is  
used with an object of the wrong type with a call to  
<font face="sans-serif"> MPI_YYY_GET_ATTR</font>, <font face="sans-serif"> MPI_YYY_SET_ATTR</font>, <font face="sans-serif"> MPI_YYY_DELETE_ATTR</font>, or  
<font face="sans-serif"> MPI_YYY_FREE_KEYVAL</font>. To do so, it is necessary to maintain, with  
each keyval, information on the type of the associated user  
function.  
 (<em> End of advice to implementors.</em>) <BR> 
 
<BR> 
9. Section <a href="node156.htm#Node156">Naming Objects 
</a> on page <a href="node156.htm#Node156">Naming Objects 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_COMM_GET_NAME</font>:   
   
In C, a null character is additionally stored at <font face="sans-serif"> name[resultlen]</font>.   
<font face="sans-serif"> resultlen</font> cannot be larger then   
<font color="red"><font face="sans-serif">  MPI_MAX_OBJECT_NAME</font><font color="black">-1.   
In Fortran, name is padded on the right with blank characters.   
<font face="sans-serif"> resultlen</font> cannot be larger then   
<font color="red"><font face="sans-serif">  MPI_MAX_OBJECT_NAME</font><font color="black">.   
<P> 
 
<BR> 
10. Section <a href="node167.htm#Node167">Overview of the Functions 
</a> on page <a href="node167.htm#Node167">Overview of the Functions 
</a>.  
<BR>  
About <font face="sans-serif"> MPI_GRAPH_CREATE</font> and <font face="sans-serif"> MPI_CART_CREATE</font>:  
   
All input arguments must have identical values on all processes  
of the group of <font face="sans-serif"> comm_old</font>.   
<P> 
 
<BR> 
11. Section <a href="node169.htm#Node169">Cartesian Constructor 
</a> on page <a href="node169.htm#Node169">Cartesian Constructor 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CART_CREATE</font>:  
   
If <font face="sans-serif"> ndims</font> is zero then a zero-dimensional Cartesian topology is created. The  
call is erroneous if it specifies a grid that is larger than the group size or if  
<font face="sans-serif"> ndims</font> is negative.  
<P> 
 
<BR> 
12. Section <a href="node171.htm#Node171">General (Graph) Constructor 
</a> on page <a href="node171.htm#Node171">General (Graph) Constructor 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_GRAPH_CREATE</font>:  
   
If the graph is empty, i.e., <font face="sans-serif"> nnodes == 0</font>,   
then <font face="sans-serif">  MPI_COMM_NULL</font> is returned in all processes.   
<P> 
 
<BR> 
13. Section <a href="node171.htm#Node171">General (Graph) Constructor 
</a> on page <a href="node171.htm#Node171">General (Graph) Constructor 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_GRAPH_CREATE</font>:  
   
A single process is allowed to be defined multiple times in the list of  
neighbors of a process (i.e., there may be multiple edges between two  
processes). A process is also allowed to be a neighbor to itself (i.e., a self  
loop in the graph). The adjacency matrix is allowed to be non-symmetric.  
 
<BR> 
<em> Advice to users.</em>  
 <P> 
Performance implications of using multiple edges or a non-symmetric  
adjacency matrix are not defined. The definition of a node-neighbor  
edge does not imply a direction of the communication.  
 (<em> End of advice to users.</em>) <BR> 
 
<BR> 
14. Section <a href="node173.htm#Node173">Topology Inquiry Functions 
</a> on page <a href="node173.htm#Node173">Topology Inquiry Functions 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CARTDIM_GET</font> and <font face="sans-serif"> MPI_CART_GET</font>:   
   
If <font face="sans-serif"> comm</font> is associated with a zero-dimensional Cartesian topology,  
<font face="sans-serif"> MPI_CARTDIM_GET</font> returns <font face="sans-serif"> ndims=0</font> and <font face="sans-serif"> MPI_CART_GET</font> will keep  
all output arguments unchanged.   
<P> 
 
<BR> 
15. Section <a href="node173.htm#Node173">Topology Inquiry Functions 
</a> on page <a href="node173.htm#Node173">Topology Inquiry Functions 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CART_RANK</font>:  
   
If <font face="sans-serif"> comm</font> is associated with a zero-dimensional Cartesian topology,  
<font face="sans-serif"> coord</font> is not significant and 0 is returned in <font face="sans-serif"> rank</font>.   
<P> 
 
<BR> 
16. Section <a href="node173.htm#Node173">Topology Inquiry Functions 
</a> on page <a href="node173.htm#Node173">Topology Inquiry Functions 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CART_COORDS</font>:  
   
If <font face="sans-serif"> comm</font> is associated with a zero-dimensional Cartesian topology,  
<font face="sans-serif"> coords</font> will be unchanged.   
<P> 
 
<BR> 
17. Section <a href="node174.htm#Node174">Cartesian Shift Coordinates 
</a> on page <a href="node174.htm#Node174">Cartesian Shift Coordinates 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CART_SHIFT</font>:  
   
It is erroneous to call <font face="sans-serif"> MPI_CART_SHIFT</font> with a direction that is either  
negative or greater than or equal to the number of dimensions in the Cartesian  
communicator. This implies that it is erroneous to call <font face="sans-serif"> MPI_CART_SHIFT</font> with a  
<font face="sans-serif"> comm</font> that is associated with a zero-dimensional Cartesian topology.  
<P> 
 
<BR> 
18. Section <a href="node175.htm#Node175">Partitioning of Cartesian structures 
</a> on page <a href="node175.htm#Node175">Partitioning of Cartesian structures 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_CART_SUB</font>:   
   
If all entries in <font face="sans-serif"> remain_dims</font> are false or <font face="sans-serif"> comm</font> is already associated  
with a zero-dimensional Cartesian topology then <font face="sans-serif"> newcomm</font> is associated  
with a zero-dimensional Cartesian topology.   
<P> 
<font color="red">  
 
<BR> 
19. Section <a href="node180.htm#Node180">Version Inquiries 
</a> on page <a href="node180.htm#Node180">Version Inquiries 
</a>.  
<BR>  
The subversion number changed from 0 to 1.  
 <P> 
<font color="black">  
 <P> 
 
<BR> 
20. Section <a href="node181.htm#Node181">Environmental Inquiries 
</a> on page <a href="node181.htm#Node181">Environmental Inquiries 
</a>.  
<BR>  
In <font face="sans-serif"> MPI_GET_PROCESSOR_NAME</font>:   
   
In C, a null character is additionally stored at <font face="sans-serif"> name[resultlen]</font>.   
<font face="sans-serif"> resultlen</font> cannot be larger then <font face="sans-serif">  MPI_MAX_PROCESSOR_NAME</font>-1.   
In Fortran, name is padded on the right with blank characters.   
<font face="sans-serif"> resultlen</font> cannot be larger then <font face="sans-serif">  MPI_MAX_PROCESSOR_NAME</font>.   
<P> 
 
<BR> 
21. Section <a href="node187.htm#Node187">Error Handling 
</a> on page <a href="node187.htm#Node187">Error Handling 
</a>.  
<BR>  
   
<font face="sans-serif"> MPI_ {COMM,WIN,FILE }_GET_ERRHANDLER</font> behave as if a  
new error handler object is created.  
That is, once the error handler is no longer needed,  
<font face="sans-serif"> MPI_ERRHANDLER_FREE</font> should be called with the error handler returned  
from <font face="sans-serif"> MPI_ERRHANDLER_GET</font> or  
<font face="sans-serif"> MPI_ {COMM,WIN,FILE }_GET_ERRHANDLER</font>  
to mark the error handler for deallocation.  
This provides behavior similar to that of <font face="sans-serif"> MPI_COMM_GROUP</font> and  
<font face="sans-serif"> MPI_GROUP_FREE</font>.  
<P> 
 
<BR> 
22. Section <a href="node195.htm#Node195">Startup 
</a> on page <a href="node195.htm#Node195">Startup 
</a>, see explanations to <font face="sans-serif"> MPI_FINALIZE</font>.  
<BR>  
   
<font face="sans-serif"> MPI_FINALIZE</font> is collective over all connected processes.  
If no processes were spawned, accepted or connected then this means  
over <font face="sans-serif">  MPI_COMM_WORLD</font>; otherwise it is collective over the  
union of all processes that have been and continue to be connected,  
as explained in Section <a href="node226.htm#Node226">Releasing Connections 
</a> on page <a href="node226.htm#Node226">Releasing Connections 
</a>.  
<P> 
 
<BR> 
23. Section <a href="node195.htm#Node195">Startup 
</a> on page <a href="node195.htm#Node195">Startup 
</a>.  
<BR>  
About <font face="sans-serif"> MPI_ABORT</font>:  
   
 
<BR> 
<em> Advice to users.</em>  
 <P> 
Whether the errorcode is returned from the executable or  
from the <font face="sans-serif"> MPI</font> process startup mechanism (e.g., mpiexec), is an aspect of  
quality of the <font face="sans-serif"> MPI</font> library but not mandatory.  
 (<em> End of advice to users.</em>) <BR> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
 <P> 
Where possible, a high-quality implementation will  
try to return the errorcode from the <font face="sans-serif"> MPI</font> process startup mechanism (e.g.  
mpiexec or singleton init).  
 (<em> End of advice to implementors.</em>) <BR> 
 
<BR> 
24. Section <a href="node199.htm#Node199">The <font face="sans-serif"> Info</font> Object 
</a> on page <a href="node199.htm#Node199">The <font face="sans-serif"> Info</font> Object 
</a>.  
<BR>  
   
An implementation must support info objects as caches for arbitrary (<font face="sans-serif"> key</font>,  
<font face="sans-serif"> value</font>) pairs, regardless of whether it recognizes the key. Each function that  
takes hints in the form of an <font face="sans-serif"> MPI_Info</font> must be prepared to ignore any key it  
does not recognize. This description of info objects does not attempt to  
define how a particular function should react if it recognizes a key but not the  
associated value.   
<font face="sans-serif"> MPI_INFO_GET_NKEYS</font>, <font face="sans-serif"> MPI_INFO_GET_NTHKEY</font>,  
<font face="sans-serif"> MPI_INFO_GET_VALUELEN</font>, and <font face="sans-serif"> MPI_INFO_GET</font>  
must retain all (<font face="sans-serif"> key</font>,<font face="sans-serif"> value</font>)  
pairs so that layered functionality can also use the <font face="sans-serif"> Info</font> object.   
<P> 
 
<BR> 
25.   
Section <a href="node233.htm#Node233">Communication Calls 
</a> on page <a href="node233.htm#Node233">Communication Calls 
</a>.  
<BR>  
   
<font face="sans-serif">  MPI_PROC_NULL</font> is a valid target rank in the <font face="sans-serif"> MPI</font> RMA calls  
<font face="sans-serif"> MPI_ACCUMULATE</font>, <font face="sans-serif"> MPI_GET</font>, and <font face="sans-serif"> MPI_PUT</font>.    
The effect is the same as for <font face="sans-serif">  MPI_PROC_NULL</font> in <font face="sans-serif"> MPI</font> point-to-point  
communication.  
See also item <a href="node432.htm#Node432">Changes from Version 2.0 to Version 2.1 
</a> in this list.   
  
 
<BR> 
26.   
Section <a href="node233.htm#Node233">Communication Calls 
</a> on page <a href="node233.htm#Node233">Communication Calls 
</a>.  
<BR>  
   
After any RMA operation with rank <font face="sans-serif">  MPI_PROC_NULL</font>, it is still necessary to  
finish the RMA epoch with the synchronization method that started the epoch.   
See also item <a href="node432.htm#Node432">Changes from Version 2.0 to Version 2.1 
</a> in this list.   
  
 
<BR> 
27. Section <a href="node237.htm#Node237">Accumulate Functions 
</a> on page <a href="node237.htm#Node237">Accumulate Functions 
</a>.  
<BR>  
   
<font face="sans-serif">  MPI_REPLACE</font>  
in <font face="sans-serif"> MPI_ACCUMULATE</font>,   
   
like the other predefined operations,   
is defined only for the predefined <font face="sans-serif"> MPI</font> datatypes.  
<P> 
 
<BR> 
28. Section <a href="node272.htm#Node272">File Info 
</a> on page <a href="node272.htm#Node272">File Info 
</a>.  
<BR>  
About <font face="sans-serif"> MPI_FILE_SET_VIEW</font> and <font face="sans-serif"> MPI_FILE_SET_INFO</font>:  
   
When an info object that specifies a subset of valid hints is passed to  
<font face="sans-serif"> MPI_FILE_SET_VIEW</font> or <font face="sans-serif"> MPI_FILE_SET_INFO</font>,   
there will be no effect on  
previously set or defaulted hints that the <font face="sans-serif"> info</font> does not specify.   
<P> 
 
<BR> 
29. Section <a href="node272.htm#Node272">File Info 
</a> on page <a href="node272.htm#Node272">File Info 
</a>.  
<BR>  
About <font face="sans-serif"> MPI_FILE_GET_INFO</font>:  
   
If no hint exists   
for the file associated with <font face="sans-serif"> fh</font>,   
   
a handle to a newly created info object is returned that  
contains no key/value pair.   
<P> 
 
<BR> 
30. Section <a href="node274.htm#Node274">File Views 
</a> on page <a href="node274.htm#Node274">File Views 
</a>.  
<BR>  
If a file does not have the mode <font face="sans-serif">  MPI_MODE_SEQUENTIAL</font>,  
then <font face="sans-serif">  MPI_DISPLACEMENT_CURRENT</font> is invalid as <font face="sans-serif"> disp</font> in   
<font face="sans-serif"> MPI_FILE_SET_VIEW</font>.    
  
 
<BR> 
31. Section <a href="node290.htm#Node290">External Data Representation: ``external32'' 
</a> on page <a href="node290.htm#Node290">External Data Representation: ``external32'' 
</a>.  
<BR>  
The bias of 16 byte doubles was defined with 10383. The correct value is 16383.   
  
 
<BR> 
32. Section <a href="node334.htm#Node334">Class Member Functions for <font face="sans-serif"> MPI</font> 
</a> on page <a href="node334.htm#Node334">Class Member Functions for <font face="sans-serif"> MPI</font> 
</a>.  
<BR>  
In the example in this section,  
the buffer should be declared as <tt> const void* buf</tt>.   
  
 
<BR> 
33. Section <a href="node353.htm#Node353">Additional Support for Fortran Numeric Intrinsic Types 
</a> on page <a href="node353.htm#Node353">Additional Support for Fortran Numeric Intrinsic Types 
</a>.  
<BR>  
About <font face="sans-serif"> MPI_TYPE_CREATE_F90_xxxx</font>:  
   
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
An application may often repeat a call to  
<font face="sans-serif"> MPI_TYPE_CREATE_F90_xxxx</font> with the same combination of   
(<font face="sans-serif"> xxxx</font>,<font face="sans-serif"> p</font>,<font face="sans-serif"> r</font>).  
The application is not allowed to free the returned predefined, unnamed  
datatype handles. To prevent the creation of a potentially huge amount of  
handles, the <font face="sans-serif"> MPI</font> implementation should return the same datatype handle for  
the same (<font face="sans-serif"> REAL/COMPLEX/INTEGER</font>,<font face="sans-serif"> p</font>,<font face="sans-serif"> r</font>) combination.   
Checking for the  
combination (<font face="sans-serif"> p</font>,<font face="sans-serif"> r</font>) in the preceding call to   
<font face="sans-serif"> MPI_TYPE_CREATE_F90_xxxx</font> and  
using a hash-table to find formerly generated handles should limit the  
overhead of finding a previously generated datatype with same combination  
of (<font face="sans-serif"> xxxx</font>,<font face="sans-serif"> p</font>,<font face="sans-serif"> r</font>).  
 (<em> End of advice to implementors.</em>) <BR> 
 
<BR> 
34. Section <a href="node375.htm#Node375">Defined Constants 
</a> on page <a href="node375.htm#Node375">Defined Constants 
</a>.  
<BR>  
<font face="sans-serif">  MPI_BOTTOM</font> is defined as  
   
<tt> void * const MPI::BOTTOM</tt>.   
 <P> 
</ol> 
  
<P> 
   
   
  
  
  

<P>
<HR>
<A HREF="node431.htm#Node431"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node433.htm#Node433"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node433.htm#Node433"> Bibliography</a>
<b>Previous: </b><A HREF="node431.htm#Node431"> Changes from Version 2.1 to Version 2.2</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
