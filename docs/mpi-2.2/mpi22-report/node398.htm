<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-FNames.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Datatypes Fortran Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node398">353. Datatypes Fortran Bindings</a></H2>
<A HREF="node397.htm#Node397"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node399.htm#Node399"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node399.htm#Node399"> Collective Communication Fortran Bindings</a>
<b>Previous: </b><A HREF="node397.htm#Node397"> Point-to-Point Communication Fortran Bindings</a>
<P>
 <tt> MPI_GET_ADDRESS(LOCATION, ADDRESS, IERROR)<BR> &lt;type&gt; LOCATION(*) <BR>INTEGER IERROR<BR>INTEGER(KIND=MPI_ADDRESS_KIND) ADDRESS <BR></tt>  
 <tt> MPI_GET_ELEMENTS(STATUS, DATATYPE, COUNT, IERROR)<BR> INTEGER  STATUS(MPI_STATUS_SIZE), DATATYPE, COUNT, IERROR <BR></tt>  
 <tt> MPI_PACK(INBUF, INCOUNT, DATATYPE, OUTBUF, OUTSIZE, POSITION, COMM, IERROR)<BR> &lt;type&gt; INBUF(*), OUTBUF(*)<BR>INTEGER INCOUNT, DATATYPE, OUTSIZE, POSITION,  COMM, IERROR <BR></tt>  
 <tt> MPI_PACK_EXTERNAL(DATAREP, INBUF, INCOUNT, DATATYPE, OUTBUF, OUTSIZE, POSITION, IERROR)<BR> INTEGER INCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) OUTSIZE, POSITION <BR>CHARACTER*(*) DATAREP <BR>&lt;type&gt; INBUF(*), OUTBUF(*) <BR></tt>  
 <tt> MPI_PACK_EXTERNAL_SIZE(DATAREP, INCOUNT, DATATYPE, SIZE, IERROR)<BR> INTEGER INCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) SIZE <BR>CHARACTER*(*) DATAREP  <BR></tt>  
 <tt> MPI_PACK_SIZE(INCOUNT, DATATYPE, COMM, SIZE, IERROR)<BR> INTEGER INCOUNT, DATATYPE, COMM, SIZE, IERROR <BR></tt>  
 <tt> MPI_TYPE_COMMIT(DATATYPE, IERROR)<BR> INTEGER  DATATYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_CONTIGUOUS(COUNT, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER  COUNT, OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_CREATE_DARRAY(SIZE, RANK, NDIMS, ARRAY_OF_GSIZES, ARRAY_OF_DISTRIBS, ARRAY_OF_DARGS, ARRAY_OF_PSIZES, ORDER, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER SIZE, RANK, NDIMS, ARRAY_OF_GSIZES(*), ARRAY_OF_DISTRIBS(*), ARRAY_OF_DARGS(*), ARRAY_OF_PSIZES(*), ORDER, OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_CREATE_HINDEXED(COUNT, ARRAY_OF_BLOCKLENGTHS, ARRAY_OF_DISPLACEMENTS, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER COUNT, ARRAY_OF_BLOCKLENGTHS(*), OLDTYPE, NEWTYPE, IERROR<BR>INTEGER(KIND=MPI_ADDRESS_KIND) ARRAY_OF_DISPLACEMENTS(*) <BR></tt>  
 <tt> MPI_TYPE_CREATE_HVECTOR(COUNT, BLOCKLENGTH, STRIDE, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER COUNT, BLOCKLENGTH, OLDTYPE, NEWTYPE, IERROR<BR>INTEGER(KIND=MPI_ADDRESS_KIND) STRIDE <BR></tt>  
 <tt> MPI_TYPE_CREATE_INDEXED_BLOCK(COUNT, BLOCKLENGTH, ARRAY_OF_DISPLACEMENTS, OLDTYPE, NEWTYPE, IERROR) <BR> INTEGER COUNT, BLOCKLENGTH, ARRAY_OF_DISPLACEMENTS(*), OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_CREATE_RESIZED(OLDTYPE, LB, EXTENT, NEWTYPE, IERROR)<BR> INTEGER OLDTYPE,  NEWTYPE, IERROR<BR>INTEGER(KIND=MPI_ADDRESS_KIND) LB, EXTENT <BR></tt>  
 <tt> MPI_TYPE_CREATE_STRUCT(COUNT, ARRAY_OF_BLOCKLENGTHS, ARRAY_OF_DISPLACEMENTS, ARRAY_OF_TYPES, NEWTYPE, IERROR)<BR> INTEGER COUNT, ARRAY_OF_BLOCKLENGTHS(*), ARRAY_OF_TYPES(*), NEWTYPE, IERROR<BR>INTEGER(KIND=MPI_ADDRESS_KIND) ARRAY_OF_DISPLACEMENTS(*) <BR></tt>  
 <tt> MPI_TYPE_CREATE_SUBARRAY(NDIMS, ARRAY_OF_SIZES, ARRAY_OF_SUBSIZES, ARRAY_OF_STARTS, ORDER, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER NDIMS, ARRAY_OF_SIZES(*), ARRAY_OF_SUBSIZES(*), ARRAY_OF_STARTS(*), ORDER, OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_DUP(TYPE, NEWTYPE, IERROR)<BR> INTEGER TYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_FREE(DATATYPE, IERROR)<BR> INTEGER  DATATYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_GET_CONTENTS(DATATYPE, MAX_INTEGERS, MAX_ADDRESSES, MAX_DATATYPES, ARRAY_OF_INTEGERS, ARRAY_OF_ADDRESSES, ARRAY_OF_DATATYPES, IERROR)<BR> INTEGER DATATYPE, MAX_INTEGERS, MAX_ADDRESSES, MAX_DATATYPES, ARRAY_OF_INTEGERS(*), ARRAY_OF_DATATYPES(*), IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) ARRAY_OF_ADDRESSES(*) <BR></tt>  
 <tt> MPI_TYPE_GET_ENVELOPE(DATATYPE, NUM_INTEGERS, NUM_ADDRESSES, NUM_DATATYPES, COMBINER, IERROR)<BR> INTEGER DATATYPE, NUM_INTEGERS, NUM_ADDRESSES, NUM_DATATYPES, COMBINER, IERROR <BR></tt>  
 <tt> MPI_TYPE_GET_EXTENT(DATATYPE, LB, EXTENT, IERROR)<BR> INTEGER  DATATYPE,  IERROR<BR>INTEGER(KIND = MPI_ADDRESS_KIND) LB, EXTENT <BR></tt>  
 <tt> MPI_TYPE_GET_TRUE_EXTENT(DATATYPE, TRUE_LB, TRUE_EXTENT, IERROR)<BR> INTEGER DATATYPE,  IERROR<BR>INTEGER(KIND = MPI_ADDRESS_KIND) TRUE_LB, TRUE_EXTENT <BR></tt>  
 <tt> MPI_TYPE_INDEXED(COUNT, ARRAY_OF_BLOCKLENGTHS, ARRAY_OF_DISPLACEMENTS, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER COUNT, ARRAY_OF_BLOCKLENGTHS(*), ARRAY_OF_DISPLACEMENTS(*), OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_TYPE_SIZE(DATATYPE, SIZE, IERROR)<BR> INTEGER DATATYPE, SIZE, IERROR <BR></tt>  
 <tt> MPI_TYPE_VECTOR(COUNT, BLOCKLENGTH, STRIDE, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER  COUNT, BLOCKLENGTH, STRIDE, OLDTYPE, NEWTYPE, IERROR <BR></tt>  
 <tt> MPI_UNPACK(INBUF, INSIZE, POSITION, OUTBUF, OUTCOUNT, DATATYPE, COMM, IERROR)<BR>  &lt;type&gt; INBUF(*), OUTBUF(*) <BR>INTEGER INSIZE, POSITION, OUTCOUNT, DATATYPE, COMM, IERROR <BR></tt>  
 <tt> MPI_UNPACK_EXTERNAL(DATAREP, INBUF, INSIZE, POSITION, OUTBUF, OUTCOUNT, DATATYPE, IERROR)<BR> INTEGER OUTCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) INSIZE, POSITION <BR>CHARACTER*(*) DATAREP <BR>&lt;type&gt; INBUF(*), OUTBUF(*) <BR></tt>  
<P> 

<P>
<HR>
<A HREF="node397.htm#Node397"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node399.htm#Node399"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node399.htm#Node399"> Collective Communication Fortran Bindings</a>
<b>Previous: </b><A HREF="node397.htm#Node397"> Point-to-Point Communication Fortran Bindings</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
