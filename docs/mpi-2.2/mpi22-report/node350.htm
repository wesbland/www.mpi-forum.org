<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-binding/binding-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Extended Fortran Support</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node350">315. Extended Fortran Support</a></H2>
<A HREF="node349.htm#Node349"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node341.htm#Node341"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node350.htm#Node351"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node341.htm#Node341"> Fortran Support</a>
<b>Next: </b><A HREF="node350.htm#Node351"> The <tt> mpi</tt> Module</a>
<b>Previous: </b><A HREF="node349.htm#Node349"> Basic Fortran Support</a>
<P>
  
<P> 
Implementations with Extended Fortran support must provide:  
<ol> 
 
1. An <tt> mpi</tt> module  
  
 
<BR> 
2. A new set of functions to provide additional support for Fortran   
intrinsic numeric types, including parameterized types:  
<font face="sans-serif"> MPI_SIZEOF</font>, <font face="sans-serif"> MPI_TYPE_MATCH_SIZE</font>, <font face="sans-serif"> MPI_TYPE_CREATE_F90_INTEGER</font>,  
<font face="sans-serif"> MPI_TYPE_CREATE_F90_REAL</font> and   
<font face="sans-serif"> MPI_TYPE_CREATE_F90_COMPLEX</font>.   
Parameterized types are Fortran intrinsic types which are specified  
using <tt> KIND</tt> type parameters.  
These routines are described in detail in Section <a href="node353.htm#Node353">Additional Support for Fortran Numeric Intrinsic Types 
</a>.  
  
</ol> 
Additionally, high-quality implementations should provide  
a mechanism to prevent fatal type mismatch errors for <font face="sans-serif"> MPI</font>  
routines with choice arguments.   
<P> 
<menu> 
</menu> 

<P>
<HR>
<A HREF="node349.htm#Node349"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node341.htm#Node341"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node350.htm#Node351"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node341.htm#Node341"> Fortran Support</a>
<b>Next: </b><A HREF="node350.htm#Node351"> The <tt> mpi</tt> Module</a>
<b>Previous: </b><A HREF="node349.htm#Node349"> Basic Fortran Support</a>
<P>
<HR><H3><A NAME="Node351">315.1. The  mpi Module</a></H3>
<A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node350.htm#Node352"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<b>Next: </b><A HREF="node350.htm#Node352"> No Type Mismatch Problems for Subroutines with Choice Arguments</a>
<b>Previous: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<P>
An <font face="sans-serif"> MPI</font> implementation must provide a module named <tt> mpi</tt> that   
can be <font color="red"><tt> use</tt><font color="black">d in a Fortran 90 program. This module must:  
<ul> 
 
<li>Define all named <font face="sans-serif"> MPI</font> constants  
 
<li>Declare <font face="sans-serif"> MPI</font> functions that return a value.   
</ul> 
<BR> 
An <font face="sans-serif"> MPI</font> implementation may provide in the <tt> mpi</tt> module   
other features that enhance the usability of <font face="sans-serif"> MPI</font> while  
maintaining adherence to the standard. For example, it   
may:  
<ul> 
 
<li>Provide interfaces for all or for a subset of <font face="sans-serif"> MPI</font> routines.  
 
<li>Provide <tt> INTENT</tt> information in these interface blocks.   
</ul> 
<BR> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
The appropriate <tt> INTENT</tt> may be different from what is given in the  
<font face="sans-serif"> MPI</font> generic interface. Implementations must choose <tt> INTENT</tt> so that  
the function adheres to the <font face="sans-serif"> MPI</font> standard.  
 (<em> End of advice to implementors.</em>) <BR> 
  
 
<BR> 
<em> Rationale.</em>  
<P> 
The intent given by the <font face="sans-serif"> MPI</font> generic interface is not precisely  
defined and does not in all cases correspond to the correct Fortran  
<tt> INTENT</tt>. For instance, receiving into a buffer specified by a datatype  
with absolute addresses may require associating <font face="sans-serif">  MPI_BOTTOM</font>  
with a dummy <tt> OUT</tt> argument.  Moreover, ``constants'' such as  
<font face="sans-serif">  MPI_BOTTOM</font> and <font face="sans-serif">  MPI_STATUS_IGNORE</font> are not constants  
as defined by Fortran, but ``special addresses'' used in a nonstandard  
way.  Finally, the <font face="sans-serif"> MPI-1</font> generic intent is changed in several places  
by <font face="sans-serif"> MPI-2</font>. For instance, <font face="sans-serif">  MPI_IN_PLACE</font> changes the sense of  
an <tt> OUT</tt> argument to be <tt> INOUT</tt>.  
 (<em> End of rationale.</em>) <BR> 
  
<P> 
Applications may use  either the <tt> mpi</tt> module or the  
<tt> mpif.h</tt> include file. An implementation may require  
use of the module to prevent type mismatch errors (see below).   
 
<BR> 
<em> Advice to users.</em>  
<P> 
It is recommended to use the <tt> mpi</tt> module even if it  
is not necessary to use it to avoid type mismatch errors  
on a particular system. Using a module provides several   
potential advantages over using an include file.  
 (<em> End of advice to users.</em>) <BR> 
It must be possible to link together routines some of which <tt> USE</tt> <tt> mpi</tt>  
and others of which <tt> INCLUDE</tt> <tt> mpif.h</tt>.   
<P> 

<P>
<HR>
<A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node350.htm#Node352"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<b>Next: </b><A HREF="node350.htm#Node352"> No Type Mismatch Problems for Subroutines with Choice Arguments</a>
<b>Previous: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<P>
<HR><H3><A NAME="Node352">315.2. No Type Mismatch Problems for Subroutines with Choice Arguments</a></H3>
<A HREF="node350.htm#Node351"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node353.htm#Node353"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<b>Next: </b><A HREF="node353.htm#Node353"> Additional Support for Fortran Numeric Intrinsic Types</a>
<b>Previous: </b><A HREF="node350.htm#Node351"> The <tt> mpi</tt> Module</a>
<P>
A high-quality <font face="sans-serif"> MPI</font> implementation should provide a mechanism to  
ensure that <font face="sans-serif"> MPI</font> choice arguments do not cause fatal compile-time or run-time  
errors due to type mismatch.  An <font face="sans-serif"> MPI</font> implementation may require  
applications to use the <tt> mpi</tt> module, or require that it be   
compiled with a particular compiler flag, in order to avoid type  
mismatch problems.  
<P> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
In the case where the compiler does not generate errors, nothing needs  
to be done to the existing interface.  In the case where the compiler  
may generate errors, a set of overloaded  
functions may be used.  See the paper of M. Hennecke [<a href="node433.htm#-Bib26">26</a>].  
Even if the compiler does not generate errors, explicit interfaces for  
all routines would be useful for detecting errors in the argument  
list. Also, explicit interfaces which give <tt> INTENT</tt> information   
can reduce the amount of copying for <tt> BUF(*)</tt> arguments.   
 (<em> End of advice to implementors.</em>) <BR> 
  
  

<P>
<HR>
<A HREF="node350.htm#Node351"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node350.htm#Node350"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node353.htm#Node353"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node350.htm#Node350"> Extended Fortran Support</a>
<b>Next: </b><A HREF="node353.htm#Node353"> Additional Support for Fortran Numeric Intrinsic Types</a>
<b>Previous: </b><A HREF="node350.htm#Node351"> The <tt> mpi</tt> Module</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
