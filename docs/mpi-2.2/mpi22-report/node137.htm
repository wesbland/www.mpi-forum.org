<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Current Practice #1</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node137">135. Current Practice #1</a></H2>
<A HREF="node136.htm#Node136"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node136.htm#Node136"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node138.htm#Node138"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node136.htm#Node136"> Motivating Examples</a>
<b>Next: </b><A HREF="node138.htm#Node138"> Current Practice #2</a>
<b>Previous: </b><A HREF="node136.htm#Node136"> Motivating Examples</a>
<P>
  
 Example #1a:  
  
2.2  
<font color="red">  
<BR> 
<pre><tt>   int main(int argc, char **argv) 
   { 
     int me, size; 
     ... 
     MPI_Init ( &amp;argc, &amp;argv ); 
     MPI_Comm_rank (MPI_COMM_WORLD, &amp;me); 
     MPI_Comm_size (MPI_COMM_WORLD, &amp;size); 
 
     (void)printf ("Process %d size %d\n", me, size); 
     ... 
     MPI_Finalize(); 
   } 
</tt></pre> 
<font color="black">  
Example #1a is a do-nothing program that initializes itself legally,  
and refers to the ``all'' communicator, and prints a message.  It  
terminates itself legally too. This example does not imply that <font face="sans-serif"> MPI</font>  
supports <tt> printf</tt>-like communication itself.  
<P> 
 Example #1b (supposing that <tt> size</tt> is even):  
  
2.2  
<font color="red">  
<BR> 
<pre><tt>    int main(int argc, char **argv) 
    { 
       int me, size; 
       int SOME_TAG = 0; 
       ... 
       MPI_Init(&amp;argc, &amp;argv); 
 
       MPI_Comm_rank(MPI_COMM_WORLD, &amp;me);   /* local */ 
       MPI_Comm_size(MPI_COMM_WORLD, &amp;size); /* local */ 
 
       if((me % 2) == 0) 
       { 
          /* send unless highest-numbered process */ 
          if((me + 1) &lt; size) 
             MPI_Send(..., me + 1, SOME_TAG, MPI_COMM_WORLD); 
       } 
       else 
          MPI_Recv(..., me - 1, SOME_TAG, MPI_COMM_WORLD, &amp;status); 
 
       ... 
       MPI_Finalize(); 
    } 
</tt></pre> 
<font color="black">  
Example #1b schematically illustrates  
message exchanges between ``even'' and ``odd'' processes in the ``all''  
communicator.  
<P> 

<P>
<HR>
<A HREF="node136.htm#Node136"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node136.htm#Node136"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node138.htm#Node138"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node136.htm#Node136"> Motivating Examples</a>
<b>Next: </b><A HREF="node138.htm#Node138"> Current Practice #2</a>
<b>Previous: </b><A HREF="node136.htm#Node136"> Motivating Examples</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
