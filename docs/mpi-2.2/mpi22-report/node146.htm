<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Inter-Communication Examples</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node146">144. Inter-Communication Examples</a></H2>
<A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node143.htm#Node143"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node143.htm#Node143"> Inter-Communication</a>
<b>Next: </b><A HREF="node146.htm#Node147"> Example 1:  Three-Group ``Pipeline"</a>
<b>Previous: </b><A HREF="node145.htm#Node145"> Inter-communicator Operations</a>
<P>
<menu> 
</menu> 

<P>
<HR>
<A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node143.htm#Node143"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node143.htm#Node143"> Inter-Communication</a>
<b>Next: </b><A HREF="node146.htm#Node147"> Example 1:  Three-Group ``Pipeline"</a>
<b>Previous: </b><A HREF="node145.htm#Node145"> Inter-communicator Operations</a>
<P>
<HR><H3><A NAME="Node147">144.1. Example 1:  Three-Group ``Pipeline"</a></H3>
<A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node148"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<b>Next: </b><A HREF="node146.htm#Node148"> Example 2:  Three-Group ``Ring"</a>
<b>Previous: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<P>
  
<P> 
<P> 
  <CENTER>  
</CENTER>  <P><IMG WIDTH=378 HEIGHT=91 SRC="context-fig-1.gif"><P>
  
  <BR> 
<b>Figure 15: </b><A NAME="Figure15">Three-group pipeline.</a><P> 
  
  
 Groups 0 and 1 communicate.  Groups 1 and 2 communicate.  Therefore, group  
0 requires one inter-communicator, group 1 requires two  
inter-communicators, and group 2 requires 1 inter-communicator.  
<P> 
  
2.2  
<font color="red">  
<BR> 
<pre><tt>   int main(int argc, char **argv) 
   { 
     MPI_Comm   myComm;       /* intra-communicator of local sub-group */ 
     MPI_Comm   myFirstComm;  /* inter-communicator */ 
     MPI_Comm   mySecondComm; /* second inter-communicator (group 1 only) */ 
     int membershipKey; 
     int rank; 
 
     MPI_Init(&amp;argc, &amp;argv); 
     MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank); 
 
     /* User code must generate membershipKey in the range [0, 1, 2] */ 
     membershipKey = rank % 3; 
 
     /* Build intra-communicator for local sub-group */ 
     MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &amp;myComm); 
 
     /* Build inter-communicators.  Tags are hard-coded. */ 
     if (membershipKey == 0) 
     {                     /* Group 0 communicates with group 1. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 1, 
                            1, &amp;myFirstComm); 
     } 
     else if (membershipKey == 1) 
     {              /* Group 1 communicates with groups 0 and 2. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 0, 
                            1, &amp;myFirstComm); 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 2, 
                            12, &amp;mySecondComm); 
     } 
     else if (membershipKey == 2) 
     {                     /* Group 2 communicates with group 1. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 1, 
                            12, &amp;myFirstComm); 
     } 
 
     /* Do work ... */ 
 
     switch(membershipKey)  /* free communicators appropriately */ 
     { 
     case 1: 
        MPI_Comm_free(&amp;mySecondComm); 
     case 0: 
     case 2: 
        MPI_Comm_free(&amp;myFirstComm); 
        break; 
     } 
 
     MPI_Finalize(); 
   } 
</tt></pre> 
<font color="black">  
<P> 

<P>
<HR>
<A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node148"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<b>Next: </b><A HREF="node146.htm#Node148"> Example 2:  Three-Group ``Ring"</a>
<b>Previous: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<P>
<HR><H3><A NAME="Node148">144.2. Example 2:  Three-Group ``Ring"</a></H3>
<A HREF="node146.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node149.htm#Node149"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<b>Next: </b><A HREF="node149.htm#Node149"> Caching</a>
<b>Previous: </b><A HREF="node146.htm#Node147"> Example 1:  Three-Group ``Pipeline"</a>
<P>
  
<P> 
<P> 
  <CENTER>  
</CENTER>  <P><IMG WIDTH=432 HEIGHT=118 SRC="context-fig-2.gif"><P>
  
  <BR> 
<b>Figure 16: </b><A NAME="Figure16">Three-group ring.</a><P> 
  
  
Groups 0 and 1 communicate.  Groups 1 and 2 communicate.  Groups 0 and  
2 communicate.  Therefore, each requires two inter-communicators.  
<P> 
  
2.2  
<font color="red">  
<BR> 
<pre><tt>   int main(int argc, char **argv) 
   { 
     MPI_Comm   myComm;      /* intra-communicator of local sub-group */ 
     MPI_Comm   myFirstComm; /* inter-communicators */ 
     MPI_Comm   mySecondComm; 
     MPI_Status status; 
     int membershipKey; 
     int rank; 
 
     MPI_Init(&amp;argc, &amp;argv); 
     MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank); 
     ... 
 
     /* User code must generate membershipKey in the range [0, 1, 2] */ 
     membershipKey = rank % 3; 
 
     /* Build intra-communicator for local sub-group */ 
     MPI_Comm_split(MPI_COMM_WORLD, membershipKey, rank, &amp;myComm); 
 
     /* Build inter-communicators.  Tags are hard-coded. */ 
     if (membershipKey == 0) 
     {             /* Group 0 communicates with groups 1 and 2. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 1, 
                            1, &amp;myFirstComm); 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 2, 
                            2, &amp;mySecondComm); 
     } 
     else if (membershipKey == 1) 
     {         /* Group 1 communicates with groups 0 and 2. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 0, 
                            1, &amp;myFirstComm); 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 2, 
                            12, &amp;mySecondComm); 
     } 
     else if (membershipKey == 2) 
     {        /* Group 2 communicates with groups 0 and 1. */ 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 0, 
                            2, &amp;myFirstComm); 
       MPI_Intercomm_create( myComm, 0, MPI_COMM_WORLD, 1, 
                            12, &amp;mySecondComm); 
     } 
 
     /* Do some work ... */ 
 
     /* Then free communicators before terminating... */ 
     MPI_Comm_free(&amp;myFirstComm); 
     MPI_Comm_free(&amp;mySecondComm); 
     MPI_Comm_free(&amp;myComm); 
     MPI_Finalize(); 
   } 
</tt></pre> 
<font color="black">  
  
2.2  
<P> 

<P>
<HR>
<A HREF="node146.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node149.htm#Node149"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node146.htm#Node146"> Inter-Communication Examples</a>
<b>Next: </b><A HREF="node149.htm#Node149"> Caching</a>
<b>Previous: </b><A HREF="node146.htm#Node147"> Example 1:  Three-Group ``Pipeline"</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
