<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-ei/ei-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Examples</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node255">240. Examples</a></H2>
<A HREF="node254.htm#Node254"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node254.htm#Node254"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node256.htm#Node256"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node254.htm#Node254"> Generalized Requests</a>
<b>Next: </b><A HREF="node256.htm#Node256"> Associating Information with Status</a>
<b>Previous: </b><A HREF="node254.htm#Node254"> Generalized Requests</a>
<P>
<BR><b> Example</b>  
This example shows the code for a user-defined reduce operation on an  
<tt> int</tt> using  
a binary tree: each non-root node receives two messages, sums them,   
and sends them up.  We assume that no status is returned and that the  
operation cannot be cancelled.  
<P> 
  
<BR> 
<pre><tt>typedef struct { 
   MPI_Comm comm; 
   int tag; 
   int root; 
   int valin; 
   int *valout; 
   MPI_Request request; 
   } ARGS; 
 
 
int myreduce(MPI_Comm comm, int tag, int root,  
              int valin, int *valout, MPI_Request *request) 
{ 
   ARGS *args; 
   pthread_t thread; 
    
   /* start request */ 
   MPI_Grequest_start(query_fn, free_fn, cancel_fn, NULL, request); 
    
   args = (ARGS*)malloc(sizeof(ARGS)); 
   args-&gt;comm = comm; 
   args-&gt;tag = tag; 
   args-&gt;root = root; 
   args-&gt;valin = valin; 
   args-&gt;valout = valout; 
   args-&gt;request = *request; 
    
   /* spawn thread to handle request */ 
   /* The availability of the pthread_create call is system dependent */ 
   pthread_create(&amp;thread, NULL, reduce_thread, args); 
    
   return MPI_SUCCESS; 
} 
 
/* thread code */ 
void* reduce_thread(void *ptr)  
{ 
   int lchild, rchild, parent, lval, rval, val; 
   MPI_Request req[2]; 
   ARGS *args; 
    
   args = (ARGS*)ptr; 
    
   /* compute left,right child and parent in tree; set  
      to MPI_PROC_NULL if does not exist  */ 
   /* code not shown */ 
   ... 
      
   MPI_Irecv(&amp;lval, 1, MPI_INT, lchild, args-&gt;tag, args-&gt;comm, &amp;req[0]); 
   MPI_Irecv(&amp;rval, 1, MPI_INT, rchild, args-&gt;tag, args-&gt;comm, &amp;req[1]); 
   MPI_Waitall(2, req, MPI_STATUSES_IGNORE); 
   val = lval + args-&gt;valin + rval; 
   MPI_Send( &amp;val, 1, MPI_INT, parent, args-&gt;tag, args-&gt;comm ); 
   if (parent == MPI_PROC_NULL) *(args-&gt;valout) = val; 
   MPI_Grequest_complete((args-&gt;request));    
   free(ptr); 
   return(NULL); 
} 
 
int query_fn(void *extra_state, MPI_Status *status) 
{ 
   /* always send just one int */ 
   MPI_Status_set_elements(status, MPI_INT, 1); 
   /* can never cancel so always true */ 
   MPI_Status_set_cancelled(status, 0); 
   /* choose not to return a value for this */ 
   status-&gt;MPI_SOURCE = MPI_UNDEFINED; 
   /* tag has no meaning for this generalized request */ 
   status-&gt;MPI_TAG = MPI_UNDEFINED; 
   /* this generalized request never fails */ 
   return MPI_SUCCESS; 
} 
 
 
int free_fn(void *extra_state) 
{ 
   /* this generalized request does not need to do any freeing */ 
   /* as a result it never fails here */ 
   return MPI_SUCCESS; 
} 
 
 
int cancel_fn(void *extra_state, int complete) 
{ 
   /* This generalized request does not support cancelling. 
      Abort if not already done.  If done then treat as if cancel failed.*/ 
   if (!complete) { 
     fprintf(stderr, 
             "Cannot cancel generalized request - aborting program\n"); 
     MPI_Abort(MPI_COMM_WORLD, 99); 
     } 
   return MPI_SUCCESS; 
} 
</tt></pre> 
  
  
  
<P> 

<P>
<HR>
<A HREF="node254.htm#Node254"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node254.htm#Node254"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node256.htm#Node256"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node254.htm#Node254"> Generalized Requests</a>
<b>Next: </b><A HREF="node256.htm#Node256"> Associating Information with Status</a>
<b>Previous: </b><A HREF="node254.htm#Node254"> Generalized Requests</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
