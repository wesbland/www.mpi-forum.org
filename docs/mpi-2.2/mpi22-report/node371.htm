<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-binding/binding-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Constants</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node371">326. Constants</a></H2>
<A HREF="node370.htm#Node370"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node357.htm#Node357"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node372.htm#Node372"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node357.htm#Node357"> Language Interoperability</a>
<b>Next: </b><A HREF="node372.htm#Node372"> Interlanguage Communication</a>
<b>Previous: </b><A HREF="node370.htm#Node370"> Extra State</a>
<P>
  
<P> 
  
 <font face="sans-serif"> MPI</font> constants have the same value in all languages,  
unless specified otherwise.  
  
This does not apply to constant handles (<font face="sans-serif">  MPI_INT</font>,  
<font face="sans-serif">  MPI_COMM_WORLD</font>, <font face="sans-serif">  MPI_ERRORS_RETURN</font>,  
<font face="sans-serif">  MPI_SUM</font>, etc.)  
These handles need to be converted, as explained in  
Section <a href="node361.htm#Node361">Transfer of Handles 
</a>.  
  
Constants that specify maximum lengths of strings (see  
Section <a href="node375.htm#Node375">Defined Constants 
</a> for a listing) have a value one less  
in Fortran than C/C++ since in C/C++ the length includes the null  
terminating character. Thus, these constants represent the amount of  
space which must be allocated to hold the largest possible such  
string, rather than the maximum number of printable characters the  
string could contain.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
This definition means that it is safe in C/C++ to allocate a buffer to receive  
a string using a declaration like  
<BR> 
<pre><tt>        char name [MPI_MAX_OBJECT_NAME]; 
</tt></pre> 
 (<em> End of advice to users.</em>) <BR> 
  
<P> 
  
Also constant ``addresses,'' i.e., special values for reference  
arguments that are not handles, such as  <font face="sans-serif">  MPI_BOTTOM</font> or  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> may  
have different values in different languages.  
  
<P> 
 
<BR> 
<em> Rationale.</em>  
<P> 
The current <font face="sans-serif"> MPI</font> standard specifies that <font face="sans-serif"> MPI_BOTTOM</font> can be  
used in initialization expressions in C, but not in Fortran.  Since  
Fortran does not normally support call by value, then  
<font face="sans-serif">  MPI_BOTTOM</font> must be in Fortran the name of a predefined  
static variable, e.g., a variable in an <font face="sans-serif"> MPI</font> declared <font face="sans-serif">  COMMON</font>  
block. On the other hand, in C, it is natural to take  
<font face="sans-serif">  MPI_BOTTOM</font> = 0 (Caveat: Defining <font face="sans-serif">  MPI_BOTTOM</font> = 0  
implies that <font face="sans-serif">  NULL</font> pointer cannot be distinguished from  
<font face="sans-serif">  MPI_BOTTOM</font>; it may be that <font face="sans-serif">  MPI_BOTTOM</font> = 1 is better ...)  
Requiring that the Fortran and C values be the same will complicate  
the initialization process.  
 (<em> End of rationale.</em>) <BR> 
  
<P> 

<P>
<HR>
<A HREF="node370.htm#Node370"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node357.htm#Node357"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node372.htm#Node372"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node357.htm#Node357"> Language Interoperability</a>
<b>Next: </b><A HREF="node372.htm#Node372"> Interlanguage Communication</a>
<b>Previous: </b><A HREF="node370.htm#Node370"> Extra State</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
