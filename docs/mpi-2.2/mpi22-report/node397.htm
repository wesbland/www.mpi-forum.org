<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-FNames.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Point-to-Point Communication Fortran Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node397">352. Point-to-Point Communication Fortran Bindings</a></H2>
<A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node398.htm#Node398"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node398.htm#Node398"> Datatypes Fortran Bindings</a>
<b>Previous: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<P>
 <tt> MPI_BSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <BR></tt>  
 <tt> MPI_BSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER  REQUEST, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_BUFFER_ATTACH(BUFFER, SIZE, IERROR)<BR> &lt;type&gt; BUFFER(*) <BR>INTEGER  SIZE, IERROR <BR></tt>  
 <tt> MPI_BUFFER_DETACH(BUFFER_ADDR, SIZE, IERROR)<BR> &lt;type&gt; BUFFER_ADDR(*) <BR>INTEGER  SIZE, IERROR <BR></tt>  
 <tt> MPI_CANCEL(REQUEST, IERROR)<BR> INTEGER  REQUEST, IERROR <BR></tt>  
 <tt> MPI_GET_COUNT(STATUS, DATATYPE, COUNT, IERROR)<BR> INTEGER  STATUS(MPI_STATUS_SIZE), DATATYPE, COUNT, IERROR <BR></tt>  
 <tt> MPI_IBSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_IPROBE(SOURCE, TAG, COMM, FLAG, STATUS, IERROR)<BR> LOGICAL  FLAG <BR>INTEGER  SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_IRECV(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_IRSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_ISEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_ISSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_PROBE(SOURCE, TAG, COMM, STATUS, IERROR)<BR> INTEGER SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_RECV(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_RECV_INIT(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_REQUEST_FREE(REQUEST, IERROR)<BR> INTEGER  REQUEST, IERROR <BR></tt>  
 <tt> MPI_REQUEST_GET_STATUS( REQUEST, FLAG, STATUS, IERROR) <BR> INTEGER REQUEST, STATUS(MPI_STATUS_SIZE), IERROR<BR>LOGICAL FLAG <BR></tt>  
 <tt> MPI_RSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <BR></tt>  
 <tt> MPI_RSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_SEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <BR></tt>  
 <tt> MPI_SENDRECV(SENDBUF, SENDCOUNT, SENDTYPE, DEST, SENDTAG, RECVBUF, RECVCOUNT, RECVTYPE, SOURCE, RECVTAG, COMM, STATUS, IERROR)<BR> &lt;type&gt; SENDBUF(*), RECVBUF(*) <BR>INTEGER  SENDCOUNT, SENDTYPE, DEST, SENDTAG, RECVCOUNT, RECVTYPE, SOURCE, RECVTAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_SENDRECV_REPLACE(BUF, COUNT, DATATYPE, DEST, SENDTAG, SOURCE, RECVTAG, COMM, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER COUNT, DATATYPE, DEST, SENDTAG, SOURCE, RECVTAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_SEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER  REQUEST, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_SSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <BR></tt>  
 <tt> MPI_SSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <BR></tt>  
 <tt> MPI_START(REQUEST, IERROR)<BR> INTEGER  REQUEST, IERROR <BR></tt>  
 <tt> MPI_STARTALL(COUNT, ARRAY_OF_REQUESTS, IERROR)<BR> INTEGER  COUNT, ARRAY_OF_REQUESTS(*), IERROR <BR></tt>  
 <tt> MPI_TEST(REQUEST, FLAG, STATUS, IERROR)<BR> LOGICAL  FLAG <BR>INTEGER  REQUEST, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_TESTALL(COUNT, ARRAY_OF_REQUESTS, FLAG, ARRAY_OF_STATUSES, IERROR)<BR> LOGICAL  FLAG <BR>INTEGER  COUNT, ARRAY_OF_REQUESTS(*), ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <BR></tt>  
 <tt> MPI_TESTANY(COUNT, ARRAY_OF_REQUESTS, INDEX, FLAG, STATUS, IERROR)<BR> LOGICAL  FLAG <BR>INTEGER  COUNT, ARRAY_OF_REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_TESTSOME(INCOUNT, ARRAY_OF_REQUESTS, OUTCOUNT, ARRAY_OF_INDICES, ARRAY_OF_STATUSES, IERROR)<BR> INTEGER INCOUNT, ARRAY_OF_REQUESTS(*), OUTCOUNT, ARRAY_OF_INDICES(*), ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <BR></tt>  
 <tt> MPI_TEST_CANCELLED(STATUS, FLAG, IERROR)<BR> LOGICAL FLAG <BR>INTEGER  STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_WAIT(REQUEST, STATUS, IERROR)<BR> INTEGER  REQUEST, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_WAITALL(COUNT, ARRAY_OF_REQUESTS, ARRAY_OF_STATUSES, IERROR)<BR> INTEGER  COUNT, ARRAY_OF_REQUESTS(*) <BR>INTEGER  ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <BR></tt>  
 <tt> MPI_WAITANY(COUNT, ARRAY_OF_REQUESTS, INDEX, STATUS, IERROR)<BR> INTEGER  COUNT, ARRAY_OF_REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_WAITSOME(INCOUNT, ARRAY_OF_REQUESTS, OUTCOUNT, ARRAY_OF_INDICES, ARRAY_OF_STATUSES, IERROR)<BR> INTEGER INCOUNT, ARRAY_OF_REQUESTS(*), OUTCOUNT, ARRAY_OF_INDICES(*), ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <BR></tt>  
<P> 

<P>
<HR>
<A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node398.htm#Node398"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node398.htm#Node398"> Datatypes Fortran Bindings</a>
<b>Previous: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
