<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Data Access with Explicit Offsets</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node281">261. Data Access with Explicit Offsets</a></H2>
<A HREF="node276.htm#Node280"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node275.htm#Node275"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node282.htm#Node282"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node275.htm#Node275"> Data Access</a>
<b>Next: </b><A HREF="node282.htm#Node282"> Data Access with Individual File Pointers</a>
<b>Previous: </b><A HREF="node276.htm#Node280"> Data Access Conventions</a>
<P>
  
<P> 
If <font face="sans-serif">  MPI_MODE_SEQUENTIAL</font> mode was specified when the file was opened,  
it is erroneous to call the routines in this section.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_READ_AT(fh, offset, buf, count, datatype, status)</TD></TR>  
  
<TR><TD> IN fh</TD><TD>file handle (handle)</TD></TR>  
  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> OUT buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT status</TD><TD>status object (Status)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_read_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> MPI_FILE_READ_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <font color="red">{<font color="black"> void MPI::File::Read_at(MPI::Offset offset, void* buf, int count, const MPI::Datatype&amp; datatype, MPI::Status&amp; status) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
 <font color="red">{<font color="black"> void MPI::File::Read_at(MPI::Offset offset, void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_READ_AT</font> reads a file  
beginning at the position specified by <font face="sans-serif"> offset</font>.  
<P> 
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_READ_AT_ALL(fh, offset, buf, count, datatype, status)</TD></TR>  
<TR><TD> IN fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> OUT buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT status</TD><TD>status object (Status)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>             
 <tt> MPI_FILE_READ_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <font color="red">{<font color="black"> void MPI::File::Read_at_all(MPI::Offset offset, void* buf, int count, const MPI::Datatype&amp; datatype, MPI::Status&amp; status) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
 <font color="red">{<font color="black"> void MPI::File::Read_at_all(MPI::Offset offset, void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_READ_AT_ALL</font> is a collective version  
of the blocking <font face="sans-serif"> MPI_FILE_READ_AT</font> interface.  
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_WRITE_AT(fh, offset, buf, count, datatype, status)</TD></TR>  
<TR><TD> INOUT fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> IN buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT status</TD><TD>status object (Status)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_write_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> MPI_FILE_WRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <font color="red">{<font color="black"> void MPI::File::Write_at(MPI::Offset offset, const void* buf, int count, const MPI::Datatype&amp; datatype, MPI::Status&amp; status) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
 <font color="red">{<font color="black"> void MPI::File::Write_at(MPI::Offset offset, const void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_WRITE_AT</font> writes a file  
beginning at the position specified by <font face="sans-serif"> offset</font>.  
<P> 
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_WRITE_AT_ALL(fh, offset, buf, count, datatype, status)</TD></TR>  
<TR><TD> INOUT fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> IN buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT status</TD><TD>status object (Status)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_write_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>            
 <tt> MPI_FILE_WRITE_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>      
 <font color="red">{<font color="black"> void MPI::File::Write_at_all(MPI::Offset offset, const void* buf, int count, const MPI::Datatype&amp; datatype, MPI::Status&amp; status) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
 <font color="red">{<font color="black"> void MPI::File::Write_at_all(MPI::Offset offset, const void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_WRITE_AT_ALL</font> is a collective version  
of the blocking <font face="sans-serif"> MPI_FILE_WRITE_AT</font> interface.  
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_IREAD_AT(fh, offset, buf, count, datatype, request)</TD></TR>  
  
<TR><TD> IN fh</TD><TD>file handle (handle)</TD></TR>  
  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> OUT buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>request object (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_iread_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> MPI_FILE_IREAD_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <font color="red">{<font color="black"> MPI::Request MPI::File::Iread_at(MPI::Offset offset, void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_IREAD_AT</font> is a nonblocking version  
of the <font face="sans-serif"> MPI_FILE_READ_AT</font> interface.  
<P> 
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_IWRITE_AT(fh, offset, buf, count, datatype, request)</TD></TR>  
<TR><TD> INOUT fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD> IN offset</TD><TD>file offset (integer)</TD></TR>  
<TR><TD> IN buf</TD><TD>initial address of buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each buffer element (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>request object (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> MPI_FILE_IWRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <font color="red">{<font color="black"> MPI::Request MPI::File::Iwrite_at(MPI::Offset offset, const void* buf, int count, const MPI::Datatype&amp; datatype) <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
<font face="sans-serif"> MPI_FILE_IWRITE_AT</font> is a nonblocking version  
of the <font face="sans-serif"> MPI_FILE_WRITE_AT</font> interface.  
  
  
<P> 

<P>
<HR>
<A HREF="node276.htm#Node280"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node275.htm#Node275"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node282.htm#Node282"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node275.htm#Node275"> Data Access</a>
<b>Next: </b><A HREF="node282.htm#Node282"> Data Access with Individual File Pointers</a>
<b>Previous: </b><A HREF="node276.htm#Node280"> Data Access Conventions</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
