<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-FNames.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>I/O Fortran Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node407">362. I/O Fortran Bindings</a></H2>
<A HREF="node406.htm#Node406"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node408.htm#Node408"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node408.htm#Node408"> Language Bindings Fortran Bindings</a>
<b>Previous: </b><A HREF="node406.htm#Node406"> External Interfaces Fortran Bindings</a>
<P>
 <tt> MPI_FILE_CLOSE(FH, IERROR)<BR> INTEGER FH, IERROR <BR></tt>  
 <tt> MPI_FILE_DELETE(FILENAME, INFO, IERROR)<BR> CHARACTER*(*) FILENAME <BR>INTEGER INFO, IERROR <BR></tt>  
 <tt> MPI_FILE_GET_AMODE(FH, AMODE, IERROR)<BR> INTEGER FH, AMODE, IERROR <BR></tt>  
 <tt> MPI_FILE_GET_ATOMICITY(FH, FLAG, IERROR)<BR> INTEGER FH, IERROR<BR>LOGICAL FLAG <BR></tt>  
 <tt> MPI_FILE_GET_BYTE_OFFSET(FH, OFFSET, DISP, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET, DISP <BR></tt>  
 <tt> MPI_FILE_GET_GROUP(FH, GROUP, IERROR)<BR> INTEGER FH, GROUP, IERROR <BR></tt>  
 <tt> MPI_FILE_GET_INFO(FH, INFO_USED, IERROR)<BR> INTEGER FH, INFO_USED, IERROR <BR></tt>  
 <tt> MPI_FILE_GET_POSITION(FH, OFFSET, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_GET_POSITION_SHARED(FH, OFFSET, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_GET_SIZE(FH, SIZE, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) SIZE <BR></tt>  
 <tt> MPI_FILE_GET_TYPE_EXTENT(FH, DATATYPE, EXTENT, IERROR)<BR> INTEGER FH, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) EXTENT <BR></tt>  
 <tt> MPI_FILE_GET_VIEW(FH, DISP, ETYPE, FILETYPE, DATAREP, IERROR)<BR> INTEGER FH, ETYPE, FILETYPE, IERROR <BR>CHARACTER*(*) DATAREP <BR>INTEGER(KIND=MPI_OFFSET_KIND) DISP <BR></tt>  
 <tt> MPI_FILE_IREAD(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR></tt>  
 <tt> MPI_FILE_IREAD_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_IREAD_SHARED(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR></tt>  
 <tt> MPI_FILE_IWRITE(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR></tt>  
 <tt> MPI_FILE_IWRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR)<BR> &lt;type&gt;  BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_IWRITE_SHARED(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, REQUEST, IERROR <BR></tt>  
 <tt> MPI_FILE_OPEN(COMM, FILENAME, AMODE, INFO, FH, IERROR)<BR> CHARACTER*(*) FILENAME <BR>INTEGER COMM, AMODE, INFO, FH, IERROR <BR></tt>  
 <tt> MPI_FILE_PREALLOCATE(FH, SIZE, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) SIZE <BR></tt>  
 <tt> MPI_FILE_READ(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ALL(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ALL_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ALL_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_READ_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_READ_AT_ALL_BEGIN(FH, OFFSET, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_READ_AT_ALL_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ORDERED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ORDERED_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR></tt>  
 <tt> MPI_FILE_READ_ORDERED_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_READ_SHARED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR  <BR></tt>  
 <tt> MPI_FILE_SEEK(FH, OFFSET, WHENCE, IERROR)<BR> INTEGER FH, WHENCE, IERROR<BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_SEEK_SHARED(FH, OFFSET, WHENCE, IERROR)<BR> INTEGER FH, WHENCE, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_SET_ATOMICITY(FH, FLAG, IERROR)<BR> INTEGER FH, IERROR<BR>LOGICAL FLAG <BR></tt>  
 <tt> MPI_FILE_SET_INFO(FH, INFO, IERROR)<BR> INTEGER FH, INFO, IERROR <BR></tt>  
 <tt> MPI_FILE_SET_SIZE(FH, SIZE, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) SIZE <BR></tt>  
 <tt> MPI_FILE_SET_VIEW(FH, DISP, ETYPE, FILETYPE, DATAREP, INFO, IERROR)<BR> INTEGER FH, ETYPE, FILETYPE, INFO, IERROR <BR>CHARACTER*(*) DATAREP <BR>INTEGER(KIND=MPI_OFFSET_KIND) DISP <BR></tt>  
 <tt> MPI_FILE_SYNC(FH, IERROR)<BR> INTEGER FH, IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ALL(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ALL_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ALL_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_WRITE_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>      
 <tt> MPI_FILE_WRITE_AT_ALL_BEGIN(FH, OFFSET, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) OFFSET <BR></tt>  
 <tt> MPI_FILE_WRITE_AT_ALL_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ORDERED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ORDERED_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_ORDERED_END(FH, BUF, STATUS, IERROR)<BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_FILE_WRITE_SHARED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <BR> &lt;type&gt; BUF(*) <BR>INTEGER FH, COUNT, DATATYPE, STATUS(MPI_STATUS_SIZE), IERROR <BR></tt>  
 <tt> MPI_REGISTER_DATAREP(DATAREP, READ_CONVERSION_FN, WRITE_CONVERSION_FN, DTYPE_FILE_EXTENT_FN, EXTRA_STATE, IERROR) <BR> CHARACTER*(*) DATAREP <BR>EXTERNAL READ_CONVERSION_FN, WRITE_CONVERSION_FN, DTYPE_FILE_EXTENT_FN <BR>INTEGER(KIND=MPI_ADDRESS_KIND) EXTRA_STATE <BR>INTEGER IERROR <BR></tt>  
<P> 

<P>
<HR>
<A HREF="node406.htm#Node406"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node396.htm#Node396"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node408.htm#Node408"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node396.htm#Node396"> Fortran Bindings</a>
<b>Next: </b><A HREF="node408.htm#Node408"> Language Bindings Fortran Bindings</a>
<b>Previous: </b><A HREF="node406.htm#Node406"> External Interfaces Fortran Bindings</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
