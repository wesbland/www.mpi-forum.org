<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-datatypes/datatypes.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Subarray Datatype Constructor</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node72">71. Subarray Datatype Constructor</a></H2>
<A HREF="node71.htm#Node71"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node69.htm#Node69"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node73.htm#Node73"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node69.htm#Node69"> Derived Datatypes</a>
<b>Next: </b><A HREF="node73.htm#Node73"> Distributed Array Datatype Constructor</a>
<b>Previous: </b><A HREF="node71.htm#Node71"> Datatype Constructors</a>
<P>
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_TYPE_CREATE_SUBARRAY(ndims, array_of_sizes, array_of_subsizes,  
array_of_starts, order, oldtype, newtype)</TD></TR>  
<TR><TD> IN ndims</TD><TD>number of array dimensions (positive integer)</TD></TR>  
<TR><TD> IN array_of_sizes</TD><TD>number of elements of type <font face="sans-serif"> oldtype</font>  
                        in each dimension of the full array  
                        (array of positive integers)</TD></TR>  
<TR><TD> IN array_of_subsizes</TD><TD>number of elements of type <font face="sans-serif"> oldtype</font>  
                        in each dimension of the subarray  
                        (array of positive integers)</TD></TR>  
<TR><TD> IN array_of_starts</TD><TD>starting coordinates of the subarray  
                    in each dimension (array of <font color="red">non-negative<font color="black"> integers)</TD></TR>  
<TR><TD> IN order</TD><TD>array storage order flag (state)</TD></TR>  
<TR><TD> IN oldtype</TD><TD>array element datatype (handle)</TD></TR>  
<TR><TD> OUT newtype</TD><TD>new datatype (handle)</TD></TR>  
</TABLE>  
<P> 
  
 <tt> int MPI_Type_create_subarray(int ndims, int array_of_sizes[], int array_of_subsizes[], int array_of_starts[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
  
 <tt> MPI_TYPE_CREATE_SUBARRAY(NDIMS, ARRAY_OF_SIZES, ARRAY_OF_SUBSIZES, ARRAY_OF_STARTS, ORDER, OLDTYPE, NEWTYPE, IERROR)<BR> INTEGER NDIMS, ARRAY_OF_SIZES(*), ARRAY_OF_SUBSIZES(*), ARRAY_OF_STARTS(*), ORDER, OLDTYPE, NEWTYPE, IERROR <BR></tt>  
  
 <font color="red">{<font color="black"> MPI::Datatype MPI::Datatype::Create_subarray(int ndims, const int array_of_sizes[], const int array_of_subsizes[], const int array_of_starts[], int order) const <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
<P> 
The subarray type constructor creates an <font face="sans-serif"> MPI</font> datatype  
describing an   
<I>n</I>-dimensional  
subarray of an   
<I>n</I>-dimensional  
array.  
The subarray may be situated anywhere within the full array,  
and may be of any nonzero size up to the size of the larger array  
as long as it is confined within this array.  
  
This type constructor facilitates creating filetypes to access  
  
arrays distributed in blocks among processes to a  
single file that contains the global array,  
see <font face="sans-serif"> MPI</font> I/O, especially Section <a href="node263.htm#Node263">Definitions 
</a> on page <a href="node263.htm#Node263">Definitions 
</a>.  
  
This type constructor can handle arrays with an arbitrary number of  
dimensions and works for both C and Fortran ordered matrices  
(i.e., row-major or column-major).  Note that a C program may use Fortran  
order and a Fortran program may use C order.  
  
<P> 
  
The <font face="sans-serif"> ndims</font> parameter specifies the number of dimensions in the full  
data array and gives the number of elements in   
<font face="sans-serif"> array_of_sizes</font>, <font face="sans-serif"> array_of_subsizes</font>,   
and <font face="sans-serif"> array_of_starts</font>.  
<P> 
The number of elements of type <font face="sans-serif"> oldtype</font> in  
each dimension of the   
<I>n</I>-dimensional  
array and the  
requested subarray are specified by   
<font face="sans-serif"> array_of_sizes</font> and <font face="sans-serif"> array_of_subsizes</font>,  
respectively.  
For any dimension   
<font face="sans-serif"> i</font>,   
it is erroneous to specify   
<font face="sans-serif"> array_of_subsizes[i]</font> <I>&lt;</I> 1 or   
<font face="sans-serif"> array_of_subsizes[i]</font> <I>&gt;</I> <font face="sans-serif"> array_of_sizes[i]</font>.  
  
<P> 
The <font face="sans-serif"> array_of_starts</font> contains the  
starting coordinates of each  
dimension of the subarray.  
Arrays are assumed to be indexed starting from zero.  
For any dimension <I>i</I>, it is erroneous to specify   
<font face="sans-serif"> array_of_starts[i]</font> <I>&lt;</I> 0 or   
<font face="sans-serif"> array_of_starts[i]</font>  
<I>&gt;</I> (<font face="sans-serif"> array_of_sizes[i]</font> <I>-</I> <font face="sans-serif"> array_of_subsizes[i]</font>).  
  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
In a Fortran program with arrays indexed starting from 1,  
if the starting coordinate of a particular dimension  
of the subarray is <font face="sans-serif"> n</font>,  
then the entry in <font face="sans-serif"> array_of_starts</font>  
for that dimension is <font face="sans-serif"> n-1</font>.  
 (<em> End of advice to users.</em>) <BR> 
  
The <font face="sans-serif"> order</font> argument specifies the storage order for the  
subarray as well as the full array.  
  
It must be set to one  
of the following:  
<dl> 
 
<dt> 
<b>{{</b><font face="sans-serif">  MPI_ORDER_C}</font>}</b><dd> 
The ordering used by C arrays, (i.e., row-major order)  
 
<dt> 
<b>{{</b><font face="sans-serif">  MPI_ORDER_FORTRAN}</font>}</b><dd> 
The ordering used by Fortran arrays,  
(i.e., column-major order)  
</dl> 
<BR> 
  
A <font face="sans-serif"> ndims</font>-dimensional subarray (<font face="sans-serif"> newtype</font>) with no  
extra padding can be defined by the function Subarray() as  
follows:  
<P><IMG WIDTH=294 HEIGHT=45 SRC="img34.gif"><P>
Let the typemap of <font face="sans-serif"> oldtype</font> have the form:  
<I> 
{(type<SUB>0</SUB>,disp<SUB>0</SUB>),(type<SUB>1</SUB>,disp<SUB>1</SUB>),...,(type<SUB>n-1</SUB>,disp<SUB>n-1</SUB>)} 
</I>  
where <I>type<SUB>i</SUB></I> is a predefined <font face="sans-serif"> MPI</font> datatype, and let <I>ex</I> be the  
extent of <font face="sans-serif"> oldtype</font>.  Then we define the Subarray() function  
recursively using the following three equations.  
Equation <a href="node72.htm#Equation2">2 
</a> defines the base step.  
Equation <a href="node72.htm#Equation2">2 
</a> defines the recursion step when  
<font face="sans-serif"> order</font> = <font face="sans-serif">  MPI_ORDER_FORTRAN</font>, and  
Equation <a href="node72.htm#Equation2">2 
</a> defines the recursion step when  
<font face="sans-serif"> order</font> = <font face="sans-serif">  MPI_ORDER_C</font>.  
<P> 
<P><A NAME="node72.htm#Equation2"><IMG WIDTH=394 HEIGHT=409 SRC="img35.gif"></a><P>
  
  
For an example use of <font face="sans-serif"> MPI_TYPE_CREATE_SUBARRAY</font> in the  
context of I/O see Section <a href="node311.htm#Node311">Subarray Filetype Constructor 
</a>.  
  
<P> 
  

<P>
<HR>
<A HREF="node71.htm#Node71"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node69.htm#Node69"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node73.htm#Node73"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node69.htm#Node69"> Derived Datatypes</a>
<b>Next: </b><A HREF="node73.htm#Node73"> Distributed Array Datatype Constructor</a>
<b>Previous: </b><A HREF="node71.htm#Node71"> Datatype Constructors</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
