<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Gather-to-all</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node99">98. Gather-to-all</a></H1>
<A HREF="node98.htm#Node98"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node100.htm#Node100"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node100.htm#Node100"> Example using <font face="sans-serif"> MPI_ALLGATHER</font></a>
<b>Previous: </b><A HREF="node98.htm#Node98"> Examples using <font face="sans-serif"> MPI_SCATTER</font>, <font face="sans-serif"> MPI_SCATTERV</font></a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ALLGATHER( sendbuf, sendcount, sendtype, recvbuf,  
recvcount, recvtype, comm)</TD></TR>  
<TR><TD> IN  sendbuf</TD><TD> starting address of send buffer (choice)</TD></TR>  
<TR><TD> IN  sendcount</TD><TD> number of elements in send buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN  sendtype</TD><TD> data type of send buffer elements (handle)</TD></TR>  
<TR><TD> OUT  recvbuf</TD><TD> address of receive buffer (choice)</TD></TR>  
<TR><TD> IN  recvcount</TD><TD> number of elements received from any process (non-negative  
integer)</TD></TR>  
<TR><TD> IN  recvtype</TD><TD> data type of receive buffer elements (handle)</TD></TR>  
<TR><TD> IN  comm</TD><TD>  communicator (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Allgather(void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm) <BR></tt>  
<P> 
 <tt> MPI_ALLGATHER(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, IERROR) <BR> &lt;type&gt; SENDBUF(*), RECVBUF(*) <BR>INTEGER SENDCOUNT, SENDTYPE, RECVCOUNT, RECVTYPE, COMM, IERROR <BR></tt>  
  
  
 <font color="red">{<font color="black"> void MPI::Comm::Allgather(const void* sendbuf, int sendcount, const MPI::Datatype&amp; sendtype, void* recvbuf, int recvcount, const MPI::Datatype&amp; recvtype) const = 0 <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
  
<font face="sans-serif"> MPI_ALLGATHER</font> can be thought of as <font face="sans-serif"> MPI_GATHER</font>, but  
where all processes receive the result, instead of just the root.  
The block of data sent from the   
<tt> j</tt>-th   
process is received by every process and placed in the   
<tt> j</tt>-th   
block of the buffer <font face="sans-serif"> recvbuf</font>.  
<P> 
The type signature associated with <font face="sans-serif"> sendcount, sendtype</font>,  
at a process must be equal to the type signature associated with  
<font face="sans-serif"> recvcount, recvtype</font> at any other process.  
<P> 
If <font face="sans-serif"> comm</font> is an intracommunicator,   
the outcome of a call to <font face="sans-serif"> MPI_ALLGATHER(...)</font> is as if  
all processes executed <tt> n</tt> calls to  
<P><IMG WIDTH=508 HEIGHT=37 SRC="img62.gif"><P>
for <tt> root = 0 , ..., n-1</tt>.  The rules for correct usage of  
<font face="sans-serif"> MPI_ALLGATHER</font> are easily found from the corresponding rules  
for <font face="sans-serif"> MPI_GATHER</font>.  
  
The ``in place'' option  for intracommunicators is specified by passing the  
value   
<font face="sans-serif">  MPI_IN_PLACE</font> to the argument <font face="sans-serif"> sendbuf</font> at all processes.  
<font face="sans-serif"> sendcount</font> and <font face="sans-serif"> sendtype</font> are ignored.  Then the input data  
of each process is assumed to be in the area where that  
process would receive its own contribution to the receive  
buffer.  
  
If <font face="sans-serif"> comm</font> is an intercommunicator, then each process  
<font color="red">of one group (group A) contributes <font face="sans-serif"> sendcount</font> data items; these  
data<font color="black"> are concatenated and the result  
is stored at each process in <font color="red">the other  
group (group B)<font color="black">.  Conversely the concatenation of the  
contributions of the processes in group B is stored at each process in  
group A.   The send buffer arguments in group A must be consistent  
with the receive buffer arguments in group B, and vice versa.  
<P> 
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
The communication pattern of <font face="sans-serif"> MPI_ALLGATHER</font> executed on an  
intercommunication domain need not be symmetric.  The number of items  
sent by processes in group A (as specified by the arguments  
<font face="sans-serif"> sendcount, sendtype</font> in group A and the arguments  
<font face="sans-serif"> recvcount, recvtype</font> in group B), need not equal the number of  
items sent by processes in group B (as specified by the arguments  
<font face="sans-serif"> sendcount, sendtype</font> in group B and the arguments  
<font face="sans-serif"> recvcount, recvtype</font> in group A).  In particular, one can move  
data in only one direction by specifying <font face="sans-serif"> sendcount = 0</font> for  
the communication in the reverse direction.  
<P> 
 (<em> End of advice to users.</em>) <BR> 
  
<TABLE><TR><TD COLSPAN=2>MPI_ALLGATHERV( sendbuf, sendcount, sendtype, recvbuf,  
recvcounts, displs, recvtype, comm)</TD></TR>  
<TR><TD> IN  sendbuf</TD><TD> starting address of send buffer (choice)</TD></TR>  
<TR><TD> IN  sendcount</TD><TD> number of elements in send buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN  sendtype</TD><TD> data type of send buffer elements (handle)</TD></TR>  
<TR><TD> OUT  recvbuf</TD><TD> address of receive buffer (choice)</TD></TR>  
<TR><TD> IN  recvcounts</TD><TD>non-negative  
integer array (of length group size)  
containing the number of elements that are received from each process</TD></TR>  
<TR><TD> IN  displs</TD><TD> integer array (of length group size).  Entry  
<tt> i</tt> specifies the displacement (relative to <font face="sans-serif"> recvbuf</font>) at  
which to place the incoming data from process <tt> i</tt></TD></TR>  
<TR><TD> IN  recvtype</TD><TD> data type of receive buffer elements (handle)</TD></TR>  
<TR><TD> IN  comm</TD><TD>  communicator (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Allgatherv(void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int *recvcounts, int *displs, MPI_Datatype recvtype, MPI_Comm comm) <BR></tt>  
<P> 
 <tt> MPI_ALLGATHERV(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNTS, DISPLS, RECVTYPE, COMM, IERROR) <BR> &lt;type&gt; SENDBUF(*), RECVBUF(*) <BR>INTEGER SENDCOUNT, SENDTYPE, RECVCOUNTS(*), DISPLS(*), RECVTYPE, COMM, IERROR <BR></tt>  
  
  
 <font color="red">{<font color="black"> void MPI::Comm::Allgatherv(const void* sendbuf, int sendcount,  const MPI::Datatype&amp; sendtype, void* recvbuf,  const int recvcounts[], const int displs[],  const MPI::Datatype&amp; recvtype) const = 0 <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
  
  
<font face="sans-serif"> MPI_ALLGATHERV</font> can be thought of as <font face="sans-serif"> MPI_GATHERV</font>, but  
where all processes receive the result, instead of just the root.  
The block of data sent from the   
<tt> j</tt>-th   
process is received by every process and placed in the   
<tt> j</tt>-th   
block of the buffer <font face="sans-serif"> recvbuf</font>.  
These blocks need not all be the same size.  
<P> 
The type signature associated with <font face="sans-serif"> sendcount, sendtype</font>,  
at process <tt> j</tt> must be equal to the type signature associated with  
<font face="sans-serif"> recvcounts[j], recvtype</font> at any other process.  
<P> 
If <font face="sans-serif"> comm</font> is an intracommunicator,   
the outcome is as if all processes executed calls to  
<BR> 
<pre><tt>    MPI_GATHERV(sendbuf,sendcount,sendtype,recvbuf,recvcounts,displs, 
                                                   recvtype,root,comm), 
</tt></pre> 
for <tt> root = 0 , ..., n-1</tt>.  The rules for correct usage of  
<font face="sans-serif"> MPI_ALLGATHERV</font> are easily found from the corresponding rules  
for <font face="sans-serif"> MPI_GATHERV</font>.  
  
The ``in place'' option  for intracommunicators is specified by passing the  
value   
<font face="sans-serif">  MPI_IN_PLACE</font> to the argument <font face="sans-serif"> sendbuf</font> at all processes.  
<font color="red">In such a case,<font color="black"> <font face="sans-serif"> sendcount</font> and <font face="sans-serif"> sendtype</font> are ignored, and the input dataof each process is assumed to be in the area where that  
process would receive its own contribution to the receive   
buffer.  
  
If <font face="sans-serif"> comm</font> is an intercommunicator, then each process  
<font color="red">of one group (group A) contributes <font face="sans-serif"> sendcount</font>  
data items; these data<font color="black"> are concatenated and the result  
is stored at each process in <font color="red">the other  
group (group B)<font color="black">.  Conversely the concatenation of the  
contributions of the processes in group B is stored at each process in  
group A.   The send buffer arguments in group A must be consistent  
with the receive buffer arguments in group B, and vice versa.  
<P> 
  
<menu> 
</menu> 

<P>
<HR>
<A HREF="node98.htm#Node98"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi22-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node100.htm#Node100"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi22-report.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node100.htm#Node100"> Example using <font face="sans-serif"> MPI_ALLGATHER</font></a>
<b>Previous: </b><A HREF="node98.htm#Node98"> Examples using <font face="sans-serif"> MPI_SCATTER</font>, <font face="sans-serif"> MPI_SCATTERV</font></a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
