<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-one-side/one-side-2.tex -->
<!-- with the command
tohtml erif"> MPI-2.0</font>
-->
<TITLE>Fence</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node239">224. Fence</a></H2>
<A HREF="node238.htm#Node238"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node238.htm#Node238"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node240.htm#Node240"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node238.htm#Node238"> Synchronization Calls</a>
<b>Next: </b><A HREF="node240.htm#Node240"> General Active Target Synchronization</a>
<b>Previous: </b><A HREF="node238.htm#Node238"> Synchronization Calls</a>
<P>
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FENCE(assert, win)</TD></TR>  
<TR><TD> IN assert</TD><TD>program assertion (integer)</TD></TR>  
<P> 
<TR><TD> IN win</TD><TD>window object (handle)</TD></TR>  
<P> 
</TABLE>  
<P> 
 <tt> int MPI_Win_fence(int assert, MPI_Win win) <BR></tt>  
<P> 
 <tt> MPI_WIN_FENCE(ASSERT, WIN, IERROR)<BR> INTEGER ASSERT, WIN, IERROR <BR></tt>  
<P> 
 <font color="red">{<font color="black"> void MPI::Win::Fence(int assert) const <font color="red"><em> (binding deprecated, see Section <a href="node328.htm#Node328">Deprecated since <font face="sans-serif"> MPI-2.2</font> 
</a>)</em> }<font color="black"><BR>  
<P> 
The <font face="sans-serif"> MPI</font> call <font face="sans-serif"> MPI_WIN_FENCE(assert, win)</font> synchronizes  
<font face="sans-serif"> RMA</font> calls on <font face="sans-serif"> win</font>.  The call is collective on the group of  
<font face="sans-serif"> win</font>.  
All <font face="sans-serif"> RMA</font>  
operations on <font face="sans-serif"> win</font> originating at a given process and started  
before the fence call will complete at that process  
before the fence call returns.    
They will be completed at their target before the fence  
call returns at the target.  <font face="sans-serif"> RMA</font> operations on <font face="sans-serif"> win</font> started by  
a process after the fence call returns will access their target  
window only after <font face="sans-serif"> MPI_WIN_FENCE</font> has been  
called by the target process.  
<P> 
  
The call completes an <font face="sans-serif"> RMA</font> access epoch if it was preceded by  
another fence call and the local process issued <font face="sans-serif"> RMA</font> communication  
calls on <font face="sans-serif"> win</font> between these two calls.  The call  
completes an <font face="sans-serif"> RMA</font> exposure epoch if it was  
preceded by another fence call and the local window was the target of <font face="sans-serif"> RMA</font>  
accesses between these two calls.  The call starts an  
<font face="sans-serif"> RMA</font> access epoch if it is followed by another fence call and by  
<font face="sans-serif"> RMA</font> communication calls issued between these two fence calls.  The  
call starts an exposure epoch if it is followed by another fence call  
and the local window is the target of <font face="sans-serif"> RMA</font> accesses between these two fence calls.  
Thus, the fence call is equivalent to calls to a subset of  
<tt> post, start, complete, wait</tt>.  
<P> 
A fence call usually entails a barrier synchronization:  
a process completes a call to <font face="sans-serif"> MPI_WIN_FENCE</font>  
only after all other processes in the group entered  
their matching call.  However, a call to <font face="sans-serif"> MPI_WIN_FENCE</font>  
that is known not to end any epoch  
(in particular, a call with <font face="sans-serif"> assert  
= MPI_MODE_NOPRECEDE</font>) does not necessarily act as a barrier.  
  
<P> 
The <font face="sans-serif"> assert</font> argument is used to provide assertions on the  
context of the call that may be used for various optimizations.  This  
is described in  
Section <a href="node242.htm#Node242">Assertions 
</a>.  A value of <font face="sans-serif"> assert = 0</font> is  
always valid.  
<P> 
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
Calls to <font face="sans-serif"> MPI_WIN_FENCE</font> should both precede and follow calls to  
put, get or accumulate that are synchronized with fence calls.  
 (<em> End of advice to users.</em>) <BR> 
  
<P> 

<P>
<HR>
<A HREF="node238.htm#Node238"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node238.htm#Node238"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node240.htm#Node240"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node238.htm#Node238"> Synchronization Calls</a>
<b>Next: </b><A HREF="node240.htm#Node240"> General Active Target Synchronization</a>
<b>Previous: </b><A HREF="node238.htm#Node238"> Synchronization Calls</a>
<P>
<HR>
Return to <A HREF="node434.htm">MPI-2.2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-2.2 of September 4, 2009<BR>
HTML Generated on September 10, 2009
</FONT>
</BODY>
</HTML>
