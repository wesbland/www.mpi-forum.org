<HTML>
<!-- This file was generated by tohtml from func-index.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Index</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node306">14. Index</a></H1>
<A HREF="node305.htm#Node305"><IMG WIDTH=16 HEIGHT=16 SRC="previous.xbm"></A><A HREF="mpi2-report.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.xbm"></A><BR>
<b>Up: </b><A HREF="mpi2-report.htm#Node0">Contents</a>
<b>Previous: </b><A HREF="node305.htm#Node305"> Function Name Cross Reference</a>
<P>
                                                                                                                                                                                                                                                                                                                                                                                                                                              <menu> 
<li><a href="node21.htm#Node21">CONST:MPI::ERRORS_THROW_EXCEPTIONS</a>
<li><a href="node19.htm#Node19">CONST:MPI_ADDRESS_KIND</a>
<li><a href="node13.htm#Node13">CONST:MPI_ANY_TAG</a>
<li><a href="node112.htm#Node112">CONST:MPI_APPNUM</a>
<li><a href="node96.htm#Node96">CONST:MPI_ARGVS_NULL</a>
<li><a href="node95.htm#Node95">CONST:MPI_ARGV_NULL</a>
<li><a href="node20.htm#Node20">CONST:MPI_Aint</a>
<li><a href="node19.htm#Node19">CONST:MPI_BOTTOM</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_CONTIGUOUS</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_DARRAY</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_DUP</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_F90_COMPLEX</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_F90_INTEGER</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_F90_REAL</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_HINDEXED</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_HINDEXED_INTEGER</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_HVECTOR</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_HVECTOR_INTEGER</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_INDEXED</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_INDEXED_BLOCK</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_NAMED</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_RESIZED</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_STRUCT</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_STRUCT_INTEGER</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_SUBARRAY</a>
<li><a href="node161.htm#Node161">CONST:MPI_COMBINER_VECTOR</a>
<li><a href="node201.htm#Node203">CONST:MPI_CONVERSION_FN_NULL</a>
<li><a href="node184.htm#Node184">CONST:MPI_DISPLACEMENT_CURRENT</a>
<li><a href="node80.htm#Node80">CONST:MPI_DISTRIBUTE_BLOCK</a>
<li><a href="node80.htm#Node80">CONST:MPI_DISTRIBUTE_CYCLIC</a>
<li><a href="node80.htm#Node80">CONST:MPI_DISTRIBUTE_DFLT_DARG</a>
<li><a href="node80.htm#Node80">CONST:MPI_DISTRIBUTE_NONE</a>
<li><a href="node19.htm#Node19">CONST:MPI_ERRCODES_IGNORE</a>
<li><a href="node177.htm#Node177">CONST:MPI_ERR_ACCESS</a>
<li><a href="node175.htm#Node175">CONST:MPI_ERR_AMODE</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_ASSERT</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_BAD_FILE</a>
<li><a href="node54.htm#Node54">CONST:MPI_ERR_BASE</a>
<li><a href="node201.htm#Node203">CONST:MPI_ERR_CONVERSION</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_DISP</a>
<li><a href="node201.htm#Node201">CONST:MPI_ERR_DUP_DATAREP</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_FILE</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_FILE_EXISTS</a>
<li><a href="node177.htm#Node177">CONST:MPI_ERR_FILE_IN_USE</a>
<li><a href="node53.htm#Node53">CONST:MPI_ERR_INFO_KEY</a>
<li><a href="node53.htm#Node53">CONST:MPI_ERR_INFO_NOKEY</a>
<li><a href="node53.htm#Node53">CONST:MPI_ERR_INFO_VALUE</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_IO</a>
<li><a href="node49.htm#Node49">CONST:MPI_ERR_KEYVAL</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_LOCKTYPE</a>
<li><a href="node104.htm#Node104">CONST:MPI_ERR_NAME</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_NOT_SAME</a>
<li><a href="node54.htm#Node54">CONST:MPI_ERR_NO_MEM</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_NO_SPACE</a>
<li><a href="node177.htm#Node177">CONST:MPI_ERR_NO_SUCH_FILE</a>
<li><a href="node103.htm#Node103">CONST:MPI_ERR_PORT</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_QUOTA</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_READ_ONLY</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_RMA_CONFLICT</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_RMA_SYNC</a>
<li><a href="node104.htm#Node104">CONST:MPI_ERR_SERVICE</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_SIZE</a>
<li><a href="node95.htm#Node95">CONST:MPI_ERR_SPAWN</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_UNSUPPORTED_DATAREP</a>
<li><a href="node218.htm#Node218">CONST:MPI_ERR_UNSUPPORTED_OPERATION</a>
<li><a href="node135.htm#Node135">CONST:MPI_ERR_WIN</a>
<li><a href="node176.htm#Node176">CONST:MPI_FILE_NULL</a>
<li><a href="node60.htm#Node60">CONST:MPI_F_STATUSES_IGNORE</a>
<li><a href="node60.htm#Node60">CONST:MPI_F_STATUS_IGNORE</a>
<li><a href="node53.htm#Node53">CONST:MPI_INFO_NULL</a>
<li><a href="node61.htm#Node66">CONST:MPI_INTEGER_KIND</a>
<li><a href="node145.htm#Node145">CONST:MPI_IN_PLACE</a>
<li><a href="node160.htm#Node160">CONST:MPI_LASTUSEDCODE</a>
<li><a href="node129.htm#Node129">CONST:MPI_LOCK_EXCLUSIVE</a>
<li><a href="node129.htm#Node129">CONST:MPI_LOCK_SHARED</a>
<li><a href="node184.htm#Node184">CONST:MPI_MAX_DATAREP_STRING</a>
<li><a href="node53.htm#Node53">CONST:MPI_MAX_INFO_KEY</a>
<li><a href="node53.htm#Node53">CONST:MPI_MAX_INFO_VAL</a>
<li><a href="node159.htm#Node159">CONST:MPI_MAX_OBJECT_NAME</a>
<li><a href="node102.htm#Node102">CONST:MPI_MAX_PORT_NAME</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_APPEND</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_CREATE</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_DELETE_ON_CLOSE</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_EXCL</a>
<li><a href="node130.htm#Node130">CONST:MPI_MODE_NOCHECK</a>
<li><a href="node130.htm#Node130">CONST:MPI_MODE_NOPRECEDE</a>
<li><a href="node130.htm#Node130">CONST:MPI_MODE_NOPUT</a>
<li><a href="node130.htm#Node130">CONST:MPI_MODE_NOSTORE</a>
<li><a href="node130.htm#Node130">CONST:MPI_MODE_NOSUCCEED</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_RDONLY</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_RDWR</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_SEQUENTIAL</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_UNIQUE_OPEN</a>
<li><a href="node175.htm#Node175">CONST:MPI_MODE_WRONLY</a>
<li><a href="node19.htm#Node19">CONST:MPI_OFFSET_KIND</a>
<li><a href="node12.htm#Node12">CONST:MPI_ORDER_C</a>
<li><a href="node12.htm#Node12">CONST:MPI_ORDER_FORTRAN</a>
<li><a href="node125.htm#Node125">CONST:MPI_REPLACE</a>
<li><a href="node145.htm#Node145">CONST:MPI_ROOT</a>
<li><a href="node192.htm#Node192">CONST:MPI_SEEK_CUR</a>
<li><a href="node192.htm#Node192">CONST:MPI_SEEK_END</a>
<li><a href="node192.htm#Node192">CONST:MPI_SEEK_SET</a>
<li><a href="node11.htm#Node11">CONST:MPI_STATUSES_IGNORE</a>
<li><a href="node7.htm#Node7">CONST:MPI_STATUS_IGNORE</a>
<li><a href="node44.htm#Node44">CONST:MPI_SUBVERSION</a>
<li><a href="node165.htm#Node165">CONST:MPI_THREAD_FUNNELED</a>
<li><a href="node165.htm#Node165">CONST:MPI_THREAD_MULTIPLE</a>
<li><a href="node165.htm#Node165">CONST:MPI_THREAD_SERIALIZED</a>
<li><a href="node165.htm#Node165">CONST:MPI_THREAD_SINGLE</a>
<li><a href="node246.htm#Node248">CONST:MPI_TYPECLASS_COMPLEX</a>
<li><a href="node246.htm#Node248">CONST:MPI_TYPECLASS_INTEGER</a>
<li><a href="node246.htm#Node248">CONST:MPI_TYPECLASS_REAL</a>
<li><a href="node92.htm#Node92">CONST:MPI_UNIVERSE_SIZE</a>
<li><a href="node44.htm#Node44">CONST:MPI_VERSION</a>
<li><a href="node200.htm#Node200">CONST:MPI_WCHAR</a>
<li><a href="node120.htm#Node120">CONST:MPI_WIN_BASE</a>
<li><a href="node120.htm#Node120">CONST:MPI_WIN_DISP_UNIT</a>
<li><a href="node119.htm#Node119">CONST:MPI_WIN_NULL</a>
<li><a href="node120.htm#Node120">CONST:MPI_WIN_SIZE</a>
<li><a href="node182.htm#Node183">CONST:access_style</a>
<li><a href="node113.htm#Node113">CONST:appnum</a>
<li><a href="node97.htm#Node97">CONST:arch</a>
<li><a href="node182.htm#Node183">CONST:cb_block_size</a>
<li><a href="node182.htm#Node183">CONST:cb_buffer_size</a>
<li><a href="node182.htm#Node183">CONST:cb_nodes</a>
<li><a href="node182.htm#Node183">CONST:chunked</a>
<li><a href="node182.htm#Node183">CONST:chunked_item</a>
<li><a href="node182.htm#Node183">CONST:chunked_size</a>
<li><a href="node182.htm#Node183">CONST:collective_buffering</a>
<li><a href="node198.htm#Node198">CONST:external32</a>
<li><a href="node182.htm#Node183">CONST:false</a>
<li><a href="node97.htm#Node97">CONST:file</a>
<li><a href="node182.htm#Node183">CONST:file_perm</a>
<li><a href="node182.htm#Node183">CONST:filename</a>
<li><a href="node97.htm#Node97">CONST:host</a>
<li><a href="node198.htm#Node198">CONST:internal</a>
<li><a href="node182.htm#Node183">CONST:io_node_list</a>
<li><a href="node105.htm#Node105">CONST:ip_address</a>
<li><a href="node105.htm#Node105">CONST:ip_port</a>
<li><a href="node198.htm#Node198">CONST:native</a>
<li><a href="node182.htm#Node183">CONST:nb_proc</a>
<li><a href="node119.htm#Node119">CONST:no_locks</a>
<li><a href="node182.htm#Node183">CONST:num_io_nodes</a>
<li><a href="node97.htm#Node97">CONST:path</a>
<li><a href="node182.htm#Node183">CONST:random</a>
<li><a href="node182.htm#Node183">CONST:read_mostly</a>
<li><a href="node182.htm#Node183">CONST:read_once</a>
<li><a href="node182.htm#Node183">CONST:reverse_sequential</a>
<li><a href="node182.htm#Node183">CONST:sequential</a>
<li><a href="node95.htm#Node95">CONST:soft</a>
<li><a href="node182.htm#Node183">CONST:striping_factor</a>
<li><a href="node182.htm#Node183">CONST:striping_unit</a>
<li><a href="node182.htm#Node183">CONST:true</a>
<li><a href="node97.htm#Node97">CONST:wdir</a>
<li><a href="node182.htm#Node183">CONST:write_mostly</a>
<li><a href="node182.htm#Node183">CONST:write_once</a>
<li><a href="node142.htm#Node142">EXAMPLES:MPI_COMM_CREATE</a>
<li><a href="node142.htm#Node142">EXAMPLES:MPI_COMM_SPLIT</a>
<li><a href="node192.htm#Node192">EXAMPLES:MPI_FILE_IREAD</a>
<li><a href="node192.htm#Node192">EXAMPLES:MPI_FILE_OPEN</a>
<li><a href="node192.htm#Node192">EXAMPLES:MPI_FILE_READ</a>
<li><a href="node215.htm#Node215">EXAMPLES:MPI_FILE_SET_ATOMICITY</a>
<li><a href="node192.htm#Node192">EXAMPLES:MPI_FILE_SET_VIEW</a>
<li><a href="node215.htm#Node215">EXAMPLES:MPI_FILE_SYNC</a>
<li><a href="node221.htm#Node221">EXAMPLES:MPI_TYPE_CREATE_SUBARRAY</a>
<li><a href="node125.htm#Node125">MPI_ACCUMULATE(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, 
target_datatype, op, win)</a>
<li><a href="node160.htm#Node160">MPI_ADD_ERROR_CLASS(errorclass)</a>
<li><a href="node160.htm#Node160">MPI_ADD_ERROR_CODE(errorclass, errorcode)</a>
<li><a href="node160.htm#Node160">MPI_ADD_ERROR_STRING(errorcode, string)</a>
<li><a href="node145.htm#Node149">MPI_ALLGATHER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node145.htm#Node149">MPI_ALLGATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, comm)</a>
<li><a href="node54.htm#Node54">MPI_ALLOC_MEM(size, info, baseptr)</a>
<li><a href="node150.htm#Node150">MPI_ALLREDUCE(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node145.htm#Node149">MPI_ALLTOALL(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node145.htm#Node149">MPI_ALLTOALLV(sendbuf, sendcounts, sdispls, sendtype, 
recvbuf, recvcounts, rdispls, recvtype, comm)</a>
<li><a href="node152.htm#Node152">MPI_ALLTOALLW(sendbuf, sendcounts, sdispls, sendtypes, 
recvbuf, recvcounts, rdispls, recvtypes, comm)</a>
<li><a href="node151.htm#Node151">MPI_BARRIER(comm)</a>
<li><a href="node145.htm#Node146">MPI_BCAST(buffer, count, datatype, root, comm)</a>
<li><a href="node102.htm#Node102">MPI_CLOSE_PORT(port_name)</a>
<li><a href="node102.htm#Node102">MPI_COMM_ACCEPT(port_name, info, root, comm, newcomm)</a>
<li><a href="node59.htm#Node59">MPI_COMM_C2F</a>
<li><a href="node160.htm#Node160">MPI_COMM_CALL_ERRHANDLER (comm, errorcode)</a>
<li><a href="node230.htm#Node230">MPI_COMM_CLONE</a>
<li><a href="node103.htm#Node103">MPI_COMM_CONNECT(port_name, info, root, comm, 
newcomm)</a>
<li><a href="node142.htm#Node142">MPI_COMM_CREATE(comm_in, group, comm_out)</a>
<li><a href="node72.htm#Node72">MPI_COMM_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node167.htm#Node167">MPI_COMM_CREATE_KEYVAL(comm_copy_attr_fn, comm_delete_attr_fn, comm_keyval,  extra_state)</a>
<li><a href="node167.htm#Node167">MPI_COMM_DELETE_ATTR(comm, comm_keyval)</a>
<li><a href="node114.htm#Node114">MPI_COMM_DISCONNECT(comm)</a>
<li><a href="node167.htm#Node167">MPI_COMM_DUP_FN</a>
<li><a href="node59.htm#Node59">MPI_COMM_F2C</a>
<li><a href="node167.htm#Node167">MPI_COMM_FREE_KEYVAL(comm_keyval)</a>
<li><a href="node167.htm#Node167">MPI_COMM_GET_ATTR(comm, comm_keyval, attribute_val, flag)</a>
<li><a href="node72.htm#Node72">MPI_COMM_GET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node159.htm#Node159">MPI_COMM_GET_NAME (comm, comm_name, resultlen)</a>
<li><a href="node95.htm#Node95">MPI_COMM_GET_PARENT(parent)</a>
<li><a href="node115.htm#Node115">MPI_COMM_JOIN(fd, intercomm)</a>
<li><a href="node167.htm#Node167">MPI_COMM_NULL_COPY_FN</a>
<li><a href="node167.htm#Node167">MPI_COMM_NULL_DELETE_FN</a>
<li><a href="node167.htm#Node167">MPI_COMM_SET_ATTR(comm, comm_keyval, attribute_val)</a>
<li><a href="node72.htm#Node72">MPI_COMM_SET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node159.htm#Node159">MPI_COMM_SET_NAME (comm, comm_name)</a>
<li><a href="node95.htm#Node95">MPI_COMM_SPAWN(command, argv, maxprocs, info,  
root, comm, intercomm,  array_of_errcodes)</a>
<li><a href="node96.htm#Node96">MPI_COMM_SPAWN_MULTIPLE(count, 
array_of_commands, array_of_argv, array_of_maxprocs,  
array_of_info, root, comm, intercomm, array_of_errcodes)</a>
<li><a href="node142.htm#Node142">MPI_COMM_SPLIT(comm_in, color, key, comm_out)</a>
<li><a href="node153.htm#Node153">MPI_EXSCAN(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node59.htm#Node59">MPI_FILE_C2F</a>
<li><a href="node160.htm#Node160">MPI_FILE_CALL_ERRHANDLER (fh, errorcode)</a>
<li><a href="node176.htm#Node176">MPI_FILE_CLOSE(fh)</a>
<li><a href="node74.htm#Node74">MPI_FILE_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node177.htm#Node177">MPI_FILE_DELETE(filename, info)</a>
<li><a href="node59.htm#Node59">MPI_FILE_F2C</a>
<li><a href="node181.htm#Node181">MPI_FILE_GET_AMODE(fh, amode)</a>
<li><a href="node206.htm#Node206">MPI_FILE_GET_ATOMICITY(fh, flag)</a>
<li><a href="node192.htm#Node192">MPI_FILE_GET_BYTE_OFFSET(fh, offset, disp)</a>
<li><a href="node74.htm#Node74">MPI_FILE_GET_ERRHANDLER(file, errhandler)</a>
<li><a href="node181.htm#Node181">MPI_FILE_GET_GROUP(fh, group)</a>
<li><a href="node182.htm#Node182">MPI_FILE_GET_INFO(fh, info_used)</a>
<li><a href="node192.htm#Node192">MPI_FILE_GET_POSITION(fh, offset)</a>
<li><a href="node193.htm#Node196">MPI_FILE_GET_POSITION_SHARED(fh, offset)</a>
<li><a href="node180.htm#Node180">MPI_FILE_GET_SIZE(fh, size)</a>
<li><a href="node199.htm#Node199">MPI_FILE_GET_TYPE_EXTENT(fh, datatype, extent)</a>
<li><a href="node184.htm#Node184">MPI_FILE_GET_VIEW(fh, disp, etype, filetype, datarep)</a>
<li><a href="node192.htm#Node192">MPI_FILE_IREAD(fh, buf, count, datatype, request)</a>
<li><a href="node191.htm#Node191">MPI_FILE_IREAD_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node193.htm#Node194">MPI_FILE_IREAD_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node192.htm#Node192">MPI_FILE_IWRITE(fh, buf, count, datatype, request)</a>
<li><a href="node191.htm#Node191">MPI_FILE_IWRITE_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node193.htm#Node194">MPI_FILE_IWRITE_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node175.htm#Node175">MPI_FILE_OPEN(comm, filename, amode, info, fh)</a>
<li><a href="node179.htm#Node179">MPI_FILE_PREALLOCATE(fh, size)</a>
<li><a href="node192.htm#Node192">MPI_FILE_READ(fh, buf, count, datatype, status)</a>
<li><a href="node192.htm#Node192">MPI_FILE_READ_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_ALL_END(fh, buf, status)</a>
<li><a href="node191.htm#Node191">MPI_FILE_READ_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node191.htm#Node191">MPI_FILE_READ_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_AT_ALL_END(fh, buf, status)</a>
<li><a href="node193.htm#Node195">MPI_FILE_READ_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_READ_ORDERED_END(fh, buf, status)</a>
<li><a href="node193.htm#Node194">MPI_FILE_READ_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node192.htm#Node192">MPI_FILE_SEEK(fh, offset, whence)</a>
<li><a href="node193.htm#Node196">MPI_FILE_SEEK_SHARED(fh, offset, whence)</a>
<li><a href="node206.htm#Node206">MPI_FILE_SET_ATOMICITY(fh, flag)</a>
<li><a href="node74.htm#Node74">MPI_FILE_SET_ERRHANDLER(file, errhandler)</a>
<li><a href="node182.htm#Node182">MPI_FILE_SET_INFO(fh, info)</a>
<li><a href="node178.htm#Node178">MPI_FILE_SET_SIZE(fh, size)</a>
<li><a href="node184.htm#Node184">MPI_FILE_SET_VIEW(fh, disp, etype, filetype, datarep, info)</a>
<li><a href="node206.htm#Node206">MPI_FILE_SYNC(fh)</a>
<li><a href="node192.htm#Node192">MPI_FILE_WRITE(fh, buf, count, datatype, status)</a>
<li><a href="node192.htm#Node192">MPI_FILE_WRITE_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_ALL_END(fh, buf, status)</a>
<li><a href="node191.htm#Node191">MPI_FILE_WRITE_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node191.htm#Node191">MPI_FILE_WRITE_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_AT_ALL_END(fh, buf, status)</a>
<li><a href="node193.htm#Node195">MPI_FILE_WRITE_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node197.htm#Node197">MPI_FILE_WRITE_ORDERED_END(fh, buf, status)</a>
<li><a href="node193.htm#Node194">MPI_FILE_WRITE_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node52.htm#Node52">MPI_FINALIZED(flag)</a>
<li><a href="node54.htm#Node54">MPI_FREE_MEM(base)</a>
<li><a href="node145.htm#Node147">MPI_GATHER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm) </a>
<li><a href="node145.htm#Node147">MPI_GATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, root, comm) </a>
<li><a href="node123.htm#Node123">MPI_GET(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, target_datatype, win)</a>
<li><a href="node76.htm#Node76">MPI_GET_ADDRESS(location, address)</a>
<li><a href="node29.htm#Node29">MPI_GET_VERSION( version, subversion )</a>
<li><a href="node156.htm#Node156">MPI_GREQUEST_COMPLETE(request)</a>
<li><a href="node156.htm#Node156">MPI_GREQUEST_START(query_fn, free_fn, cancel_fn, extra_state, request)</a>
<li><a href="node59.htm#Node59">MPI_GROUP_C2F</a>
<li><a href="node59.htm#Node59">MPI_GROUP_F2C</a>
<li><a href="node59.htm#Node59">MPI_INFO_C2F</a>
<li><a href="node53.htm#Node53">MPI_INFO_CREATE(info)</a>
<li><a href="node53.htm#Node53">MPI_INFO_DELETE(info, key)</a>
<li><a href="node53.htm#Node53">MPI_INFO_DUP(info, newinfo)</a>
<li><a href="node59.htm#Node59">MPI_INFO_F2C</a>
<li><a href="node53.htm#Node53">MPI_INFO_FREE(info)</a>
<li><a href="node53.htm#Node53">MPI_INFO_GET(info, key, valuelen, value, flag)</a>
<li><a href="node53.htm#Node53">MPI_INFO_GET_NKEYS(info, nkeys)</a>
<li><a href="node53.htm#Node53">MPI_INFO_GET_NTHKEY(info, n, key)</a>
<li><a href="node53.htm#Node53">MPI_INFO_GET_VALUELEN(info, key, valuelen, flag)</a>
<li><a href="node53.htm#Node53">MPI_INFO_SET(info, key, value)</a>
<li><a href="node165.htm#Node165">MPI_INIT_THREAD(required, provided)</a>
<li><a href="node165.htm#Node165">MPI_IS_THREAD_MAIN(flag)</a>
<li><a href="node104.htm#Node104">MPI_LOOKUP_NAME(service_name, info, port_name)</a>
<li><a href="node102.htm#Node102">MPI_OPEN_PORT(info, port_name)</a>
<li><a href="node59.htm#Node59">MPI_OP_C2F</a>
<li><a href="node59.htm#Node59">MPI_OP_F2C</a>
<li><a href="node85.htm#Node85">MPI_PACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position )</a>
<li><a href="node85.htm#Node85">MPI_PACK_EXTERNAL_SIZE( datarep, incount, datatype, size )</a>
<li><a href="node104.htm#Node104">MPI_PUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node122.htm#Node122">MPI_PUT(origin_addr, origin_count, origin_datatype, target_rank, target_disp, target_count, target_datatype, win)</a>
<li><a href="node165.htm#Node165">MPI_QUERY_THREAD(provided)</a>
<li><a href="node150.htm#Node150">MPI_REDUCE(sendbuf, recvbuf, count, datatype, op, 
root, comm)</a>
<li><a href="node150.htm#Node150">MPI_REDUCE_SCATTER(sendbuf, recvbuf, recvcounts, 
datatype, op, comm)</a>
<li><a href="node201.htm#Node201">MPI_REGISTER_DATAREP(datarep, read_conversion_fn, write_conversion_fn,  dtype_file_extent_fn, extra_state)</a>
<li><a href="node59.htm#Node59">MPI_REQUEST_C2F</a>
<li><a href="node59.htm#Node59">MPI_REQUEST_F2C</a>
<li><a href="node48.htm#Node48">MPI_REQUEST_GET_STATUS( request, flag, status )</a>
<li><a href="node151.htm#Node151">MPI_SCAN(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node145.htm#Node148">MPI_SCATTER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm)</a>
<li><a href="node145.htm#Node148">MPI_SCATTERV(sendbuf, sendcounts, displs, sendtype, 
recvbuf, recvcount, recvtype, root, comm)</a>
<li><a href="node246.htm#Node248">MPI_SIZEOF(x, size)</a>
<li><a href="node60.htm#Node60">MPI_STATUS_C2F</a>
<li><a href="node60.htm#Node60">MPI_STATUS_F2C</a>
<li><a href="node158.htm#Node158">MPI_STATUS_SET_CANCELLED(status, flag)</a>
<li><a href="node158.htm#Node158">MPI_STATUS_SET_ELEMENTS(status, datatype, count)</a>
<li><a href="node59.htm#Node59">MPI_TYPE_C2F</a>
<li><a href="node80.htm#Node80">MPI_TYPE_CREATE_DARRAY(size, rank, ndims, array_of_gsizes,  
     array_of_distribs,  array_of_dargs, 
     array_of_psizes, order, oldtype, newtype)</a>
<li><a href="node246.htm#Node247">MPI_TYPE_CREATE_F90_COMPLEX(p, r, newtype)</a>
<li><a href="node246.htm#Node247">MPI_TYPE_CREATE_F90_INTEGER(r, newtype)</a>
<li><a href="node246.htm#Node247">MPI_TYPE_CREATE_F90_REAL(p, r, newtype)</a>
<li><a href="node76.htm#Node76">MPI_TYPE_CREATE_HINDEXED( count, 
array_of_blocklengths, array_of_displacements, oldtype, newtype)</a>
<li><a href="node76.htm#Node76">MPI_TYPE_CREATE_HVECTOR( count, blocklength, stride, 
oldtype, newtype)</a>
<li><a href="node45.htm#Node45">MPI_TYPE_CREATE_INDEXED_BLOCK(count, blocklength, array_of_displacements, oldtype, newtype)</a>
<li><a href="node169.htm#Node169">MPI_TYPE_CREATE_KEYVAL(type_copy_attr_fn, type_delete_attr_fn, type_keyval, extra_state)</a>
<li><a href="node77.htm#Node77">MPI_TYPE_CREATE_RESIZED(oldtype, lb, extent, newtype)</a>
<li><a href="node76.htm#Node76">MPI_TYPE_CREATE_STRUCT(count, array_of_blocklengths, 
array_of_displacements,  array_of_types, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CREATE_SUBARRAY(ndims, array_of_sizes, array_of_subsizes, 
array_of_starts, order, oldtype, newtype)</a>
<li><a href="node169.htm#Node169">MPI_TYPE_DELETE_ATTR(type, type_keyval)</a>
<li><a href="node170.htm#Node170">MPI_TYPE_DUP(type, newtype)</a>
<li><a href="node169.htm#Node169">MPI_TYPE_DUP_FN</a>
<li><a href="node59.htm#Node59">MPI_TYPE_F2C</a>
<li><a href="node169.htm#Node169">MPI_TYPE_FREE_KEYVAL(type_keyval)</a>
<li><a href="node169.htm#Node169">MPI_TYPE_GET_ATTR(type, type_keyval, attribute_val, flag)</a>
<li><a href="node161.htm#Node161">MPI_TYPE_GET_CONTENTS(datatype, max_integers, 
max_addresses,  max_datatypes,  array_of_integers, array_of_addresses, array_of_datatypes)</a>
<li><a href="node161.htm#Node161">MPI_TYPE_GET_ENVELOPE(datatype, num_integers, 
num_addresses, num_datatypes, combiner)</a>
<li><a href="node77.htm#Node77">MPI_TYPE_GET_EXTENT(datatype, lb, extent)</a>
<li><a href="node159.htm#Node159">MPI_TYPE_GET_NAME (type, type_name, resultlen)</a>
<li><a href="node78.htm#Node78">MPI_TYPE_GET_TRUE_EXTENT(datatype, true_lb, true_extent)</a>
<li><a href="node246.htm#Node248">MPI_TYPE_MATCH_SIZE(typeclass, size, type)</a>
<li><a href="node169.htm#Node169">MPI_TYPE_NULL_COPY_FN</a>
<li><a href="node169.htm#Node169">MPI_TYPE_NULL_DELETE_FN</a>
<li><a href="node169.htm#Node169">MPI_TYPE_SET_ATTR(type, type_keyval, attribute_val)</a>
<li><a href="node159.htm#Node159">MPI_TYPE_SET_NAME (type, type_name)</a>
<li><a href="node85.htm#Node85">MPI_UNPACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position )</a>
<li><a href="node104.htm#Node104">MPI_UNPUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node59.htm#Node59">MPI_WIN_C2F</a>
<li><a href="node160.htm#Node160">MPI_WIN_CALL_ERRHANDLER (win, errorcode)</a>
<li><a href="node128.htm#Node128">MPI_WIN_COMPLETE(win)</a>
<li><a href="node119.htm#Node119">MPI_WIN_CREATE(base, size, disp_unit, info, comm, win)</a>
<li><a href="node73.htm#Node73">MPI_WIN_CREATE_ERRHANDLER(function, errhandler)</a>
<li><a href="node168.htm#Node168">MPI_WIN_CREATE_KEYVAL(win_copy_attr_fn, win_delete_attr_fn, win_keyval, extra_state)</a>
<li><a href="node168.htm#Node168">MPI_WIN_DELETE_ATTR(win, win_keyval)</a>
<li><a href="node168.htm#Node168">MPI_WIN_DUP_FN</a>
<li><a href="node59.htm#Node59">MPI_WIN_F2C</a>
<li><a href="node127.htm#Node127">MPI_WIN_FENCE(assert, win)</a>
<li><a href="node119.htm#Node119">MPI_WIN_FREE(win)</a>
<li><a href="node168.htm#Node168">MPI_WIN_FREE_KEYVAL(win_keyval)</a>
<li><a href="node168.htm#Node168">MPI_WIN_GET_ATTR(win, win_keyval, attribute_val, flag)</a>
<li><a href="node73.htm#Node73">MPI_WIN_GET_ERRHANDLER(win, errhandler)</a>
<li><a href="node120.htm#Node120">MPI_WIN_GET_GROUP(win, group)</a>
<li><a href="node159.htm#Node159">MPI_WIN_GET_NAME (win, win_name, resultlen)</a>
<li><a href="node129.htm#Node129">MPI_WIN_LOCK(lock_type, rank, assert, win)</a>
<li><a href="node168.htm#Node168">MPI_WIN_NULL_COPY_FN</a>
<li><a href="node168.htm#Node168">MPI_WIN_NULL_DELETE_FN</a>
<li><a href="node128.htm#Node128">MPI_WIN_POST(group, assert, win)</a>
<li><a href="node168.htm#Node168">MPI_WIN_SET_ATTR(win, win_keyval, attribute_val)</a>
<li><a href="node73.htm#Node73">MPI_WIN_SET_ERRHANDLER(win, errhandler)</a>
<li><a href="node159.htm#Node159">MPI_WIN_SET_NAME (win, win_name)</a>
<li><a href="node128.htm#Node128">MPI_WIN_START(group, assert, win)</a>
<li><a href="node128.htm#Node128">MPI_WIN_TEST(win, flag)</a>
<li><a href="node129.htm#Node129">MPI_WIN_UNLOCK(rank, win)</a>
<li><a href="node128.htm#Node128">MPI_WIN_WAIT(win)</a>
<li><a href="node167.htm#Node167">TYPEDEF:MPI_Comm_copy_attr_function(MPI_Comm oldcomm, int comm_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node167.htm#Node167">TYPEDEF:MPI_Comm_delete_attr_function(MPI_Comm comm, int comm_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node72.htm#Node72">TYPEDEF:MPI_Comm_errhandler_fn(MPI_Comm *, int *, ...)</a>
<li><a href="node201.htm#Node203">TYPEDEF:MPI_Datarep_conversion_function(void *userbuf, MPI_Datatype datatype, int count, void *filebuf, MPI_Offset position, void *extra_state)</a>
<li><a href="node201.htm#Node202">TYPEDEF:MPI_Datarep_extent_function(MPI_Datatype datatype, MPI_Aint *file_extent, void *extra_state)</a>
<li><a href="node74.htm#Node74">TYPEDEF:MPI_File_errhandler_fn(MPI_File *, int *, ...)</a>
<li><a href="node156.htm#Node156">TYPEDEF:MPI_Grequest_cancel_function(void *extra_state, int complete)</a>
<li><a href="node156.htm#Node156">TYPEDEF:MPI_Grequest_free_function(void *extra_state)</a>
<li><a href="node156.htm#Node156">TYPEDEF:MPI_Grequest_query_function(void *extra_state, MPI_Status *status)</a>
<li><a href="node169.htm#Node169">TYPEDEF:MPI_Type_copy_attr_function(MPI_Datatype oldtype, int type_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node169.htm#Node169">TYPEDEF:MPI_Type_delete_attr_function(MPI_Datatype type, int type_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node168.htm#Node168">TYPEDEF:MPI_Win_copy_attr_function(MPI_Win oldwin, int win_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node168.htm#Node168">TYPEDEF:MPI_Win_delete_attr_function(MPI_Win win, int win_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node73.htm#Node73">TYPEDEF:MPI_Win_errhandler_fn(MPI_Win *, int *, ...)</a>
</menu> 
  
<P> 
<P> 
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
