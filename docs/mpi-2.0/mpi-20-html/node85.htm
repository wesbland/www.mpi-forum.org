<HTML>
<!-- This file was generated by tohtml from misc-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Canonical  MPI_PACK and  MPI_UNPACK</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node85">4.16. Canonical  MPI_PACK and  MPI_UNPACK</a></H1>
<A HREF="node84.htm#Node84"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node41.htm#Node41"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node41.htm#Node41"> Miscellany</a>
<b>Next: </b><A HREF="node86.htm#Node86"> Functions and Macros</a>
<b>Previous: </b><A HREF="node84.htm#Node84"> Unsigned long long Type</a>
<P>
   
<P> 
  
<P> 
These functions read/write data to/from the buffer in the ``external32'' data  
format specified in Section <a href="node200.htm#Node200">External Data Representation: ``external32'' 
</a>, and calculate the size needed  
for packing.  Their first arguments specify the data format, for future  
extensibility, but for  MPI-2 the only valid value of the  datarep  
argument is ``external32.''  
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
These functions could be used, for example, to send typed data in a portable  
  format from one  MPI implementation to another.  
 (<em> End of advice to users.</em>) <BR> 
  
<P> 
  
The buffer will contain exactly the packed data, without headers.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_PACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position )</TD></TR>  
<TR><TD> IN datarep</TD><TD>data representation (string) </TD></TR>  
<TR><TD> IN inbuf</TD><TD>input buffer start (choice) </TD></TR>  
<TR><TD> IN incount</TD><TD>number of input data items (integer) </TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each input data item (handle) </TD></TR>  
<TR><TD> OUT outbuf</TD><TD>output buffer start (choice) </TD></TR>  
<TR><TD> IN outsize</TD><TD>output buffer size, in bytes (integer) </TD></TR>  
<TR><TD> INOUT position</TD><TD>current position in buffer, in bytes (integer) </TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Pack_external(char *datarep, void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, MPI_Aint outsize, MPI_Aint *position) <BR></tt>   
<P> 
  
 <tt> MPI_PACK_EXTERNAL(DATAREP, INBUF, INCOUNT, DATATYPE, OUTBUF, OUTSIZE, POSITION, IERROR)<BR> INTEGER INCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) OUTSIZE, POSITION <BR>CHARACTER*(*) DATAREP <BR>&lt;type&gt; INBUF(*), OUTBUF(*) <BR></tt>  
  
<P> 
  
 <tt> void MPI::Datatype::Pack_external(const char* datarep, const void* inbuf, int incount, void* outbuf, MPI::Aint outsize, MPI::Aint&amp; position) const <BR></tt>  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_UNPACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position )</TD></TR>  
<TR><TD> IN datarep</TD><TD>data representation (string) </TD></TR>  
<TR><TD> IN inbuf</TD><TD>input buffer start (choice) </TD></TR>  
<TR><TD> IN insize</TD><TD>input buffer size, in bytes (integer) </TD></TR>  
<TR><TD> INOUT position</TD><TD>current position in buffer, in bytes (integer) </TD></TR>  
<TR><TD> OUT outbuf</TD><TD>output buffer start (choice) </TD></TR>  
<TR><TD> IN outcount</TD><TD>number of output data items (integer) </TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of output data item (handle) </TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Unpack_external(char *datarep, void *inbuf, MPI_Aint insize, MPI_Aint *position, void *outbuf, int outcount, MPI_Datatype datatype) <BR></tt>   
<P> 
 <tt> MPI_UNPACK_EXTERNAL(DATAREP, INBUF, INSIZE, POSITION, OUTBUF, OUTCOUNT, DATATYPE, IERROR)<BR> INTEGER OUTCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) INSIZE, POSITION <BR>CHARACTER*(*) DATAREP <BR>&lt;type&gt; INBUF(*), OUTBUF(*) <BR></tt>  
<P> 
 <tt> void MPI::Datatype::Unpack_external(const char* datarep, const void* inbuf, MPI::Aint insize, MPI::Aint&amp; position, void* outbuf, int outcount) const  <BR></tt>  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_PACK_EXTERNAL_SIZE( datarep, incount, datatype, size )</TD></TR>  
<TR><TD> IN datarep</TD><TD>data representation (string) </TD></TR>  
<TR><TD> IN incount</TD><TD>number of input data items (integer) </TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each input data item (handle) </TD></TR>  
<TR><TD> OUT size</TD><TD>output buffer size, in bytes (integer) </TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Pack_external_size(char *datarep, int incount, MPI_Datatype datatype, MPI_Aint *size) <BR></tt>   
<P> 
  
 <tt> MPI_PACK_EXTERNAL_SIZE(DATAREP, INCOUNT, DATATYPE, SIZE, IERROR)<BR> INTEGER INCOUNT, DATATYPE, IERROR <BR>INTEGER(KIND=MPI_ADDRESS_KIND) SIZE <BR>CHARACTER*(*) DATAREP  <BR></tt>  
  
<P> 
  
 <tt> MPI::Aint MPI::Datatype::Pack_external_size(const char* datarep, int incount) const <BR></tt>  
  
<P> 
  
<P> 
  
<P> 

<P>
<HR>
<A HREF="node84.htm#Node84"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node41.htm#Node41"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node41.htm#Node41"> Miscellany</a>
<b>Next: </b><A HREF="node86.htm#Node86"> Functions and Macros</a>
<b>Previous: </b><A HREF="node84.htm#Node84"> Unsigned long long Type</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
