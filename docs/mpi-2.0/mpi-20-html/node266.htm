<HTML>
<!-- This file was generated by tohtml from appLang.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>I/O</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node266">12.6.6. I/O</a></H2>
<A HREF="node265.htm#Node265"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node260.htm#Node260"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node267.htm#Node267"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node260.htm#Node260">  MPI-2 C Bindings</a>
<b>Next: </b><A HREF="node267.htm#Node267"> Language Bindings</a>
<b>Previous: </b><A HREF="node265.htm#Node265"> External Interfaces</a>
<P>
 <tt> int MPI_File_close(MPI_File *fh) <BR></tt>  
 <tt> int MPI_File_delete(char *filename, MPI_Info info) <BR></tt>  
 <tt> int MPI_File_get_amode(MPI_File fh, int *amode) <BR></tt>  
 <tt> int MPI_File_get_atomicity(MPI_File fh, int *flag) <BR></tt>  
 <tt> int MPI_File_get_byte_offset(MPI_File fh, MPI_Offset offset, MPI_Offset *disp) <BR></tt>  
 <tt> int MPI_File_get_group(MPI_File fh, MPI_Group *group) <BR></tt>  
 <tt> int MPI_File_get_info(MPI_File fh, MPI_Info *info_used) <BR></tt>  
 <tt> int MPI_File_get_position(MPI_File fh, MPI_Offset *offset) <BR></tt>  
 <tt> int MPI_File_get_position_shared(MPI_File fh, MPI_Offset *offset) <BR></tt>  
 <tt> int MPI_File_get_size(MPI_File fh, MPI_Offset *size) <BR></tt>  
 <tt> int MPI_File_get_type_extent(MPI_File fh, MPI_Datatype datatype, MPI_Aint *extent) <BR></tt>  
 <tt> int MPI_File_get_view(MPI_File fh, MPI_Offset *disp, MPI_Datatype *etype, MPI_Datatype *filetype, char *datarep) <BR></tt>  
 <tt> int MPI_File_iread(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_iread_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_iread_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_iwrite(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_iwrite_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <BR></tt>  
 <tt> int MPI_File_open(MPI_Comm comm, char *filename, int amode, MPI_Info info, MPI_File *fh) <BR></tt>  
 <tt> int MPI_File_preallocate(MPI_File fh, MPI_Offset size) <BR></tt>  
 <tt> int MPI_File_read(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_all(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_all_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_read_all_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>             
 <tt> int MPI_File_read_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_read_at_all_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_ordered(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_ordered_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_read_ordered_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_read_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_seek(MPI_File fh, MPI_Offset offset, int whence) <BR></tt>  
 <tt> int MPI_File_seek_shared(MPI_File fh, MPI_Offset offset, int whence) <BR></tt>  
 <tt> int MPI_File_set_atomicity(MPI_File fh, int flag) <BR></tt>  
 <tt> int MPI_File_set_info(MPI_File fh, MPI_Info info) <BR></tt>  
 <tt> int MPI_File_set_size(MPI_File fh, MPI_Offset size) <BR></tt>  
 <tt> int MPI_File_set_view(MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, char *datarep, MPI_Info info) <BR></tt>  
 <tt> int MPI_File_sync(MPI_File fh) <BR></tt>  
 <tt> int MPI_File_write(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_all(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_all_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_write_all_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>            
 <tt> int MPI_File_write_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_write_at_all_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_ordered(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_ordered_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <BR></tt>  
 <tt> int MPI_File_write_ordered_end(MPI_File fh, void *buf, MPI_Status *status) <BR></tt>  
 <tt> int MPI_File_write_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <BR></tt>  
 <tt> int MPI_Register_datarep(char *datarep, MPI_Datarep_conversion_function *read_conversion_fn, MPI_Datarep_conversion_function *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state) <BR></tt>  
 <P> 

<P>
<HR>
<A HREF="node265.htm#Node265"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node260.htm#Node260"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node267.htm#Node267"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node260.htm#Node260">  MPI-2 C Bindings</a>
<b>Next: </b><A HREF="node267.htm#Node267"> Language Bindings</a>
<b>Previous: </b><A HREF="node265.htm#Node265"> External Interfaces</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
