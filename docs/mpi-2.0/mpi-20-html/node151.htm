<HTML>
<!-- This file was generated by tohtml from collective-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Other Operations</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node151">7.3.4. Other Operations</a></H2>
<A HREF="node150.htm#Node150"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node143.htm#Node143"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node152.htm#Node152"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node143.htm#Node143"> Extended Collective Operations</a>
<b>Next: </b><A HREF="node152.htm#Node152"> Generalized All-to-all Function</a>
<b>Previous: </b><A HREF="node150.htm#Node150"> Reductions</a>
<P>
<TABLE><TR><TD COLSPAN=2>MPI_BARRIER(comm)</TD></TR>  
<TR><TD> IN comm</TD><TD>communicator (handle)</TD></TR>  
</TABLE>  
<P> 
  
 <tt> void MPI::Comm::Barrier() const = 0 <BR></tt>  
  
<P> 
For  MPI-2,  comm may be an intercommunicator or an  
intracommunicator.    
If  comm is an intercommunicator, the barrier is  
performed across all processes in the intercommunicator.    
In this case, all processes in the local group of the intercommunicator may  
exit the barrier when all of the processes in the remote group have entered  
the barrier.   
<P> 
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_SCAN(sendbuf, recvbuf, count, datatype, op, comm)</TD></TR>  
<TR><TD> IN sendbuf</TD><TD>starting address of send buffer (choice)</TD></TR>  
<TR><TD> OUT recvbuf</TD><TD> starting address of receive buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD> number of elements in input buffer (integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD> data type of elements of input buffer (handle)</TD></TR>  
<TR><TD> IN op</TD><TD> operation (handle)</TD></TR>  
<TR><TD> IN comm</TD><TD> communicator (handle)</TD></TR>  
</TABLE>  
<P> 
The ``in place'' option  for intracommunicators is specified by passing  
 MPI_IN_PLACE   
in the  sendbuf argument.  In this case, the input data is  
taken from the receive buffer, and replaced by the output data.  
<P> 
This operation is illegal for intercommunicators.  
<P> 
<P> 
<P> 
<P> 
<P> 
<P> 
<P> 

<P>
<HR>
<A HREF="node150.htm#Node150"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node143.htm#Node143"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node152.htm#Node152"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node143.htm#Node143"> Extended Collective Operations</a>
<b>Next: </b><A HREF="node152.htm#Node152"> Generalized All-to-all Function</a>
<b>Previous: </b><A HREF="node150.htm#Node150"> Reductions</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
