<HTML>
<!-- This file was generated by tohtml from dynamic-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Establishing Communication</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node100">5.4. Establishing Communication</a></H1>
<A HREF="node98.htm#Node99"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node88.htm#Node88"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node101.htm#Node101"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node88.htm#Node88"> Process Creation and Management</a>
<b>Next: </b><A HREF="node101.htm#Node101"> Names, Addresses, Ports,  and All That</a>
<b>Previous: </b><A HREF="node98.htm#Node99"> Manager-worker Example, Using  MPI_SPAWN.</a>
<P>
  
<P> 
This section provides functions that establish communication between  
two sets of  MPI processes that do not share a communicator.  
<P> 
Some situations in which these functions are useful are:  
<ol> 
 
1. Two parts of an application that are started independently need to  
communicate.  
 
<BR> 
2. A visualization tool wants to attach to a running process.  
 
<BR> 
3. A server wants to accept connections from multiple clients.  Both  
clients and server may be parallel programs.   
<P> 
</ol> 
In each of these situations,  MPI must establish communication  
channels where none existed before, and there is no parent/child  
relationship.   
The routines described in this section establish communication   
between the two sets of processes by  
creating an  MPI intercommunicator,   
where the two groups of the intercommunicator  
are the original sets of of processes.   
<P> 
Establishing contact between two groups of processes that do not share an  
existing communicator is a collective but asymmetric process.  One group of  
processes indicates its willingness to accept connections from other groups of  
processes.  We will call this group the (parallel) <em> server</em>, even if this  
is not a client/server type of application.  The other group connects to the  
server; we will call it the <em> client</em>.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
While the names <em> client</em> and <em> server</em> are used throughout  
this section,  MPI does not guarantee the traditional robustness  
of client server systems. The functionality described in this  
section is intended to allow two cooperating parts of the  
same application to communicate with one another. For instance,   
a client that gets a segmentation fault  
and dies, or one that doesn't participate in a collective  
operation may cause a server to crash or hang.   
 (<em> End of advice to users.</em>) <BR> 
<menu> 
</menu> 

<P>
<HR>
<A HREF="node98.htm#Node99"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node88.htm#Node88"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node101.htm#Node101"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node88.htm#Node88"> Process Creation and Management</a>
<b>Next: </b><A HREF="node101.htm#Node101"> Names, Addresses, Ports,  and All That</a>
<b>Previous: </b><A HREF="node98.htm#Node99"> Manager-worker Example, Using  MPI_SPAWN.</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
