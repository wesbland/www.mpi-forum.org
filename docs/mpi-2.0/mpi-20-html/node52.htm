<HTML>
<!-- This file was generated by tohtml from misc-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Determining Whether  MPI Has Finished</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node52">4.9. Determining Whether  MPI Has Finished</a></H1>
<A HREF="node51.htm#Node51"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node41.htm#Node41"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node53.htm#Node53"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node41.htm#Node41"> Miscellany</a>
<b>Next: </b><A HREF="node53.htm#Node53"> The  Info Object</a>
<b>Previous: </b><A HREF="node51.htm#Node51"> Allowing User Functions at Process Termination</a>
<P>
  
<P> 
One of the goals of  MPI was to allow for layered libraries.  In  
order for a library to do this cleanly, it needs to know if  MPI is  
active.  In  MPI-1 the function  MPI_INITIALIZED was  
provided to tell if  MPI had been initialized.  The problem arises in  
knowing if  MPI has been finalized.  Once  MPI has been finalized it  
is no longer active and cannot be restarted.  A library needs to be  
able to determine this to act accordingly.  To achieve this the  
following function is needed:  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FINALIZED(flag)</TD></TR>  
<TR><TD> OUT flag</TD><TD>true if  MPI was finalized (logical)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Finalized(int *flag) <BR></tt>  
<P> 
 <tt> MPI_FINALIZED(FLAG, IERROR)<BR> LOGICAL FLAG<BR>INTEGER IERROR <BR></tt>  
<P> 
  
 <tt> bool MPI::Is_finalized() <BR></tt>  
  
<P> 
This routine returns  true if  MPI_FINALIZE has completed.  
It is legal to call  MPI_FINALIZED  
before  MPI_INIT and after  MPI_FINALIZE.  
<P> 
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
 MPI is ``active'' and it is thus safe to call  MPI functions if  
 MPI_INIT <em> has</em> completed and  MPI_FINALIZE <em>  
has not</em> completed.  If a library has no other way of knowing whether  
 MPI is active or not, then it can use  MPI_INITIALIZED and  
 MPI_FINALIZED to determine this.  For example,  MPI is ``active''  
in callback functions that are invoked during  MPI_FINALIZE.  
 (<em> End of advice to users.</em>) <BR> 
  
<P> 
  
<P> 
  
<P> 

<P>
<HR>
<A HREF="node51.htm#Node51"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node41.htm#Node41"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node53.htm#Node53"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node41.htm#Node41"> Miscellany</a>
<b>Next: </b><A HREF="node53.htm#Node53"> The  Info Object</a>
<b>Previous: </b><A HREF="node51.htm#Node51"> Allowing User Functions at Process Termination</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
