<HTML>
<!-- This file was generated by tohtml from misc-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Signed Characters and Reductions</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node83">4.15.2. Signed Characters and Reductions</a></H2>
<A HREF="node82.htm#Node82"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node81.htm#Node81"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node84.htm#Node84"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node81.htm#Node81"> New Predefined Datatypes</a>
<b>Next: </b><A HREF="node84.htm#Node84"> Unsigned long long Type</a>
<b>Previous: </b><A HREF="node82.htm#Node82"> Wide Characters</a>
<P>
 MPI-1 doesn't allow reductions on signed or unsigned <tt> char</tt>s.  Since this  
restriction (formally) prevents a C programmer from performing reduction operations on  
such types (which could be useful, particularly in an image processing  
application where pixel values are often represented as ``unsigned char''),   
we now specify a way for such reductions to be carried out.  
<P> 
 MPI-1.2 already has the C types  MPI_CHAR and  
 MPI_UNSIGNED_CHAR. However there is a problem here in that  
 MPI_CHAR is intended to represent a character, not a small integer,  
and therefore will be translated between machines with different character  
representations.  
<P> 
  
To overcome this, a new  MPI predefined datatype,  
 MPI_SIGNED_CHAR, is added to the predefined datatypes of  MPI-2,  
which corresponds to the ANSI C and ANSI C++ datatype <tt> signed char</tt>.  
  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
The types  MPI_CHAR and  MPI_CHARACTER are intended for  
characters, and so will be translated to preserve the printable  
representation, rather than the bit value, if sent between machines with  
different character codes.  The types  MPI_SIGNED_CHAR and  
 MPI_UNSIGNED_CHAR should be used in C if the integer value  
should be preserved.  
<P> 
 (<em> End of advice to users.</em>) <BR> 
The types  MPI_SIGNED_CHAR and  MPI_UNSIGNED_CHAR can be  
used in reduction operations.  MPI_CHAR (which represents printable  
characters) cannot be used in reduction operations.  This is an extension to  
 MPI-1.2, since  MPI-1.2 does not allow the use of  
 MPI_UNSIGNED_CHAR in reduction operations (and does not have the  
 MPI_SIGNED_CHAR type).  
<P> 
  
<P> 
  
In a heterogeneous environment,  MPI_CHAR and  MPI_WCHAR  
will be translated so as to preserve the printable charater, whereas  
 MPI_SIGNED_CHAR and  MPI_UNSIGNED_CHAR will be  
translated so as to preserve the integer value.  
  
<P> 
  

<P>
<HR>
<A HREF="node82.htm#Node82"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node81.htm#Node81"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node84.htm#Node84"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node81.htm#Node81"> New Predefined Datatypes</a>
<b>Next: </b><A HREF="node84.htm#Node84"> Unsigned long long Type</a>
<b>Previous: </b><A HREF="node82.htm#Node82"> Wide Characters</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
