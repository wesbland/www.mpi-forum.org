<HTML>
<!-- This file was generated by tohtml from appLang.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>One-Sided Communications</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node263">12.6.3. One-Sided Communications</a></H2>
<A HREF="node262.htm#Node262"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node260.htm#Node260"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node260.htm#Node260">  MPI-2 C Bindings</a>
<b>Next: </b><A HREF="node264.htm#Node264"> Extended Collective Operations</a>
<b>Previous: </b><A HREF="node262.htm#Node262"> Process Creation and Management</a>
<P>
 <tt> int MPI_Accumulate(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype,  MPI_Op op, MPI_Win win) <BR></tt>  
 <tt> int MPI_Get(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win) <BR></tt>  
 <tt> int MPI_Put(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_complete(MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_create(void *base, MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win) <BR></tt>  
 <tt> int MPI_Win_fence(int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_free(MPI_Win *win) <BR></tt>  
 <tt> int MPI_Win_get_group(MPI_Win win, MPI_Group *group) <BR></tt>  
 <tt> int MPI_Win_lock(int lock_type, int rank, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_post(MPI_Group group, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_start(MPI_Group group, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_test(MPI_Win win, int *flag) <BR></tt>  
 <tt> int MPI_Win_unlock(int rank, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_wait(MPI_Win win) <BR></tt>  
 <P> 

<P>
<HR>
<A HREF="node262.htm#Node262"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node260.htm#Node260"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node260.htm#Node260">  MPI-2 C Bindings</a>
<b>Next: </b><A HREF="node264.htm#Node264"> Extended Collective Operations</a>
<b>Previous: </b><A HREF="node262.htm#Node262"> Process Creation and Management</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
