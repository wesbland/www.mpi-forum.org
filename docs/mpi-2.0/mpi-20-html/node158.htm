<HTML>
<!-- This file was generated by tohtml from ei-2.tex -->
<!-- with the command
tohtml -default -endpage ../mpi2-forum-tail.htm -basedef ../mpi2defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex mpi2-report.tex 
-->
<TITLE>Associating Information with Status</TITLE>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node158">8.3. Associating Information with Status</a></H1>
<A HREF="node157.htm#Node157"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node154.htm#Node154"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node159.htm#Node159"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node154.htm#Node154"> External Interfaces</a>
<b>Next: </b><A HREF="node159.htm#Node159"> Naming Objects</a>
<b>Previous: </b><A HREF="node157.htm#Node157"> Examples</a>
<P>
  
<P> 
In  MPI-1, requests were associated with point-to-point operations.  
  
  
In  MPI-2 there are  
several different types of requests.  These range from new  MPI calls for  
I/O to generalized requests.  It is desirable to allow  
these calls use the same request mechanism.  This allows one to  
wait or test on different types of requests.  However,  
 MPI_{TEST<I>|</I>WAIT}{ANY<I>|</I>SOME<I>|</I>ALL} returns a status  
with information about the request.  With the generalization of  
requests, one needs to define what information will be returned in the  
status object.  
<P> 
In  MPI-2, each call fills in  
the appropriate fields in the status object.    
Any unused fields will  
have undefined values.  A call to  
 MPI_{TEST<I>|</I>WAIT}{ANY<I>|</I>SOME<I>|</I>ALL} can modify any of  
the fields in the status object.  Specifically, it can modify fields  
that are undefined.  The fields with meaningful value for a given  
request are defined in the sections with the new request.  
<P> 
Generalized requests raise additional considerations.  Here, the user  
provides the functions to deal with the request.  Unlike other  MPI  
calls, the user needs to provide the information to be returned in  
status.  The status argument is provided directly to the callback  
function where the status needs to be set.  Users can directly set the  
values in 3 of the 5 status values.  The count and cancel fields are  
opaque.  To overcome this, new calls are provided:  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_STATUS_SET_ELEMENTS(status, datatype, count)</TD></TR>  
  
<TR><TD> INOUT status</TD><TD>status to associate count with (Status)</TD></TR>  
  
<TR><TD> IN datatype</TD><TD>datatype associated with count (handle)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements to associate with status (integer)</TD></TR>  
</TABLE>  
<P> 
  
 <tt> int MPI_Status_set_elements(MPI_Status *status, MPI_Datatype datatype, int count) <BR></tt>  
  
<P> 
 <tt> MPI_STATUS_SET_ELEMENTS(STATUS, DATATYPE, COUNT, IERROR)<BR> INTEGER STATUS(MPI_STATUS_SIZE), DATATYPE, COUNT, IERROR <BR></tt>  
<P> 
 <tt> void MPI::Status::Set_elements(const MPI::Datatype&amp; datatype, int count) <BR></tt>  
<P> 
This call modifies the opaque part of  status so that a call  
to  MPI_GET_ELEMENTS will return  count.  
 MPI_GET_COUNT will return a compatible value.  
  
  
<P> 
 
<BR> 
<em> Rationale.</em>  
<P> 
The number of elements is set instead of the count because the former  
can deal with nonintegral number of datatypes.  
 (<em> End of rationale.</em>) <BR> 
  
A subsequent call to  MPI_GET_COUNT(status, datatype, count) or to  
 MPI_GET_ELEMENTS(status, datatype, count) must use a  
 datatype argument that has the same type signature as the  
 datatype argument that was used in the call to  
 MPI_STATUS_SET_ELEMENTS.  
<P> 
 
<BR> 
<em> Rationale.</em>  
<P> 
This is similar to the restriction that holds when   
when  count is set by a  
receive operation: in that case, the calls to  
 MPI_GET_COUNT and  MPI_GET_ELEMENTS must use a  
 datatype with the same signature as the datatype used in the  
receive call.  
 (<em> End of rationale.</em>) <BR> 
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_STATUS_SET_CANCELLED(status, flag)</TD></TR>  
  
<TR><TD> INOUT status</TD><TD>status to associate cancel flag with (Status)</TD></TR>  
  
<TR><TD> IN flag</TD><TD>if true indicates request was cancelled (logical)</TD></TR>  
</TABLE>  
<P> 
  
 <tt> int MPI_Status_set_cancelled(MPI_Status *status, int flag) <BR></tt>  
  
<P> 
 <tt> MPI_STATUS_SET_CANCELLED(STATUS, FLAG, IERROR)<BR> INTEGER STATUS(MPI_STATUS_SIZE), IERROR<BR>LOGICAL FLAG <BR></tt>  
<P> 
 <tt> void MPI::Status::Set_cancelled(bool flag) <BR></tt>  
<P> 
If  flag is set to  true then a subsequent call to   
 MPI_TEST_CANCELLED(status, flag) will also return  flag = true,  
otherwise it will return  false.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
Users are advised not to reuse the status fields for values other than  
those for which they were intended.  Doing so may lead to unexpected  
results when using the status object.  For example, calling  
 MPI_GET_ELEMENTS may cause an error if the value is  
out of range or it may be impossible to detect such an error.  The  
 extra_state argument provided with a generalized request can  
be used to return information that does not logically belong in  
status.  
  
Furthermore, modifying the values in a status set internally by  MPI,  
e.g.,  MPI_RECV, may lead to unpredictable results and is  
strongly discouraged.  
  
 (<em> End of advice to users.</em>) <BR> 
  
  

<P>
<HR>
<A HREF="node157.htm#Node157"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node154.htm#Node154"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node159.htm#Node159"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node154.htm#Node154"> External Interfaces</a>
<b>Next: </b><A HREF="node159.htm#Node159"> Naming Objects</a>
<b>Previous: </b><A HREF="node157.htm#Node157"> Examples</a>
<P>
<HR>
Return to <A HREF="node306.htm">MPI-2 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/docs/mpi-11-html/node182.html">MPI 1.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 18, 1997<BR>
HTML Generated on September 10, 2001
</FONT>
</BODY>
</HTML>
