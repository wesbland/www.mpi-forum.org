<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-inquiry/inquiry.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Timers and Synchronization</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node189">177. Timers and Synchronization</a></H1>
<A HREF="node188.htm#Node188"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node190.htm#Node190"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node190.htm#Node190"> Startup</a>
<b>Previous: </b><A HREF="node188.htm#Node188"> Error Classes, Error Codes, and Error Handlers</a>
<P>
 MPI defines a timer.  A timer is specified even though it is not  
``message-passing,'' because timing parallel programs is important in  
``performance debugging'' and because existing timers (both in POSIX  
1003.1-1988 and 1003.4D 14.1 and in Fortran 90) are either inconvenient or do  
not provide adequate access to high-resolution timers.  
See also Section <a href="node31.htm#Node31">Functions and Macros 
</a> on page <a href="node31.htm#Node31">Functions and Macros 
</a>.    
<BR>  
  
  
      
      
      
     MPI_WTIME()<BR>  
<P> 
  
 <tt> double MPI_Wtime(void) <BR></tt>  
 <tt> DOUBLE PRECISION MPI_WTIME() <BR></tt>  
 <tt> double MPI::Wtime() <BR></tt>  
 MPI_WTIME returns a floating-point number of seconds,  
representing elapsed wall-clock time since some time in  
the past.  
<P> 
The ``time in the past'' is guaranteed not to change during the life of the  
process.  The user is responsible for converting large numbers of seconds to  
other units if they are preferred.  
<P> 
This function is portable (it returns seconds, not ``ticks''), it allows  
high-resolution, and carries no unnecessary baggage.  One would use it like  
this:  
<P> 
  
<BR> 
<pre><tt>{ 
   double starttime, endtime; 
   starttime = MPI_Wtime(); 
    ....  stuff to be timed  ... 
   endtime   = MPI_Wtime(); 
   printf("That took %f seconds\n",endtime-starttime); 
} 
</tt></pre> 
  
<P> 
The times returned are local to the node that called them.  
There is no requirement that different nodes return ``the same time.''  
(But see also the discussion of  MPI_WTIME_IS_GLOBAL).  
<P> 
  
      
      
      
     MPI_WTICK()<BR>  
<P> 
  
 <tt> double MPI_Wtick(void) <BR></tt>  
 <tt> DOUBLE PRECISION MPI_WTICK() <BR></tt>  
 <tt> double MPI::Wtick() <BR></tt>  
 MPI_WTICK returns the resolution of  
 MPI_WTIME in seconds.  That is, it  
returns, as a double precision value, the number of seconds between successive  
clock ticks.  
For example, if the clock is implemented by the hardware as a counter that is  
incremented every millisecond, the value returned by  MPI_WTICK  
should be <I>10<SUP>-3</SUP></I>.  
  
<P> 

<P>
<HR>
<A HREF="node188.htm#Node188"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node190.htm#Node190"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node190.htm#Node190"> Startup</a>
<b>Previous: </b><A HREF="node188.htm#Node188"> Error Classes, Error Codes, and Error Handlers</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
