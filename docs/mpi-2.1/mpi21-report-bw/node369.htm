<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-appLang/appLang-Const.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Defined Constants</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node369">323. Defined Constants</a></H2>
<A HREF="node368.htm#Node368"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node368.htm#Node368"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node370.htm#Node370"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node368.htm#Node368"> Defined  Values and Handles</a>
<b>Next: </b><A HREF="node370.htm#Node370"> Types</a>
<b>Previous: </b><A HREF="node368.htm#Node368"> Defined  Values and Handles</a>
<P>
  
<P> 
The C and Fortran name is listed in the left column and the C++ name  
is listed in the   
middle or  
right column.  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Return Codes</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"> <tt>(or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
  
  
  
  
  
  
  
  
  
  
<P> 
 MPI_SUCCESS</TD><TD ALIGN="LEFT">  MPI::SUCCESS </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_BUFFER</TD><TD ALIGN="LEFT">  MPI::ERR_BUFFER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_COUNT</TD><TD ALIGN="LEFT">  MPI::ERR_COUNT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_TYPE</TD><TD ALIGN="LEFT">  MPI::ERR_TYPE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_TAG</TD><TD ALIGN="LEFT">  MPI::ERR_TAG </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_COMM</TD><TD ALIGN="LEFT">  MPI::ERR_COMM </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_RANK</TD><TD ALIGN="LEFT">  MPI::ERR_RANK </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_REQUEST</TD><TD ALIGN="LEFT">  MPI::ERR_REQUEST </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_ROOT</TD><TD ALIGN="LEFT">  MPI::ERR_ROOT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_GROUP</TD><TD ALIGN="LEFT">  MPI::ERR_GROUP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_OP</TD><TD ALIGN="LEFT">  MPI::ERR_OP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_TOPOLOGY</TD><TD ALIGN="LEFT">  MPI::ERR_TOPOLOGY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_DIMS</TD><TD ALIGN="LEFT">  MPI::ERR_DIMS </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_ARG</TD><TD ALIGN="LEFT">  MPI::ERR_ARG </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_UNKNOWN</TD><TD ALIGN="LEFT">  MPI::ERR_UNKNOWN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_TRUNCATE</TD><TD ALIGN="LEFT">  MPI::ERR_TRUNCATE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_OTHER</TD><TD ALIGN="LEFT">  MPI::ERR_OTHER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_INTERN</TD><TD ALIGN="LEFT">  MPI::ERR_INTERN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_PENDING</TD><TD ALIGN="LEFT">  MPI::ERR_PENDING </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_IN_STATUS</TD><TD ALIGN="LEFT">  MPI::ERR_IN_STATUS </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
2r<b>  (Continued on next page) </b>  
 <P> 
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Return Codes (continued)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_ERR_ACCESS</TD><TD ALIGN="LEFT">  MPI::ERR_ACCESS </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_AMODE</TD><TD ALIGN="LEFT">  MPI::ERR_AMODE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_ASSERT</TD><TD ALIGN="LEFT">  MPI::ERR_ASSERT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_BAD_FILE</TD><TD ALIGN="LEFT">  MPI::ERR_BAD_FILE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_BASE</TD><TD ALIGN="LEFT">  MPI::ERR_BASE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_CONVERSION</TD><TD ALIGN="LEFT">  MPI::ERR_CONVERSION </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_DISP</TD><TD ALIGN="LEFT">  MPI::ERR_DISP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_DUP_DATAREP</TD><TD ALIGN="LEFT">  MPI::ERR_DUP_DATAREP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_FILE_EXISTS</TD><TD ALIGN="LEFT">  MPI::ERR_FILE_EXISTS </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_FILE_IN_USE</TD><TD ALIGN="LEFT">  MPI::ERR_FILE_IN_USE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_FILE</TD><TD ALIGN="LEFT">  MPI::ERR_FILE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_INFO_KEY</TD><TD ALIGN="LEFT">  MPI::ERR_INFO_VALUE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_INFO_NOKEY</TD><TD ALIGN="LEFT">  MPI::ERR_INFO_NOKEY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_INFO_VALUE</TD><TD ALIGN="LEFT">  MPI::ERR_INFO_KEY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_INFO</TD><TD ALIGN="LEFT">  MPI::ERR_INFO </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_IO</TD><TD ALIGN="LEFT">  MPI::ERR_IO </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_KEYVAL</TD><TD ALIGN="LEFT">  MPI::ERR_KEYVAL</TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_LOCKTYPE</TD><TD ALIGN="LEFT">  MPI::ERR_LOCKTYPE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_NAME</TD><TD ALIGN="LEFT">  MPI::ERR_NAME </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_NO_MEM</TD><TD ALIGN="LEFT">  MPI::ERR_NO_MEM </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_NOT_SAME</TD><TD ALIGN="LEFT">  MPI::ERR_NOT_SAME </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_NO_SPACE</TD><TD ALIGN="LEFT">  MPI::ERR_NO_SPACE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_NO_SUCH_FILE</TD><TD ALIGN="LEFT">  MPI::ERR_NO_SUCH_FILE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_PORT</TD><TD ALIGN="LEFT">  MPI::ERR_PORT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_QUOTA</TD><TD ALIGN="LEFT">  MPI::ERR_QUOTA </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_READ_ONLY</TD><TD ALIGN="LEFT">  MPI::ERR_READ_ONLY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_RMA_CONFLICT</TD><TD ALIGN="LEFT">  MPI::ERR_RMA_CONFLICT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_RMA_SYNC</TD><TD ALIGN="LEFT">  MPI::ERR_RMA_SYNC </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_SERVICE</TD><TD ALIGN="LEFT">  MPI::ERR_SERVICE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_SIZE</TD><TD ALIGN="LEFT">  MPI::ERR_SIZE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_SPAWN</TD><TD ALIGN="LEFT">  MPI::ERR_SPAWN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_UNSUPPORTED_DATAREP</TD><TD ALIGN="LEFT">  MPI::ERR_UNSUPPORTED_DATAREP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_UNSUPPORTED_OPERATION</TD><TD ALIGN="LEFT">  MPI::ERR_UNSUPPORTED_OPERATION </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_WIN</TD><TD ALIGN="LEFT">  MPI::ERR_WIN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERR_LASTCODE</TD><TD ALIGN="LEFT">  MPI::ERR_LASTCODE </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">3c<b> Assorted Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
C/Fortran name</TD><TD ALIGN="LEFT"> C++ name</TD><TD ALIGN="LEFT"> C++ type </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_BOTTOM</TD><TD ALIGN="LEFT">  MPI::BOTTOM</TD><TD ALIGN="LEFT"> <tt> void * const</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
   
 MPI_PROC_NULL</TD><TD ALIGN="LEFT">  MPI::PROC_NULL</TD><TD ALIGN="LEFT"> <tt> const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ANY_SOURCE</TD><TD ALIGN="LEFT">  MPI::ANY_SOURCE</TD><TD ALIGN="LEFT"> <tt> (or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ANY_TAG</TD><TD ALIGN="LEFT">  MPI::ANY_TAG </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNDEFINED</TD><TD ALIGN="LEFT">  MPI::UNDEFINED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BSEND_OVERHEAD</TD><TD ALIGN="LEFT">  MPI::BSEND_OVERHEAD </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_KEYVAL_INVALID</TD><TD ALIGN="LEFT">  MPI::KEYVAL_INVALID </TD></TR> 
<TR><TD ALIGN="LEFT">  
   
 MPI_IN_PLACE</TD><TD ALIGN="LEFT">  MPI::IN_PLACE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LOCK_EXCLUSIVE</TD><TD ALIGN="LEFT">  MPI::LOCK_EXCLUSIVE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LOCK_SHARED</TD><TD ALIGN="LEFT">  MPI::LOCK_SHARED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ROOT</TD><TD ALIGN="LEFT">  MPI::ROOT </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Status size and reserved index values (Fortran  only)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_STATUS_SIZE</TD><TD ALIGN="LEFT">  Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SOURCE</TD><TD ALIGN="LEFT">  Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_TAG</TD><TD ALIGN="LEFT">  Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERROR</TD><TD ALIGN="LEFT">  Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Variable Address Size (Fortran only)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_ADDRESS_KIND</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INTEGER_KIND</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_OFFSET_KIND</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Error-handling specifiers</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>MPI::Errhandler</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_ERRORS_ARE_FATAL</TD><TD ALIGN="LEFT">  MPI::ERRORS_ARE_FATAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERRORS_RETURN</TD><TD ALIGN="LEFT">  MPI::ERRORS_RETURN </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT">  MPI::ERRORS_THROW_EXCEPTIONS </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">3c<b> Maximum Sizes for Strings</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
C/Fortran name</TD><TD ALIGN="LEFT"> C++ name</TD><TD ALIGN="LEFT"> C++ type </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_MAX_PROCESSOR_NAME</TD><TD ALIGN="LEFT">  MPI::MAX_PROCESSOR_NAME</TD><TD ALIGN="LEFT"> <tt> const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAX_ERROR_STRING</TD><TD ALIGN="LEFT">  MPI::MAX_ERROR_STRING</TD><TD ALIGN="LEFT"> <tt> (or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
   
 MPI_MAX_DATAREP_STRING</TD><TD ALIGN="LEFT">  MPI::MAX_DATAREP_STRING </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAX_INFO_KEY</TD><TD ALIGN="LEFT">  MPI::MAX_INFO_KEY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAX_INFO_VAL</TD><TD ALIGN="LEFT">  MPI::MAX_INFO_VAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAX_OBJECT_NAME</TD><TD ALIGN="LEFT">  MPI::MAX_OBJECT_NAME </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAX_PORT_NAME</TD><TD ALIGN="LEFT">  MPI::MAX_PORT_NAME </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
 <P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c|<b> Named Predefined Datatypes</b></TD><TD ALIGN="LEFT"> <b> C/C++ types</TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: </b><tt>MPI::Datatype</tt></TD><TD ALIGN="LEFT"> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_CHAR</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> <tt> signed char</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> (treated as printable character) </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT">  MPI::CHAR</TD><TD ALIGN="LEFT"> <tt> char</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> (treated as printable character) </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SHORT</TD><TD ALIGN="LEFT">  MPI::SHORT</TD><TD ALIGN="LEFT"> <tt> signed short int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INT</TD><TD ALIGN="LEFT">  MPI::INT</TD><TD ALIGN="LEFT"> <tt> signed int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG</TD><TD ALIGN="LEFT">  MPI::LONG</TD><TD ALIGN="LEFT"> <tt> signed long</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG_LONG_INT</TD><TD ALIGN="LEFT">  MPI::LONG_LONG_INT</TD><TD ALIGN="LEFT"> <tt> signed long long</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG_LONG</TD><TD ALIGN="LEFT">  MPI::LONG_LONG</TD><TD ALIGN="LEFT"> <tt> long long</tt> (synonym)</TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SIGNED_CHAR</TD><TD ALIGN="LEFT">  MPI::SIGNED_CHAR</TD><TD ALIGN="LEFT"> <tt> signed char</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> (treated as integral value) </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNSIGNED_CHAR</TD><TD ALIGN="LEFT">  MPI::UNSIGNED_CHAR</TD><TD ALIGN="LEFT"> <tt> unsigned char</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> (treated as integral value) </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNSIGNED_SHORT</TD><TD ALIGN="LEFT">  MPI::UNSIGNED_SHORT</TD><TD ALIGN="LEFT"> <tt> unsigned short</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNSIGNED</TD><TD ALIGN="LEFT">  MPI::UNSIGNED</TD><TD ALIGN="LEFT"> <tt> unsigned int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNSIGNED_LONG</TD><TD ALIGN="LEFT">  MPI::UNSIGNED_LONG</TD><TD ALIGN="LEFT"> <tt> unsigned long</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNSIGNED_LONG_LONG</TD><TD ALIGN="LEFT">  MPI::UNSIGNED_LONG_LONG</TD><TD ALIGN="LEFT"> <tt> unsigned long long</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_FLOAT</TD><TD ALIGN="LEFT">  MPI::FLOAT</TD><TD ALIGN="LEFT"> <tt> float</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DOUBLE</TD><TD ALIGN="LEFT">  MPI::DOUBLE</TD><TD ALIGN="LEFT"> <tt> double</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG_DOUBLE</TD><TD ALIGN="LEFT">  MPI::LONG_DOUBLE</TD><TD ALIGN="LEFT"> <tt> long double</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WCHAR</TD><TD ALIGN="LEFT">  MPI::WCHAR</TD><TD ALIGN="LEFT"> <tt> wchar_t</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT"> (defined in <tt> &lt;stddef.h&gt;</tt>) </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"></TD><TD ALIGN="LEFT">  (treated as printable character) </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BYTE</TD><TD ALIGN="LEFT">  MPI::BYTE</TD><TD ALIGN="LEFT">  (any C/C++ type) </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_PACKED</TD><TD ALIGN="LEFT">  MPI::PACKED</TD><TD ALIGN="LEFT">  (any C/C++ type) </TD></TR> 
<TR><TD ALIGN="LEFT">  
</b></TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c|<b> C and C++ (no Fortran) Named Predefined Datatypes</b></TD><TD ALIGN="LEFT"> <b> Fortran types </TD></TR> 
<TR><TD ALIGN="LEFT">  
</b> MPI_Fint</TD><TD ALIGN="LEFT">  MPI::Fint</TD><TD ALIGN="LEFT"> <tt> INTEGER</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</b></TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c|<b> Named Predefined Datatypes</b></TD><TD ALIGN="LEFT"> <b> Fortran types</TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: </b><tt>MPI::Datatype</tt></TD><TD ALIGN="LEFT"> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_INTEGER</TD><TD ALIGN="LEFT">  MPI::INTEGER</TD><TD ALIGN="LEFT"> <tt> INTEGER</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REAL</TD><TD ALIGN="LEFT">  MPI::REAL</TD><TD ALIGN="LEFT"> <tt> REAL</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DOUBLE_PRECISION</TD><TD ALIGN="LEFT">  MPI::DOUBLE_PRECISION</TD><TD ALIGN="LEFT"> <tt> DOUBLE PRECISION</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMPLEX</TD><TD ALIGN="LEFT">  MPI::F_COMPLEX</TD><TD ALIGN="LEFT"> <tt> COMPLEX</tt> </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_LOGICAL</TD><TD ALIGN="LEFT">  MPI::LOGICAL</TD><TD ALIGN="LEFT"> <tt> LOGICAL</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_CHARACTER</TD><TD ALIGN="LEFT">  MPI::CHARACTER</TD><TD ALIGN="LEFT"> <tt> CHARACTER(1)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BYTE</TD><TD ALIGN="LEFT">  MPI::BYTE</TD><TD ALIGN="LEFT">  (any Fortran type) </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_PACKED</TD><TD ALIGN="LEFT">  MPI::PACKED</TD><TD ALIGN="LEFT">  (any Fortran type) </TD></TR> 
<TR><TD ALIGN="LEFT">  
</b></TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT"><b> C++-Only Named Predefined Datatypes</TD><TD ALIGN="LEFT"> </b><b> C++ types</TD></TR> 
<TR><TD ALIGN="LEFT">  
  
C++ type: </b><tt>MPI::Datatype</tt></TD><TD ALIGN="LEFT"> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI::BOOL</TD><TD ALIGN="LEFT"> <tt> bool</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI::COMPLEX</TD><TD ALIGN="LEFT"> <tt> Complex&lt;float&gt;</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI::DOUBLE_COMPLEX</TD><TD ALIGN="LEFT"> <tt> Complex&lt;double&gt;</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI::LONG_DOUBLE_COMPLEX</TD><TD ALIGN="LEFT"> <tt> Complex&lt;long double&gt;</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</b></TD></TR></TABLE> 
</CENTER>  
 <P> 
 <P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c|<b> Optional datatypes (Fortran)</b></TD><TD ALIGN="LEFT"> <b> Fortran types </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: </b><tt>MPI::Datatype</tt></TD><TD ALIGN="LEFT"> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_DOUBLE_COMPLEX</TD><TD ALIGN="LEFT">  MPI::DOUBLE_COMPLEX</TD><TD ALIGN="LEFT"> <tt> DOUBLE COMPLEX</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INTEGER1</TD><TD ALIGN="LEFT">  MPI::INTEGER1</TD><TD ALIGN="LEFT"> <tt> INTEGER*1</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INTEGER2</TD><TD ALIGN="LEFT">  MPI::INTEGER2</TD><TD ALIGN="LEFT"> <tt> INTEGER*8</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INTEGER4</TD><TD ALIGN="LEFT">  MPI::INTEGER4</TD><TD ALIGN="LEFT"> <tt> INTEGER*4</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INTEGER8</TD><TD ALIGN="LEFT">  MPI::INTEGER8</TD><TD ALIGN="LEFT"> <tt> INTEGER*8</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REAL2</TD><TD ALIGN="LEFT">  MPI::REAL2</TD><TD ALIGN="LEFT"> <tt> REAL*2</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REAL4</TD><TD ALIGN="LEFT">  MPI::REAL4</TD><TD ALIGN="LEFT"> <tt> REAL*4</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REAL8</TD><TD ALIGN="LEFT">  MPI::REAL8</TD><TD ALIGN="LEFT"> <tt> REAL*8</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</b></TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Datatypes for reduction functions (C and C++)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>MPI::Datatype</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_FLOAT_INT</TD><TD ALIGN="LEFT">  MPI::FLOAT_INT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DOUBLE_INT</TD><TD ALIGN="LEFT">  MPI::DOUBLE_INT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG_INT</TD><TD ALIGN="LEFT">  MPI::LONG_INT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_2INT</TD><TD ALIGN="LEFT">  MPI::TWOINT </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_SHORT_INT</TD><TD ALIGN="LEFT">  MPI::SHORT_INT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LONG_DOUBLE_INT</TD><TD ALIGN="LEFT">  MPI::LONG_DOUBLE_INT </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Datatypes for reduction functions (Fortran)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>MPI::Datatype</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_2REAL</TD><TD ALIGN="LEFT">  MPI::TWOREAL </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_2DOUBLE_PRECISION</TD><TD ALIGN="LEFT">  MPI::TWODOUBLE_PRECISION </TD></TR> 
<TR><TD ALIGN="LEFT"> MPI_2INTEGER</TD><TD ALIGN="LEFT">  MPI::TWOINTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Special datatypes for constructing derived datatypes</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>MPI::Datatype</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_UB</TD><TD ALIGN="LEFT">  MPI::UB </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LB</TD><TD ALIGN="LEFT">  MPI::LB </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
 <P> 
 <P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Reserved communicators</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>MPI::Intracomm</tt>  </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_COMM_WORLD</TD><TD ALIGN="LEFT">  MPI::COMM_WORLD </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMM_SELF</TD><TD ALIGN="LEFT">  MPI::COMM_SELF </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Results of communicator and group comparisons</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"> <tt>(or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_IDENT</TD><TD ALIGN="LEFT">  MPI::IDENT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_CONGRUENT</TD><TD ALIGN="LEFT">  MPI::CONGRUENT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SIMILAR</TD><TD ALIGN="LEFT">  MPI::SIMILAR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNEQUAL</TD><TD ALIGN="LEFT">  MPI::UNEQUAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Environmental inquiry keys</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"> <tt>(or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_TAG_UB</TD><TD ALIGN="LEFT">  MPI::TAG_UB </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_IO</TD><TD ALIGN="LEFT">  MPI::IO </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_HOST</TD><TD ALIGN="LEFT">  MPI::HOST </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WTIME_IS_GLOBAL</TD><TD ALIGN="LEFT">  MPI::WTIME_IS_GLOBAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Collective Operations</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const MPI::Op</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_MAX</TD><TD ALIGN="LEFT">  MPI::MAX </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MIN</TD><TD ALIGN="LEFT">  MPI::MIN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SUM</TD><TD ALIGN="LEFT">  MPI::SUM </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_PROD</TD><TD ALIGN="LEFT">  MPI::PROD </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MAXLOC</TD><TD ALIGN="LEFT">  MPI::MAXLOC </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MINLOC</TD><TD ALIGN="LEFT">  MPI::MINLOC </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BAND</TD><TD ALIGN="LEFT">  MPI::BAND </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BOR</TD><TD ALIGN="LEFT">  MPI::BOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_BXOR</TD><TD ALIGN="LEFT">  MPI::BXOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LAND</TD><TD ALIGN="LEFT">  MPI::LAND </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LOR</TD><TD ALIGN="LEFT">  MPI::LOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LXOR</TD><TD ALIGN="LEFT">  MPI::LXOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REPLACE</TD><TD ALIGN="LEFT">  MPI::REPLACE </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">3c<b> Null Handles</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
C/Fortran name</TD><TD ALIGN="LEFT"> C++ name</TD><TD ALIGN="LEFT"> C++ type </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_GROUP_NULL</TD><TD ALIGN="LEFT">  MPI::GROUP_NULL</TD><TD ALIGN="LEFT"> <tt> const MPI::Group</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMM_NULL</TD><TD ALIGN="LEFT">  MPI::COMM_NULL</TD><TD ALIGN="LEFT"> <I><SUP>1</SUP></I>) </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DATATYPE_NULL</TD><TD ALIGN="LEFT">  MPI::DATATYPE_NULL</TD><TD ALIGN="LEFT"> <tt> const MPI::Datatype</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_REQUEST_NULL</TD><TD ALIGN="LEFT">  MPI::REQUEST_NULL</TD><TD ALIGN="LEFT"> <tt> const MPI::Request</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_OP_NULL</TD><TD ALIGN="LEFT">  MPI::OP_NULL</TD><TD ALIGN="LEFT"> <tt> const MPI::Op</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERRHANDLER_NULL</TD><TD ALIGN="LEFT">  MPI::ERRHANDLER_NULL</TD><TD ALIGN="LEFT"> <tt> const MPI::Errhandler</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_FILE_NULL</TD><TD ALIGN="LEFT">  MPI::FILE_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_INFO_NULL</TD><TD ALIGN="LEFT">  MPI::INFO_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WIN_NULL</TD><TD ALIGN="LEFT">  MPI::WIN_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
3l<I><SUP>1</SUP></I>)        C++ type: See Section <a href="node331.htm#Node331">Communicators 
</a> on page <a href="node331.htm#Node331">Communicators 
</a> regarding </TD></TR> 
<TR><TD ALIGN="LEFT">  
3l class hierarchy and the specific type of MPI::COMM_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Empty group</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const MPI::Group</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_GROUP_EMPTY</TD><TD ALIGN="LEFT">  MPI::GROUP_EMPTY </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Topologies</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD><TD ALIGN="LEFT"> C++ type: <tt>const int</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
</TD><TD ALIGN="LEFT"> <tt>(or unnamed enum)</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_GRAPH</TD><TD ALIGN="LEFT">  MPI::GRAPH </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_CART</TD><TD ALIGN="LEFT">  MPI::CART </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">3c<b> Predefined functions</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
C/Fortran name</TD><TD ALIGN="LEFT"> C++ name</TD><TD ALIGN="LEFT"> C++ type </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_NULL_COPY_FN</TD><TD ALIGN="LEFT">  MPI::NULL_COPY_FN</TD><TD ALIGN="LEFT"> <tt> MPI::Copy_function</tt> </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DUP_FN</TD><TD ALIGN="LEFT">  MPI::DUP_FN</TD><TD ALIGN="LEFT"> <tt> MPI::Copy_function</tt>  </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_NULL_DELETE_FN</TD><TD ALIGN="LEFT">  MPI::NULL_DELETE_FN</TD><TD ALIGN="LEFT"> <tt> MPI::Delete_function</tt>  </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Predefined Attribute Keys</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_APPNUM</TD><TD ALIGN="LEFT">  MPI::APPNUM </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_LASTUSEDCODE</TD><TD ALIGN="LEFT">  MPI::LASTUSEDCODE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_UNIVERSE_SIZE</TD><TD ALIGN="LEFT">  MPI::UNIVERSE_SIZE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WIN_BASE</TD><TD ALIGN="LEFT">  MPI::WIN_BASE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WIN_DISP_UNIT</TD><TD ALIGN="LEFT">  MPI::WIN_DISP_UNIT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_WIN_SIZE</TD><TD ALIGN="LEFT">  MPI::WIN_SIZE </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Mode Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_MODE_APPEND</TD><TD ALIGN="LEFT">  MPI::MODE_APPEND </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_CREATE</TD><TD ALIGN="LEFT">  MPI::MODE_CREATE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_DELETE_ON_CLOSE</TD><TD ALIGN="LEFT">  MPI::MODE_DELETE_ON_CLOSE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_EXCL</TD><TD ALIGN="LEFT">  MPI::MODE_EXCL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_NOCHECK</TD><TD ALIGN="LEFT">  MPI::MODE_NOCHECK </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_NOPRECEDE</TD><TD ALIGN="LEFT">  MPI::MODE_NOPRECEDE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_NOPUT</TD><TD ALIGN="LEFT">  MPI::MODE_NOPUT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_NOSTORE</TD><TD ALIGN="LEFT">  MPI::MODE_NOSTORE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_NOSUCCEED</TD><TD ALIGN="LEFT">  MPI::MODE_NOSUCCEED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_RDONLY</TD><TD ALIGN="LEFT">  MPI::MODE_RDONLY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_RDWR</TD><TD ALIGN="LEFT">  MPI::MODE_RDWR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_SEQUENTIAL</TD><TD ALIGN="LEFT">  MPI::MODE_SEQUENTIAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_UNIQUE_OPEN</TD><TD ALIGN="LEFT">  MPI::MODE_UNIQUE_OPEN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_MODE_WRONLY</TD><TD ALIGN="LEFT">  MPI::MODE_WRONLY </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Datatype Decoding Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_COMBINER_CONTIGUOUS</TD><TD ALIGN="LEFT">  MPI::COMBINER_CONTIGUOUS </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_DARRAY</TD><TD ALIGN="LEFT">  MPI::COMBINER_DARRAY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_DUP</TD><TD ALIGN="LEFT">  MPI::COMBINER_DUP </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_F90_COMPLEX</TD><TD ALIGN="LEFT">  MPI::COMBINER_F90_COMPLEX </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_F90_INTEGER</TD><TD ALIGN="LEFT">  MPI::COMBINER_F90_INTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_F90_REAL</TD><TD ALIGN="LEFT">  MPI::COMBINER_F90_REAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_HINDEXED_INTEGER</TD><TD ALIGN="LEFT">  MPI::COMBINER_HINDEXED_INTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_HINDEXED</TD><TD ALIGN="LEFT">  MPI::COMBINER_HINDEXED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_HVECTOR_INTEGER</TD><TD ALIGN="LEFT">  MPI::COMBINER_HVECTOR_INTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_HVECTOR</TD><TD ALIGN="LEFT">  MPI::COMBINER_HVECTOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_INDEXED_BLOCK</TD><TD ALIGN="LEFT">  MPI::COMBINER_INDEXED_BLOCK </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_INDEXED</TD><TD ALIGN="LEFT">  MPI::COMBINER_INDEXED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_NAMED</TD><TD ALIGN="LEFT">  MPI::COMBINER_NAMED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_RESIZED</TD><TD ALIGN="LEFT">  MPI::COMBINER_RESIZED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_STRUCT_INTEGER</TD><TD ALIGN="LEFT">  MPI::COMBINER_STRUCT_INTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_STRUCT</TD><TD ALIGN="LEFT">  MPI::COMBINER_STRUCT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_SUBARRAY</TD><TD ALIGN="LEFT">  MPI::COMBINER_SUBARRAY </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_COMBINER_VECTOR</TD><TD ALIGN="LEFT">  MPI::COMBINER_VECTOR </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Threads Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_THREAD_FUNNELED</TD><TD ALIGN="LEFT">  MPI::THREAD_FUNNELED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_THREAD_MULTIPLE</TD><TD ALIGN="LEFT">  MPI::THREAD_MULTIPLE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_THREAD_SERIALIZED</TD><TD ALIGN="LEFT">  MPI::THREAD_SERIALIZED </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_THREAD_SINGLE</TD><TD ALIGN="LEFT">  MPI::THREAD_SINGLE </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> File Operation Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_DISPLACEMENT_CURRENT</TD><TD ALIGN="LEFT">  MPI::DISPLACEMENT_CURRENT </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DISTRIBUTE_BLOCK</TD><TD ALIGN="LEFT">  MPI::DISTRIBUTE_BLOCK </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DISTRIBUTE_CYCLIC</TD><TD ALIGN="LEFT">  MPI::DISTRIBUTE_CYCLIC </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DISTRIBUTE_DFLT_DARG</TD><TD ALIGN="LEFT">  MPI::DISTRIBUTE_DFLT_DARG </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_DISTRIBUTE_NONE</TD><TD ALIGN="LEFT">  MPI::DISTRIBUTE_NONE </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ORDER_C</TD><TD ALIGN="LEFT">  MPI::ORDER_C </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ORDER_FORTRAN</TD><TD ALIGN="LEFT">  MPI::ORDER_FORTRAN </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SEEK_CUR</TD><TD ALIGN="LEFT">  MPI::SEEK_CUR </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SEEK_END</TD><TD ALIGN="LEFT">  MPI::SEEK_END </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_SEEK_SET</TD><TD ALIGN="LEFT">  MPI::SEEK_SET </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> F90 Datatype Matching Constants</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_TYPECLASS_COMPLEX</TD><TD ALIGN="LEFT">  MPI::TYPECLASS_COMPLEX </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_TYPECLASS_INTEGER</TD><TD ALIGN="LEFT">  MPI::TYPECLASS_INTEGER </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_TYPECLASS_REAL</TD><TD ALIGN="LEFT">  MPI::TYPECLASS_REAL </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Handles to Assorted Structures in C and C++ (no  
Fortran)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_File</TD><TD ALIGN="LEFT">  MPI::File </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_Info</TD><TD ALIGN="LEFT">  MPI::Info </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_Win</TD><TD ALIGN="LEFT">  MPI::Win </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> Constants Specifying Empty or Ignored Input</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_ARGVS_NULL</TD><TD ALIGN="LEFT">  MPI::ARGVS_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ARGV_NULL</TD><TD ALIGN="LEFT">  MPI::ARGV_NULL </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_ERRCODES_IGNORE</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_STATUSES_IGNORE</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_STATUS_IGNORE</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT">2c<b> C Constants Specifying Ignored Input (no C++ or  
Fortran)</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_F_STATUSES_IGNORE</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_F_STATUS_IGNORE</TD><TD ALIGN="LEFT"> Not defined for C++ </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
<P> 
  
  
<CENTER>  
<TABLE><TR><TD ALIGN="LEFT"><b> C and C++ preprocessor Constants and Fortran Parameters</b> </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
 MPI_SUBVERSION </TD></TR> 
<TR><TD ALIGN="LEFT">  
 MPI_VERSION </TD></TR> 
<TR><TD ALIGN="LEFT">  
  
</TD></TR></TABLE> 
</CENTER>  
  
   

<P>
<HR>
<A HREF="node368.htm#Node368"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node368.htm#Node368"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node370.htm#Node370"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node368.htm#Node368"> Defined  Values and Handles</a>
<b>Next: </b><A HREF="node370.htm#Node370"> Types</a>
<b>Previous: </b><A HREF="node368.htm#Node368"> Defined  Values and Handles</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
