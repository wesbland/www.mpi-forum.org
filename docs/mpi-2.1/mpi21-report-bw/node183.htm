<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-inquiry/inquiry.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Error Handlers for Communicators</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node183">171. Error Handlers for Communicators</a></H2>
<A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node184.htm#Node184"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<b>Next: </b><A HREF="node184.htm#Node184"> Error Handlers for Windows</a>
<b>Previous: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<P>
  
<TABLE><TR><TD COLSPAN=2>MPI_COMM_CREATE_ERRHANDLER(function, errhandler)</TD></TR>  
<TR><TD> IN function</TD><TD>user defined error handling procedure (function)</TD></TR>  
<TR><TD> OUT errhandler</TD><TD> MPI  error handler (handle)</TD></TR>  
</TABLE>  
<P> 
   
 <tt> int MPI_Comm_create_errhandler(MPI_Comm_errhandler_fn *function, MPI_Errhandler *errhandler) <BR></tt>  
<P> 
 <tt> MPI_COMM_CREATE_ERRHANDLER(FUNCTION, ERRHANDLER, IERROR)<BR>  EXTERNAL FUNCTION <BR>INTEGER ERRHANDLER, IERROR <BR></tt>  
<P> 
  
 <tt> static MPI::Errhandler MPI::Comm::Create_errhandler(MPI::Comm::Errhandler_fn* function) <BR></tt>  
  
<P> 
Creates an error handler that can be attached to communicators.  
This function is identical to  MPI_ERRHANDLER_CREATE,   
  
whose use is deprecated.  
  
<P> 
The user routine should be, in C, a  
function of type  MPI_Comm_errhandler_fn, which is defined as  
<P> 
 <tt> typedef void MPI_Comm_errhandler_fn(MPI_Comm *, int *, ...); <BR></tt>  
The first argument is the communicator in use.  
  
The second is  
the error code to be returned by the  MPI routine that raised the error.  
If the routine would have returned  MPI_ERR_IN_STATUS, it is  
the error code returned in the status for the request that caused the  
error handler to be invoked.  
  
The remaining arguments are ``<tt>stdargs</tt>'' arguments  
whose number and meaning is implementation-dependent.  An implementation  
should clearly document these arguments.  
Addresses are used so that the handler may be written in Fortran.  
  
This typedef replaces  MPI_Handler_function, whose use is  
deprecated.   
  
  
<P> 
In Fortran, the user routine should be of the form:  
<P> 
  
 <tt> SUBROUTINE COMM_ERRHANDLER_FN(COMM, ERROR_CODE, ... ) <BR> INTEGER COMM, ERROR_CODE <BR></tt>  
  
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
Users are discouraged from using a Fortran   
 {COMM<I>|</I>WIN<I>|</I>FILE}_ERRHANDLER_FN   
since the routine expects a variable number of arguments.  Some Fortran systems  
may allow this but some may fail to give the correct result or  
compile/link this code.  Thus, it will not, in general, be possible to  
create portable code with a Fortran   
 {COMM<I>|</I>WIN<I>|</I>FILE}_ERRHANDLER_FN.   
 (<em> End of advice to users.</em>) <BR> 
  
In C++, the user routine should be of the form:  
<P> 
  
 <tt> typedef void MPI::Comm::Errhandler_fn(MPI::Comm &amp;, int *, ... ); <BR></tt>  
  
  
<P> 
 
<BR> 
<em> Rationale.</em>  
<P> 
The variable argument list is provided because it provides an  
ISO-standard  
hook for providing additional information to the error  
handler; without this hook,   
ISO C   
prohibits additional arguments.  
 (<em> End of rationale.</em>) <BR> 
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
A newly  
created communicator inherits the error  
handler that is associated with the ``parent'' communicator.  
In particular, the user can specify a ``global'' error handler for  
all communicators by  
associating this handler with the communicator  MPI_COMM_WORLD  
immediately after initialization.  
 (<em> End of advice to users.</em>) <BR> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_SET_ERRHANDLER(comm, errhandler)</TD></TR>  
<TR><TD> INOUT comm</TD><TD>communicator (handle)</TD></TR>  
<TR><TD> IN errhandler</TD><TD>new error handler for communicator (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Comm_set_errhandler(MPI_Comm comm, MPI_Errhandler errhandler) <BR></tt>  
<P> 
 <tt> MPI_COMM_SET_ERRHANDLER(COMM, ERRHANDLER, IERROR) <BR> INTEGER  COMM, ERRHANDLER, IERROR <BR></tt>  
<P> 
  
 <tt> void MPI::Comm::Set_errhandler(const MPI::Errhandler&amp; errhandler) <BR></tt>  
  
<P> 
Attaches a new error handler to a communicator.  
The error handler must be either a predefined error  
handler, or an error handler created by a call to  
 MPI_COMM_CREATE_ERRHANDLER.  This call is identical to  
 MPI_ERRHANDLER_SET,  
  
whose use is deprecated.  
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_GET_ERRHANDLER(comm, errhandler)</TD></TR>  
<TR><TD> IN comm</TD><TD>communicator  (handle)</TD></TR>  
<TR><TD> OUT errhandler</TD><TD>error handler currently associated with  
communicator (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Comm_get_errhandler(MPI_Comm comm, MPI_Errhandler *errhandler) <BR></tt>  
<P> 
 <tt> MPI_COMM_GET_ERRHANDLER(COMM, ERRHANDLER, IERROR) <BR> INTEGER  COMM, ERRHANDLER, IERROR <BR></tt>  
<P> 
  
 <tt> MPI::Errhandler MPI::Comm::Get_errhandler() const <BR></tt>  
  
<P> 
Retrieves the error handler currently associated with a communicator.  
This call is identical to  MPI_ERRHANDLER_GET,  
  
whose use is deprecated.  
  
  
Example:  
A library function may register at its entry point the current error  
handler for a  
communicator, set its own private error handler for this communicator, and  
restore before exiting the previous error handler.  
  
<P> 

<P>
<HR>
<A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node184.htm#Node184"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<b>Next: </b><A HREF="node184.htm#Node184"> Error Handlers for Windows</a>
<b>Previous: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
