<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Broadcast</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node91">90. Broadcast</a></H1>
<A HREF="node90.htm#Node90"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node92.htm#Node92"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node92.htm#Node92"> Example using  MPI_BCAST</a>
<b>Previous: </b><A HREF="node90.htm#Node90"> Barrier Synchronization</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_BCAST( buffer, count, datatype, root, comm )</TD></TR>  
<TR><TD> INOUT  buffer</TD><TD>starting address of buffer (choice)</TD></TR>  
<TR><TD> IN  count</TD><TD> number of entries in buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN  datatype</TD><TD> data type of buffer (handle)</TD></TR>  
<TR><TD> IN  root</TD><TD> rank of broadcast root (integer)</TD></TR>  
<TR><TD> IN  comm</TD><TD> communicator (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Bcast(void* buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm ) <BR></tt>  
<P> 
 <tt> MPI_BCAST(BUFFER, COUNT, DATATYPE, ROOT, COMM, IERROR) <BR> &lt;type&gt;  BUFFER(*) <BR>INTEGER COUNT, DATATYPE, ROOT, COMM, IERROR <BR></tt>  
  
  
 <tt> void MPI::Comm::Bcast(void* buffer, int count, const MPI::Datatype&amp; datatype, int root) const = 0 <BR></tt>  
  
  
<P> 
If  comm is an intracommunicator,  
 MPI_BCAST broadcasts a message from  
the process with rank  root to all processes  
of the group, itself included.  
It is called by all members of   
the  
group using the same arguments for  
 comm  
and  
 root.  
On return, the   
content of  root's buffer is copied to all other processes.  
  
General, derived datatypes are allowed for  datatype.  
The type signature of  count, datatype on any process must  
be equal to the type signature of  count, datatype at the root.  
This implies that the amount of data sent must be equal to the amount received,  
pairwise between each process and the root.  
 MPI_BCAST and all other data-movement collective routines  
make this restriction.  
Distinct type maps between sender and receiver are still allowed.  
  
The ``in place'' option is not meaningful here.    
<P> 
If  comm is an intercommunicator, then the call involves all   
processes in the intercommunicator, but with one group (group A) defining the  
root process.  All processes in the other group (group B) pass the same value  
in argument   
 root, which is the rank of the root in group A.  The root  
passes the value  MPI_ROOT in  root.  
All other processes in group A pass the value  MPI_PROC_NULL in  
 root.   
Data is broadcast from the root to all processes in group B.  
The  
buffer arguments of the processes in group B must be consistent with  
the buffer argument of the root.  
  
<menu> 
</menu> 

<P>
<HR>
<A HREF="node90.htm#Node90"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node92.htm#Node92"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node92.htm#Node92"> Example using  MPI_BCAST</a>
<b>Previous: </b><A HREF="node90.htm#Node90"> Barrier Synchronization</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
