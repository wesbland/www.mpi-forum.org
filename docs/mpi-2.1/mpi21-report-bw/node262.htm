<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Deleting a File</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node262">246. Deleting a File</a></H2>
<A HREF="node261.htm#Node261"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node259.htm#Node259"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node263.htm#Node263"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node259.htm#Node259"> File Manipulation</a>
<b>Next: </b><A HREF="node263.htm#Node263"> Resizing a File</a>
<b>Previous: </b><A HREF="node261.htm#Node261"> Closing a File</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_DELETE(filename, info)</TD></TR>  
<TR><TD> IN filename</TD><TD>name of file to delete (string)</TD></TR>  
<TR><TD> IN info</TD><TD>info object (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_delete(char *filename, MPI_Info info) <BR></tt>  
 <tt> MPI_FILE_DELETE(FILENAME, INFO, IERROR)<BR> CHARACTER*(*) FILENAME <BR>INTEGER INFO, IERROR <BR></tt>  
 <tt> static void MPI::File::Delete(const char* filename, const MPI::Info&amp; info) <BR></tt>  
<P> 
 MPI_FILE_DELETE deletes the file  
identified by the file name  filename.  
If the file does not exist,  MPI_FILE_DELETE raises an  
error in the class  MPI_ERR_NO_SUCH_FILE.  
<P> 
The  info argument can be used to provide information  
regarding file system specifics  
(see Section <a href="node267.htm#Node267">File Info 
</a>, page <a href="node267.htm#Node267">File Info 
</a>).  
The constant  MPI_INFO_NULL  
refers to the null info, and  
  
can be used when no info needs to be specified.  
<P> 
If a process currently has the file open,  
the behavior of any access to the file  
(as well as the behavior of any outstanding accesses)  
is implementation dependent.  
In addition, whether an open file is deleted or not is also  
implementation dependent.  
If the file is not deleted,  
  
an error in the class  
 MPI_ERR_FILE_IN_USE or  MPI_ERR_ACCESS will be raised.  
Errors are raised   
  
using the default error handler  
  
(see Section <a href="node302.htm#Node302">I/O Error Handling 
</a>, page <a href="node302.htm#Node302">I/O Error Handling 
</a>).  
<P> 

<P>
<HR>
<A HREF="node261.htm#Node261"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node259.htm#Node259"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node263.htm#Node263"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node259.htm#Node259"> File Manipulation</a>
<b>Next: </b><A HREF="node263.htm#Node263"> Resizing a File</a>
<b>Previous: </b><A HREF="node261.htm#Node261"> Closing a File</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
