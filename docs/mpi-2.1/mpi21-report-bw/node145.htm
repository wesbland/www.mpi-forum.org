<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Caching</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node145">140. Caching</a></H1>
<A HREF="node141.htm#Node144"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node146.htm#Node146"> Functionality</a>
<b>Previous: </b><A HREF="node141.htm#Node144"> Example 3:  Building Name Service for Intercommunication</a>
<P>
  
<P> 
 MPI provides a ``caching'' facility that allows an application to  
attach arbitrary pieces of information, called <b> attributes</b>, to  
three kinds of MPI objects, communicators, windows and datatypes.  
More precisely, the caching  
facility allows a portable library to do the following:  
<ul> 
 
<li>pass information between calls by associating it  
  with an  MPI intra- or inter-communicator,   
window or datatype,  
 
<li>quickly retrieve that information, and  
 
<li>be guaranteed that out-of-date information is never retrieved, even if  
 the object is freed and its handle subsequently reused by  MPI.  
</ul> 
<BR> 
The caching capabilities, in some form, are required by built-in  MPI routines  
such as collective communication and application topology.  Defining an  
interface to these capabilities as part of the  MPI standard is valuable  
because it permits routines like collective communication and application  
topologies to be implemented as portable code, and also because it makes  MPI  
more extensible by allowing user-written routines to use standard  MPI calling  
sequences.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
The communicator  MPI_COMM_SELF is a suitable choice for posting  
process-local attributes, via this attributing-caching mechanism.  
 (<em> End of advice to users.</em>) <BR> 
  
  
 
<BR> 
<em> Rationale.</em>  
<P> 
In one extreme   
one  
can allow caching on all opaque handles.  The other  
extreme is to only allow it on communicators.  Caching has a cost  
associated with it and should only be allowed when it is clearly needed and  
the increased cost is modest.    
This is the reason that windows and datatypes were  
added but not other handles.  
 (<em> End of rationale.</em>) <BR> 
One difficulty  
is the potential for size differences between  
Fortran integers and C pointers.  To overcome this problem with  
attribute caching on communicators,   
functions   
are also given for  
this case.  The   
functions   
to cache on datatypes and windows also  
address this issue.  For a general discussion of the address  
size problem, see Section <a href="node357.htm#Node362">Addresses 
</a>.  
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
High-quality implementations should raise an error when a keyval  
that was created by a call to  MPI_XXX_CREATE_KEYVAL is  
used with an object of the wrong type with a call to  
 MPI_YYY_GET_ATTR,  MPI_YYY_SET_ATTR,  MPI_YYY_DELETE_ATTR, or  
 MPI_YYY_FREE_KEYVAL. To do so, it is necessary to maintain, with  
each keyval, information on the type of the associated user  
function.  
 (<em> End of advice to implementors.</em>) <BR> 
  
<menu> 
</menu> 

<P>
<HR>
<A HREF="node141.htm#Node144"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node146.htm#Node146"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node146.htm#Node146"> Functionality</a>
<b>Previous: </b><A HREF="node141.htm#Node144"> Example 3:  Building Name Service for Intercommunication</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
