<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-datatypes/datatypes.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Duplicating a Datatype</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node77">76. Duplicating a Datatype</a></H2>
<A HREF="node76.htm#Node76"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node67.htm#Node67"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node78.htm#Node78"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node67.htm#Node67"> Derived Datatypes</a>
<b>Next: </b><A HREF="node78.htm#Node78"> Use of General Datatypes in Communication</a>
<b>Previous: </b><A HREF="node76.htm#Node76"> Commit and Free</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_TYPE_DUP(type, newtype)</TD></TR>  
<TR><TD> IN type</TD><TD>datatype (handle)</TD></TR>  
<TR><TD> OUT newtype</TD><TD>copy of  type (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Type_dup(MPI_Datatype type, MPI_Datatype *newtype) <BR></tt>  
<P> 
 <tt> MPI_TYPE_DUP(TYPE, NEWTYPE, IERROR)<BR> INTEGER TYPE, NEWTYPE, IERROR <BR></tt>  
<P> 
  
 <tt> MPI::Datatype MPI::Datatype::Dup() const <BR></tt>  
  
<P> 
  
 MPI_TYPE_DUP is   
a type constructor   
which duplicates the existing  type  
with associated key values.    
  
For each key value, the respective copy  
callback function determines the attribute value associated with this  
key in the new communicator; one particular action that a copy  
callback may take is to delete the attribute from the new datatype.  
Returns in  newtype a new datatype with exactly the same  
properties as  type and any copied cached   
information, see Section <a href="node149.htm#Node149">Datatypes 
</a> on page <a href="node149.htm#Node149">Datatypes 
</a>.    
The new datatype has identical  
upper bound and lower bound and yields the same net result when fully  
decoded with the functions in Section <a href="node80.htm#Node80">Decoding a Datatype 
</a>.  
The  
  
 newtype has the same committed state as the old  
 type.  
  
  

<P>
<HR>
<A HREF="node76.htm#Node76"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node67.htm#Node67"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node78.htm#Node78"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node67.htm#Node67"> Derived Datatypes</a>
<b>Next: </b><A HREF="node78.htm#Node78"> Use of General Datatypes in Communication</a>
<b>Previous: </b><A HREF="node76.htm#Node76"> Commit and Free</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
