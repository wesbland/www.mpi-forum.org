<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Group Accessors</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node124">122. Group Accessors</a></H2>
<A HREF="node123.htm#Node123"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node123.htm#Node123"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node125.htm#Node125"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node123.htm#Node123"> Group Management</a>
<b>Next: </b><A HREF="node125.htm#Node125"> Group Constructors</a>
<b>Previous: </b><A HREF="node123.htm#Node123"> Group Management</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_SIZE(group, size)</TD></TR>  
<TR><TD> IN group</TD><TD>  group (handle)</TD></TR>  
<TR><TD> OUT size</TD><TD> number of processes in the group (integer) </TD></TR>  
</TABLE>  
<P> 
   
 <tt> int MPI_Group_size(MPI_Group group, int *size) <BR></tt>  
<P> 
 <tt> MPI_GROUP_SIZE(GROUP, SIZE, IERROR)<BR> INTEGER GROUP, SIZE, IERROR <BR></tt>  
 <tt> int MPI::Group::Get_size() const <BR></tt>  
  
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_RANK(group, rank)</TD></TR>  
<TR><TD> IN group</TD><TD>  group (handle)</TD></TR>  
<TR><TD> OUT rank</TD><TD>  rank of the calling process in  
group, or <BR>  MPI_UNDEFINED if the process is not a  
member (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_rank(MPI_Group group, int *rank) <BR></tt>  
<P> 
 <tt> MPI_GROUP_RANK(GROUP, RANK, IERROR)<BR> INTEGER GROUP, RANK, IERROR <BR></tt>  
 <tt> int MPI::Group::Get_rank() const <BR></tt>  
  
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_TRANSLATE_RANKS (group1, n, ranks1, group2, ranks2)</TD></TR>  
<TR><TD> IN group1</TD><TD> group1  (handle) </TD></TR>  
<TR><TD> IN n</TD><TD> number of ranks in   ranks1 and  
 ranks2 arrays (integer)</TD></TR>  
<TR><TD> IN ranks1</TD><TD> array of zero or more valid ranks in group1 </TD></TR>  
<TR><TD> IN group2</TD><TD>  group2 (handle)</TD></TR>  
<TR><TD> OUT ranks2</TD><TD> array of corresponding ranks in group2,  
 MPI_UNDEFINED   
when no correspondence exists.</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_translate_ranks (MPI_Group group1, int n, int *ranks1, MPI_Group group2, int *ranks2) <BR></tt>  
<P> 
 <tt> MPI_GROUP_TRANSLATE_RANKS(GROUP1, N, RANKS1, GROUP2, RANKS2, IERROR)<BR> INTEGER GROUP1, N, RANKS1(*), GROUP2, RANKS2(*), IERROR <BR></tt>  
 <tt> static void MPI::Group::Translate_ranks (const MPI::Group&amp; group1, int n, const int ranks1[], const MPI::Group&amp; group2, int ranks2[]) <BR></tt>  
  
This function is important for determining the relative numbering of the  
same processes in two different groups.  For instance, if one knows the  
ranks of certain processes in the group of  MPI_COMM_WORLD, one might want  
to know their ranks in a subset of that group.  
<P> 
 MPI_PROC_NULL is a valid rank for input to  
 MPI_GROUP_TRANSLATE_RANKS, which returns  
 MPI_PROC_NULL as the translated rank.  
   
<TABLE><TR><TD COLSPAN=2>MPI_GROUP_COMPARE(group1, group2, result)</TD></TR>  
<TR><TD> IN group1</TD><TD> first group (handle)</TD></TR>  
<TR><TD> IN group2</TD><TD> second group (handle)</TD></TR>  
<TR><TD> OUT result</TD><TD> result (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Group_compare(MPI_Group group1,MPI_Group group2, int *result) <BR></tt>  
<P> 
 <tt> MPI_GROUP_COMPARE(GROUP1, GROUP2, RESULT, IERROR)<BR> INTEGER GROUP1, GROUP2, RESULT, IERROR <BR></tt>  
 <tt> static int MPI::Group::Compare(const MPI::Group&amp; group1, const MPI::Group&amp; group2) <BR></tt>  
  
 MPI_IDENT results if the group members and group order is  
exactly the same in both groups.  This happens for instance if  
 group1 and  group2 are the same handle.  
 MPI_SIMILAR results if the group members are the same but the order is  
different.  MPI_UNEQUAL results otherwise.  
<P> 

<P>
<HR>
<A HREF="node123.htm#Node123"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node123.htm#Node123"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node125.htm#Node125"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node123.htm#Node123"> Group Management</a>
<b>Next: </b><A HREF="node125.htm#Node125"> Group Constructors</a>
<b>Previous: </b><A HREF="node123.htm#Node123"> Group Management</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
