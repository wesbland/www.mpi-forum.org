<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Specifics for Intracommunicator Collective Operations</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node87">86. Specifics for Intracommunicator Collective Operations</a></H2>
<A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node88.htm#Node88"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node86.htm#Node86"> Communicator Argument</a>
<b>Next: </b><A HREF="node88.htm#Node88"> Applying Collective Operations to Intercommunicators</a>
<b>Previous: </b><A HREF="node86.htm#Node86"> Communicator Argument</a>
<P>
All processes in the group identified by the intracommunicator must call  
the collective routine with matching arguments.  
  
In many cases,  
collective communication can occur ``in place''   
for intracommunicators,  
with the output  
buffer being identical to the input buffer.  This is specified by  
providing a special argument value,  MPI_IN_PLACE, instead of the  
send buffer or the receive buffer argument,  
depending on the operation performed.  
  
 
<BR> 
<em> Rationale.</em>  
<P> 
The ``in place'' operations are provided to reduce unnecessary memory motion by  
both the  MPI implementation and by the user.  Note that while the simple check  
of testing whether the send and receive buffers have the same address will  
work for some cases (e.g.,  MPI_ALLREDUCE), they are inadequate in  
others (e.g.,  MPI_GATHER, with root not equal to zero).  Further,  
Fortran explicitly prohibits aliasing of arguments; the approach of using a  
special value to denote ``in place'' operation eliminates that difficulty.  
 (<em> End of rationale.</em>) <BR> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
By allowing the ``in place'' option, the receive buffer in many of the  
collective calls becomes a send-and-receive buffer.  For this reason, a  
Fortran binding that includes <tt>INTENT</tt> must mark these as <tt>INOUT</tt>,  
not <tt>OUT</tt>.  
<P> 
Note that  MPI_IN_PLACE is a special kind of value; it has the  
same   
restrictions on its use that  MPI_BOTTOM has.  
<P> 
Some intracommunicator collective operations do not support the ``in place''  
option (e.g.,  MPI_ALLTOALLV).  
 (<em> End of advice to users.</em>) <BR> 
  

<P>
<HR>
<A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node86.htm#Node86"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node88.htm#Node88"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node86.htm#Node86"> Communicator Argument</a>
<b>Next: </b><A HREF="node88.htm#Node88"> Applying Collective Operations to Intercommunicators</a>
<b>Previous: </b><A HREF="node86.htm#Node86"> Communicator Argument</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
