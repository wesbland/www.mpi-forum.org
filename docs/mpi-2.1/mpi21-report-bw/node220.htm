<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-dynamic/dynamic-2.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>MPI_APPNUM</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node220">204. MPI_APPNUM</a></H2>
<A HREF="node219.htm#Node219"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node217.htm#Node217"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node221.htm#Node221"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node217.htm#Node217"> Other Functionality</a>
<b>Next: </b><A HREF="node221.htm#Node221"> Releasing Connections</a>
<b>Previous: </b><A HREF="node219.htm#Node219"> Singleton  MPI_INIT</a>
<P>
There is a predefined attribute  MPI_APPNUM  
of  MPI_COMM_WORLD. In Fortran, the attribute  
is an integer value. In C, the attribute is a  
pointer to an integer value.   
If a process was spawned  
with  MPI_COMM_SPAWN_MULTIPLE,  
 MPI_APPNUM is the command number that generated  
the current process. Numbering starts from zero.   
If a process was spawned with  MPI_COMM_SPAWN,  
it will have  MPI_APPNUM  
equal to zero.   
<P> 
Additionally, if the process was not started by a spawn call,   
but by an implementation-specific startup mechanism that can  
handle multiple process specifications,  MPI_APPNUM should  
be set to the number of the corresponding process specification.  
In particular, if it is started with  
<BR> 
<pre><tt>    mpiexec spec0 [: spec1 : spec2 : ...] 
</tt></pre> 
 MPI_APPNUM should be set to the number of the corresponding  
specification.   
<P> 
If an application was not spawned with  MPI_COMM_SPAWN or  
 MPI_COMM_SPAWN_MULTIPLE, and  MPI_APPNUM doesn't   
make sense in the context of the implementation-specific  
startup mechanism,  MPI_APPNUM is not set.   
<P> 
 MPI implementations may optionally provide a mechanism to   
override the value of  MPI_APPNUM through the  
 info argument.  MPI reserves the following key  
for all  SPAWN calls.  
<P> 
<ul> 
 
<li>[ appnum] Value contains an integer that overrides  
the default value for  MPI_APPNUM in the child.  
</ul> 
<BR> 
 
<BR> 
<em> Rationale.</em>  
<P> 
When a single application is started, it is able to figure  
out how many processes there are by looking at the  
size of  MPI_COMM_WORLD.  An application  
consisting of multiple SPMD sub-applications has no   
way to find out how many sub-applications there are  
and to which sub-application the process belongs. While there  
are ways to figure it out in special cases, there  
is no general mechanism.  MPI_APPNUM provides  
such a general mechanism.   
 (<em> End of rationale.</em>) <BR> 

<P>
<HR>
<A HREF="node219.htm#Node219"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node217.htm#Node217"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node221.htm#Node221"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node217.htm#Node217"> Other Functionality</a>
<b>Next: </b><A HREF="node221.htm#Node221"> Releasing Connections</a>
<b>Previous: </b><A HREF="node219.htm#Node219"> Singleton  MPI_INIT</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
