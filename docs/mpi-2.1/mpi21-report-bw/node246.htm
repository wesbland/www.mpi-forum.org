<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-one-side/one-side-2.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Registers and Compiler Optimizations</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node246">230. Registers and Compiler Optimizations</a></H2>
<A HREF="node245.htm#Node245"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node243.htm#Node243"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node247.htm#Node247"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node243.htm#Node243"> Semantics and Correctness</a>
<b>Next: </b><A HREF="node247.htm#Node247"> External Interfaces</a>
<b>Previous: </b><A HREF="node245.htm#Node245"> Progress</a>
<P>
 
<BR> 
<em> Advice to users.</em>  
<P> 
All the material in this section is an advice to users.  
 (<em> End of advice to users.</em>) <BR> 
A coherence problem exists between variables kept in registers  
and the memory value of these variables.  An  RMA call may access a  
variable in memory (or cache), while the up-to-date value of this  
variable is in register.  A get will not return the latest variable  
value, and a put may be overwritten when the register is stored back  
in memory.  
<P> 
The problem is illustrated by the following code:  
<P> 
<tt>  
<P><IMG WIDTH=297 HEIGHT=26 SRC="img105.gif"><P>
</tt>  
<P> 
In this example, variable <tt> buff</tt> is allocated in the register <tt>  
reg_A</tt> and therefore  
<tt> ccc</tt> will have the old value of <tt> buff</tt> and not the new value  
<tt> 777</tt>.  
<P> 
This problem, which also afflicts in some cases  
send/receive communication, is discussed more at length in   
Section <a href="node337.htm#Node342">A Problem with Register Optimization 
</a>.  
<P> 
 MPI implementations will avoid this problem for standard conforming C  
programs. Many Fortran compilers will avoid this  
problem, without disabling compiler optimizations.  
However, in order to avoid register coherence problems in a completely  
portable manner, users should  restrict  
their use of  RMA windows to variables stored in <tt> COMMON</tt>  
blocks,  
or to variables that were declared   
<tt> VOLATILE</tt> (while <tt> VOLATILE</tt> is not a standard  
Fortran declaration, it is supported by many Fortran   
compilers). Details and an  
additional solution are discussed in  
Section <a href="node337.htm#Node342">A Problem with Register Optimization 
</a>, ``A Problem with Register  
Optimization,''  
on page <a href="node337.htm#Node342">A Problem with Register Optimization 
</a>.  See also, ``Problems Due to Data  
Copying and Sequence Association,'' on page <a href="node337.htm#Node339">Problems Due to Data Copying and Sequence Association 
</a>,  
for additional Fortran problems.  
<P> 
  
  
  
<P> 
  
<P> 
  
  

<P>
<HR>
<A HREF="node245.htm#Node245"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node243.htm#Node243"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node247.htm#Node247"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node243.htm#Node243"> Semantics and Correctness</a>
<b>Next: </b><A HREF="node247.htm#Node247"> External Interfaces</a>
<b>Previous: </b><A HREF="node245.htm#Node245"> Progress</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
