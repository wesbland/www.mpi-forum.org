<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Resizing a File</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node263">247. Resizing a File</a></H2>
<A HREF="node262.htm#Node262"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node259.htm#Node259"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node259.htm#Node259"> File Manipulation</a>
<b>Next: </b><A HREF="node264.htm#Node264"> Preallocating Space for a File</a>
<b>Previous: </b><A HREF="node262.htm#Node262"> Deleting a File</a>
<P>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_SET_SIZE(fh, size)</TD></TR>  
<TR><TD> INOUT fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD> IN size</TD><TD>size to truncate or expand file (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_File_set_size(MPI_File fh, MPI_Offset size) <BR></tt>  
 <tt> MPI_FILE_SET_SIZE(FH, SIZE, IERROR)<BR> INTEGER FH, IERROR <BR>INTEGER(KIND=MPI_OFFSET_KIND) SIZE <BR></tt>  
 <tt> void MPI::File::Set_size(MPI::Offset size) <BR></tt>  
<P> 
 MPI_FILE_SET_SIZE resizes the file  
associated with the file handle  fh.  
 size is measured in bytes from the beginning of the file.  
  
 MPI_FILE_SET_SIZE is collective;  
all processes in the group must pass identical values for  size.  
<P> 
  
  
If  size is smaller than the current file size,  
the file is truncated at the position defined by  size.  
The implementation is free to deallocate file blocks located  
beyond this position.  
<P> 
If  size is larger than the current file size,  
the file size becomes  size.  
Regions of the file that have been previously written are unaffected.  
  
The values of data in the new regions in the file (those  
locations with displacements between old file size and  size)  
are undefined.  
  
  
It is implementation dependent whether the  MPI_FILE_SET_SIZE routine  
allocates file space---use  MPI_FILE_PREALLOCATE  
to force file space to be reserved.  
<P> 
 MPI_FILE_SET_SIZE does not affect the individual file pointers  
or the shared file pointer.  
If  MPI_MODE_SEQUENTIAL mode was specified when the file was opened,  
it is erroneous to call this routine.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
It is possible for the file pointers to point beyond the end of file  
after a  MPI_FILE_SET_SIZE operation truncates a file.  
This is legal, and equivalent to seeking beyond the current end of file.  
 (<em> End of advice to users.</em>) <BR> 
All nonblocking requests  
and split collective operations  
on  fh must be completed  
before calling  MPI_FILE_SET_SIZE.  
Otherwise, calling  MPI_FILE_SET_SIZE is erroneous.  
As far as consistency semantics are concerned,  
 MPI_FILE_SET_SIZE is a write operation  
that conflicts with operations that access bytes  
at displacements between the old and new file sizes  
(see Section <a href="node291.htm#Node291">File Consistency 
</a>,  
page <a href="node291.htm#Node291">File Consistency 
</a>).  
  
<P> 

<P>
<HR>
<A HREF="node262.htm#Node262"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node259.htm#Node259"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node264.htm#Node264"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node259.htm#Node259"> File Manipulation</a>
<b>Next: </b><A HREF="node264.htm#Node264"> Preallocating Space for a File</a>
<b>Previous: </b><A HREF="node262.htm#Node262"> Deleting a File</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
