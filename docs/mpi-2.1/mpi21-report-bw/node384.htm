<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-CNames.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>One-Sided Communications C Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node384">338. One-Sided Communications C Bindings</a></H2>
<A HREF="node383.htm#Node383"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node375.htm#Node375"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node385.htm#Node385"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node375.htm#Node375"> C Bindings</a>
<b>Next: </b><A HREF="node385.htm#Node385"> External Interfaces C Bindings</a>
<b>Previous: </b><A HREF="node383.htm#Node383"> Process Creation and Management C Bindings</a>
<P>
 <tt> int MPI_Accumulate(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype,  MPI_Op op, MPI_Win win) <BR></tt>  
 <tt> int MPI_Get(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win) <BR></tt>  
 <tt> int MPI_Put(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_complete(MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_create(void *base, MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win) <BR></tt>  
 <tt> int MPI_Win_fence(int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_free(MPI_Win *win) <BR></tt>  
 <tt> int MPI_Win_get_group(MPI_Win win, MPI_Group *group) <BR></tt>  
 <tt> int MPI_Win_lock(int lock_type, int rank, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_post(MPI_Group group, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_start(MPI_Group group, int assert, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_test(MPI_Win win, int *flag) <BR></tt>  
 <tt> int MPI_Win_unlock(int rank, MPI_Win win) <BR></tt>  
 <tt> int MPI_Win_wait(MPI_Win win) <BR></tt>  
<P> 

<P>
<HR>
<A HREF="node383.htm#Node383"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node375.htm#Node375"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node385.htm#Node385"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node375.htm#Node375"> C Bindings</a>
<b>Next: </b><A HREF="node385.htm#Node385"> External Interfaces C Bindings</a>
<b>Previous: </b><A HREF="node383.htm#Node383"> Process Creation and Management C Bindings</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
