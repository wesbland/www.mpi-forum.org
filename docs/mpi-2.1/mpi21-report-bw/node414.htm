<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-CppNames.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>One-Sided Communications C++ Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node414">368. One-Sided Communications C++ Bindings</a></H2>
<A HREF="node413.htm#Node413"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node405.htm#Node405"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node415.htm#Node415"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node405.htm#Node405"> C++ Bindings</a>
<b>Next: </b><A HREF="node415.htm#Node415"> External Interfaces C++ Bindings</a>
<b>Previous: </b><A HREF="node413.htm#Node413"> Process Creation and Management C++ Bindings</a>
<P>
<BR> 
<pre><tt>namespace MPI { 
</tt></pre> 
 <tt> void Win::Accumulate(const void* origin_addr, int origin_count, const Datatype&amp; origin_datatype, int target_rank, Aint target_disp, int target_count, const Datatype&amp; target_datatype, const Op&amp; op) const <BR></tt>  
 <tt> void Win::Complete() const <BR></tt>  
 <tt> static Win Win::Create(const void* base, Aint size, int disp_unit, const Info&amp; info, const Intracomm&amp; comm) <BR></tt>  
 <tt> void Win::Fence(int assert) const <BR></tt>  
 <tt> void Win::Free() <BR></tt>  
 <tt> void Win::Get(void *origin_addr, int origin_count, const Datatype&amp; origin_datatype, int target_rank, Aint target_disp, int target_count, const Datatype&amp; target_datatype) const <BR></tt>  
 <tt> Group Win::Get_group() const <BR></tt>  
 <tt> void Win::Lock(int lock_type, int rank, int assert) const <BR></tt>  
 <tt> void Win::Post(const Group&amp; group, int assert) const <BR></tt>  
 <tt> void Win::Put(const void* origin_addr, int origin_count, const Datatype&amp; origin_datatype, int  target_rank, Aint target_disp, int target_count, const  Datatype&amp; target_datatype) const <BR></tt>  
 <tt> void Win::Start(const Group&amp; group, int assert) const <BR></tt>  
 <tt> bool Win::Test() const <BR></tt>  
 <tt> void Win::Unlock(int rank) const <BR></tt>  
 <tt> void Win::Wait() const <BR></tt>  
<BR> 
<pre><tt>}; 
</tt></pre> 

<P>
<HR>
<A HREF="node413.htm#Node413"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node405.htm#Node405"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node415.htm#Node415"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node405.htm#Node405"> C++ Bindings</a>
<b>Next: </b><A HREF="node415.htm#Node415"> External Interfaces C++ Bindings</a>
<b>Previous: </b><A HREF="node413.htm#Node413"> Process Creation and Management C++ Bindings</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
