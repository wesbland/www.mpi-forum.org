<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Groups</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node119">117. Groups</a></H2>
<A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node120.htm#Node120"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node118.htm#Node118"> Basic Concepts</a>
<b>Next: </b><A HREF="node120.htm#Node120"> Contexts</a>
<b>Previous: </b><A HREF="node118.htm#Node118"> Basic Concepts</a>
<P>
A <b> group</b> is an ordered set of process identifiers (henceforth  
processes); processes are implementation-dependent objects.  Each  
process in a group is associated with an integer <b> rank</b>.  Ranks are  
contiguous and start from zero.  
Groups are represented by opaque <b> group objects</b>, and hence cannot  
be directly transferred from one process to another.   A group is used  
within a communicator to describe the participants in a communication  
``universe'' and to rank such participants (thus giving them unique names  
within that ``universe'' of communication).  
<P> 
There is a special pre-defined group:  MPI_GROUP_EMPTY, which is  
a group with no members.  
The predefined constant  
 MPI_GROUP_NULL is the value used for invalid group handles.  
<P> 
 
<BR> 
<em> Advice to users.</em>  
<P> 
 MPI_GROUP_EMPTY, which is a valid handle to an empty group,  
should not be confused with  MPI_GROUP_NULL, which in turn is  
an invalid handle.  The former may be used as an argument to group  
operations; the latter, which is returned when a group is freed,   
is   
not a valid argument.  
 (<em> End of advice to users.</em>) <BR> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
A group may be represented by a virtual-to-real process-address-translation  
table.  Each communicator object (see below) would have a pointer to such a  
table.  
<P> 
Simple implementations of  MPI will enumerate groups, such as in a  
table.  However, more advanced data structures make sense in order  
to improve scalability and memory usage with large numbers of processes.  
Such implementations are possible with  MPI.  
 (<em> End of advice to implementors.</em>) <BR> 

<P>
<HR>
<A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node118.htm#Node118"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node120.htm#Node120"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node118.htm#Node118"> Basic Concepts</a>
<b>Next: </b><A HREF="node120.htm#Node120"> Contexts</a>
<b>Previous: </b><A HREF="node118.htm#Node118"> Basic Concepts</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
