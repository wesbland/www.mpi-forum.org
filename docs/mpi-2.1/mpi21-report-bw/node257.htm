<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Introduction</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H1><A NAME="Node257">241. Introduction</a></H1>
<A HREF="node256.htm#Node256"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node258.htm#Node258"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node258.htm#Node258"> Definitions</a>
<b>Previous: </b><A HREF="node256.htm#Node256"> I/O</a>
<P>
  
<P> 
  
POSIX provides a model of a widely portable file system,  
but the portability and optimization needed for parallel I/O  
cannot be achieved with  
  
the POSIX interface.  
  
<P> 
The significant optimizations required for efficiency  
(e.g., grouping [<a href="node427.htm#-Bib35">35</a>],  
collective buffering  
[<a href="node427.htm#-Bib6">6</a>,<a href="node427.htm#-Bib13">13</a>,<a href="node427.htm#-Bib36">36</a>,<a href="node427.htm#-Bib39">39</a>,<a href="node427.htm#-Bib46">46</a>],  
and disk-directed I/O [<a href="node427.htm#-Bib31">31</a>])  
can only be implemented  
  
if the parallel I/O system provides a high-level interface supporting  
partitioning of file data among processes  
and a collective interface  
supporting  
  
complete transfers of global data structures between process  
memories and files.  
In addition, further efficiencies can be gained via support  
for asynchronous I/O, strided accesses,  
and control over physical file layout on storage devices (disks).  
The I/O environment described in this chapter provides these facilities.  
<P> 
  
Instead of defining  
I/O  
access modes to express the common patterns  
for accessing a shared file (broadcast, reduction, scatter, gather),  
we chose another approach  
in which data partitioning is expressed using  
derived datatypes.  
  
Compared to a limited set of predefined access patterns,   
this approach has the advantage of added flexibility and expressiveness.  
<P> 
<menu> 
</menu> 

<P>
<HR>
<A HREF="node256.htm#Node256"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="mpi21-report-bw.htm#Node0"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node258.htm#Node258"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="mpi21-report-bw.htm#Node0">Contents</a>
<b>Next: </b><A HREF="node258.htm#Node258"> Definitions</a>
<b>Previous: </b><A HREF="node256.htm#Node256"> I/O</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
