<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Functionality</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node146">141. Functionality</a></H2>
<A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node147.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node145.htm#Node145"> Caching</a>
<b>Next: </b><A HREF="node147.htm#Node147"> Communicators</a>
<b>Previous: </b><A HREF="node145.htm#Node145"> Caching</a>
<P>
  
<P> 
Attributes   
can be  
attached to communicators,  
windows, and datatypes.   
Attributes are local to the process and specific to the communicator  
to which they are attached.  Attributes are not propagated by  MPI from one  
communicator to another except when the communicator is duplicated  
using  MPI_COMM_DUP (and even then the application must give  
specific permission through  
callback functions for the attribute to be copied).  
<P> 
  
 
<BR> 
<em> Advice to users.</em>  
<P> 
Attributes in C are of type  void *.  Typically, such an attribute  
will be a pointer to a structure that contains further information, or  
a handle to an  MPI object.  
In Fortran, attributes are of type  INTEGER.  Such attribute  
can be a handle to an  MPI object, or just an integer-valued  
attribute.  
 (<em> End of advice to users.</em>) <BR> 
  
<P> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
Attributes are scalar values, equal in size to, or larger than a C-language  
pointer.  Attributes can always hold an  MPI handle.  
 (<em> End of advice to implementors.</em>) <BR> 
The caching interface defined here   
requires  
that attributes be  
stored by  MPI opaquely within a communicator,  
window, and datatype.   
Accessor functions include the following:  
<ul> 
 
<li>obtain a key value (used to identify an attribute); the user  
 specifies ``callback'' functions by which  MPI informs the application  
 when the communicator is destroyed or  
 copied.  
 
<li>store and retrieve the value of an attribute;  
</ul> 
<BR> 
 
<BR> 
<em> Advice  
        to implementors.</em>  
<P> 
Caching and callback functions are only called synchronously,  
in response to explicit application requests.  This avoid problems  
that result from repeated crossings between user and system space.  
(This synchronous calling rule is a general property of  MPI.)  
<P> 
The choice of key values is under control of  MPI.  This allows  MPI to optimize  
its implementation of attribute sets.  It also avoids conflict between  
independent modules caching information on the same communicators.  
<P> 
A much smaller interface, consisting of just a callback facility, would allow  
the entire caching facility to be implemented by portable code.  However, with  
the minimal callback interface, some form of table searching is implied by the  
need to handle arbitrary communicators.  In contrast, the more complete  
interface defined here permits rapid access to attributes through the use of  
pointers in communicators (to find the attribute table) and cleverly chosen  
key values (to retrieve individual attributes).  In light of the efficiency  
``hit'' inherent in the minimal interface, the more complete interface defined  
here is seen to be superior.  
 (<em> End of advice to implementors.</em>) <BR> 
  MPI provides the following services related to caching.  They are  
all process local.  
  
<P> 

<P>
<HR>
<A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node145.htm#Node145"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node147.htm#Node147"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node145.htm#Node145"> Caching</a>
<b>Next: </b><A HREF="node147.htm#Node147"> Communicators</a>
<b>Previous: </b><A HREF="node145.htm#Node145"> Caching</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
