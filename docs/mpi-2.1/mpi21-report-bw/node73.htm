<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-datatypes/datatypes.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Lower-Bound and Upper-Bound Markers</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node73">72. Lower-Bound and Upper-Bound Markers</a></H2>
<A HREF="node72.htm#Node72"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node67.htm#Node67"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node74.htm#Node74"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node67.htm#Node67"> Derived Datatypes</a>
<b>Next: </b><A HREF="node74.htm#Node74"> Extent and Bounds of Datatypes</a>
<b>Previous: </b><A HREF="node72.htm#Node72"> Address and Size Functions</a>
<P>
  
<P> 
It is often convenient to define explicitly the lower bound and upper  
bound of a type map, and override the definition given   
on page <a href="node73.htm#Node73">Lower-Bound and Upper-Bound Markers 
</a>.  
This allows one to define a datatype that  
has ``holes'' at its beginning or its end, or a datatype with  
entries that extend above the upper bound or below the lower bound.  
Examples of  
such usage are provided in Section <a href="node81.htm#Node81">Examples 
</a>.  
  
Also, the user may want to overide the alignment rules that are  
used to compute upper bounds and extents.  E.g., a C compiler may allow  
the user to overide default alignment rules for some of the  
structures within  
a program.  The user has to specify explicitly the bounds of the datatypes  
that match these structures.  
  
<P> 
To achieve this, we add  
two additional ``pseudo-datatypes,''  MPI_LB and  MPI_UB,  
that can be used, respectively, to mark the lower bound or the upper  
bound of a datatype.  These pseudo-datatypes occupy no space  
(<I>extent(typeMPI_LB) = extent(typeMPI_UB) =0</I>). They do not  
affect the size or count of a datatype, and do not affect the  
 content of a message created with this datatype.  However, they do  
affect the definition of the  
extent of a datatype and, therefore, affect the outcome of a replication of  
this datatype by a datatype constructor.  
<P> 
<BR><b> Example</b>   
  
  
  
  
Let  D = (-3, 0, 6);  T = (MPI_LB, MPI_INT, MPI_UB),  
and  B = (1, 1, 1).  Then a call to  
 MPI_TYPE_STRUCT(3, B, D, T, type1)  
creates a new datatype that has an  
extent of 9 (from -3 to 5, 5 included), and contains an integer at  
displacement 0.   This is the datatype defined by the sequence  
 {(lb, -3), (int, 0), (ub, 6)} .  
If this type is replicated twice by a call to  
 MPI_TYPE_CONTIGUOUS(2, type1, type2) then the newly created  
type can  
be described by the sequence  
 {(lb, -3), (int, 0), (int,9), (ub, 15)} .  
  
(An entry of type  
 ub  
can be deleted if there is another entry of type  ub with a higher  
displacement; an entry of type  lb can be deleted if there is another  
entry of type  lb with a lower displacement.)  
    
<P> 
In general, if  
<I> 
Typemap = { (type<SUB>0</SUB> , disp<SUB>0</SUB> ) , ... , (type<SUB>n-1</SUB> , disp<SUB>n-1</SUB>) } , 
</I>  
then the <b> lower bound</b> of <I>Typemap</I> is defined to be  
<P><IMG WIDTH=389 HEIGHT=29 SRC="img33.gif"><P>
  
<P> 
Similarly,  
the <b> upper bound</b> of <I>Typemap</I> is defined to be  
  
<P><IMG WIDTH=400 HEIGHT=29 SRC="img34.gif"><P>
  
<P> 
Then  
  
<p><I> 
extent(Typemap) = ub(Typemap) - lb(Typemap) 
</I><p>  
  
If <I>type<SUB>i</SUB></I> requires alignment to a byte address that is a multiple of <I>k<SUB>i</SUB></I>,  
then <IMG WIDTH=4 HEIGHT=5 SRC="img35.gif">
 is the least nonnegative increment needed to round  
<I>extent(Typemap)</I> to the next multiple of <IMG WIDTH=34 HEIGHT=8 SRC="img36.gif">
.  
<P> 
The formal definitions given for the various datatype constructors  
apply now, with the amended definition of <b> extent</b>.  
  
<P> 

<P>
<HR>
<A HREF="node72.htm#Node72"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node67.htm#Node67"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node74.htm#Node74"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node67.htm#Node67"> Derived Datatypes</a>
<b>Next: </b><A HREF="node74.htm#Node74"> Extent and Bounds of Datatypes</a>
<b>Previous: </b><A HREF="node72.htm#Node72"> Address and Size Functions</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
