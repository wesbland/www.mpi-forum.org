<HTML>
<HEAD>
<!-- This file was generated by tohtml from appLang-CNames.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Datatypes C Bindings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node377">331. Datatypes C Bindings</a></H2>
<A HREF="node376.htm#Node376"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node375.htm#Node375"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node378.htm#Node378"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node375.htm#Node375"> C Bindings</a>
<b>Next: </b><A HREF="node378.htm#Node378"> Collective Communication C Bindings</a>
<b>Previous: </b><A HREF="node376.htm#Node376"> Point-to-Point Communication C Bindings</a>
<P>
 <tt> int MPI_Get_address(void *location, MPI_Aint *address) <BR></tt>  
 <tt> int MPI_Get_elements(MPI_Status *status, MPI_Datatype datatype, int *count) <BR></tt>  
 <tt> int MPI_Pack(void* inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outsize, int *position,  MPI_Comm comm) <BR></tt>  
 <tt> int MPI_Pack_external(char *datarep, void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, MPI_Aint outsize, MPI_Aint *position) <BR></tt>   
 <tt> int MPI_Pack_external_size(char *datarep, int incount, MPI_Datatype datatype, MPI_Aint *size) <BR></tt>   
 <tt> int MPI_Pack_size(int incount, MPI_Datatype datatype, MPI_Comm comm, int *size) <BR></tt>  
 <tt> int MPI_Type_commit(MPI_Datatype *datatype) <BR></tt>  
 <tt> int MPI_Type_contiguous(int count, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_darray(int size, int rank, int ndims, int array_of_gsizes[], int array_of_distribs[], int array_of_dargs[], int array_of_psizes[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_hindexed(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_hvector(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_indexed_block(int count, int blocklength, int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_resized(MPI_Datatype oldtype, MPI_Aint lb, MPI_Aint extent, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_struct(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_create_subarray(int ndims, int array_of_sizes[], int array_of_subsizes[], int array_of_starts[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_dup(MPI_Datatype type, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_free(MPI_Datatype *datatype) <BR></tt>  
 <tt> int MPI_Type_get_contents(MPI_Datatype datatype, int max_integers, int max_addresses, int max_datatypes, int array_of_integers[], MPI_Aint array_of_addresses[], MPI_Datatype array_of_datatypes[]) <BR></tt>  
 <tt> int MPI_Type_get_envelope(MPI_Datatype datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner) <BR></tt>  
 <tt> int MPI_Type_get_extent(MPI_Datatype datatype, MPI_Aint *lb, MPI_Aint *extent) <BR></tt>  
 <tt> int MPI_Type_get_true_extent(MPI_Datatype datatype, MPI_Aint *true_lb, MPI_Aint *true_extent) <BR></tt>  
 <tt> int MPI_Type_indexed(int count, int *array_of_blocklengths, int *array_of_displacements, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Type_size(MPI_Datatype datatype, int *size) <BR></tt>  
 <tt> int MPI_Type_vector(int count, int blocklength, int stride, MPI_Datatype oldtype, MPI_Datatype *newtype) <BR></tt>  
 <tt> int MPI_Unpack(void* inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm) <BR></tt>  
 <tt> int MPI_Unpack_external(char *datarep, void *inbuf, MPI_Aint insize, MPI_Aint *position, void *outbuf, int outcount, MPI_Datatype datatype) <BR></tt>   
<P> 

<P>
<HR>
<A HREF="node376.htm#Node376"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node375.htm#Node375"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node378.htm#Node378"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node375.htm#Node375"> C Bindings</a>
<b>Next: </b><A HREF="node378.htm#Node378"> Collective Communication C Bindings</a>
<b>Previous: </b><A HREF="node376.htm#Node376"> Point-to-Point Communication C Bindings</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
