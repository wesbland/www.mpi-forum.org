<HTML>
<HEAD>
<!-- This file was generated by tohtml from chap-inquiry/inquiry.tex -->
<!-- with the command
tohtml -default -basedef ../mpi2defs-bw.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi2-forum-tail.htm -Wnoredef -o mpi21-report-bw.tex mpi-report.tex 
-->
<TITLE>Freeing Errorhandlers and Retrieving Error Strings</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<HR><H2><A NAME="Node186">174. Freeing Errorhandlers and Retrieving Error Strings</a></H2>
<A HREF="node185.htm#Node185"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node187.htm#Node187"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<b>Next: </b><A HREF="node187.htm#Node187"> Error Codes and Classes</a>
<b>Previous: </b><A HREF="node185.htm#Node185"> Error Handlers for Files</a>
<P>
  
  
<TABLE><TR><TD COLSPAN=2>MPI_ERRHANDLER_FREE( errhandler )</TD></TR>  
<TR><TD> INOUT errhandler</TD><TD>MPI error handler (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Errhandler_free(MPI_Errhandler *errhandler) <BR></tt>  
<P> 
 <tt> MPI_ERRHANDLER_FREE(ERRHANDLER, IERROR)<BR> INTEGER ERRHANDLER, IERROR <BR></tt>  
 <tt> void MPI::Errhandler::Free() <BR></tt>  
Marks the error handler associated with  errhandler for  
deallocation and sets  errhandler to  
 MPI_ERRHANDLER_NULL.  
The error handler will be deallocated after  
all   
the objects  
associated with it   
(communicator, window, or file)  
have been deallocated.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ERROR_STRING( errorcode, string, resultlen )</TD></TR>  
<TR><TD> IN errorcode</TD><TD>Error code returned by an  MPI routine</TD></TR>  
<TR><TD> OUT string</TD><TD>Text that corresponds to the  errorcode</TD></TR>  
<TR><TD> OUT resultlen</TD><TD>Length (in printable characters) of the  
result returned in  string</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Error_string(int errorcode, char *string, int *resultlen) <BR></tt>  
<P> 
 <tt> MPI_ERROR_STRING(ERRORCODE, STRING, RESULTLEN, IERROR)<BR> INTEGER ERRORCODE, RESULTLEN, IERROR <BR>CHARACTER*(*) STRING <BR></tt>  
 <tt> void MPI::Get_error_string(int errorcode, char* name, int&amp; resultlen) <BR></tt>  
  
Returns the error string associated with an error code  
  
or class.  
  
The argument  string must represent storage that is at least  
 MPI_MAX_ERROR_STRING characters long.  
<P> 
The number of characters actually written  
is returned in the output argument,  resultlen.  
<P> 
 
<BR> 
<em> Rationale.</em>  
<P> 
The form of this function was chosen to make the Fortran and C  
bindings similar.  A version that returns a pointer to a string has two  
difficulties.  First, the return string must be statically allocated and  
different for each error message (allowing the pointers returned by  
successive calls to  MPI_ERROR_STRING to point to the correct  
message).  Second, in Fortran, a function declared as returning  
 CHARACTER*(*) can not be referenced in, for example, a  
 PRINT statement.  
 (<em> End of rationale.</em>) <BR> 
  

<P>
<HR>
<A HREF="node185.htm#Node185"><IMG WIDTH=16 HEIGHT=16 SRC="previous.gif"></A><A HREF="node182.htm#Node182"><IMG WIDTH=16 HEIGHT=16 SRC="up.gif"></A><A HREF="node187.htm#Node187"><IMG WIDTH=16 HEIGHT=16 SRC="next.gif"></A><BR>
<b>Up: </b><A HREF="node182.htm#Node182"> Error Handling</a>
<b>Next: </b><A HREF="node187.htm#Node187"> Error Codes and Classes</a>
<b>Previous: </b><A HREF="node185.htm#Node185"> Error Handlers for Files</a>
<P>
<HR>
Return to <A HREF="node428.htm">MPI-2.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>MPI-2.0 of July 1, 2008<BR>
HTML Generated on July 6, 2008
</FONT>
</BODY>
</HTML>
