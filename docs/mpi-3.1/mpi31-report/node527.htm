<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from func-index.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Index</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node527">453. Index</span></h1>
<a href="node526.htm#Node526"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node528.htm#Node528"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node528.htm#Node528"> Index</a>
<b>Previous: </b><a href="node526.htm#Node526"> Index</a>
<p>
                                                                                                                              <ul> 
<li><a href="node427.htm#Node428">..._BEGIN</a>
<li><a href="node427.htm#Node428">..._END</a>
<li><a href="node34.htm#Node34">COMM_COPY_ATTR_FUNCTION</a>
<li><a href="node34.htm#Node34">COMM_DELETE_ATTR_FUNCTION</a>
<li><a href="node82.htm#Node82">CONST:&amp;</a>
<li><a href="node217.htm#Node217">CONST:<font face="sans-serif"> XXX</font></a>
<li><a href="node225.htm#Node225">CONST:(arch, rs6000)</a>
<li><a href="node225.htm#Node225">CONST:(arch, sun)</a>
<li><a href="node225.htm#Node225">CONST:(command, atmos)</a>
<li><a href="node225.htm#Node225">CONST:(command, ocean)</a>
<li><a href="node225.htm#Node225">CONST:(maxprocs, 10)</a>
<li><a href="node225.htm#Node225">CONST:(maxprocs, 5)</a>
<li><a href="node174.htm#Node174">CONST:.FALSE.</a>
<li><a href="node174.htm#Node174">CONST:.TRUE.</a>
<li><a href="node54.htm#Node54">CONST:CHARACTER</a>
<li><a href="node221.htm#Node221">CONST:CHARACTER*(*)</a>
<li><a href="node217.htm#Node217">CONST:COMM</a>
<li><a href="node197.htm#Node197">CONST:DIMS</a>
<li><a href="node197.htm#Node197">CONST:DIMS(i+1)</a>
<li><a href="node197.htm#Node197">CONST:DIRECTION 
= i</a>
<li><a href="node217.htm#Node217">CONST:FILE</a>
<li><a href="node225.htm#Node225">CONST:IERROR</a>
<li><a href="node173.htm#Node173">CONST:INTEGER</a>
<li><a href="node222.htm#Node222">CONST:LASTCODE</a>
<li><a href="node518.htm#Node518">CONST:MPI::BOOL</a>
<li><a href="node518.htm#Node518">CONST:MPI::COMPLEX</a>
<li><a href="node518.htm#Node518">CONST:MPI::DOUBLE_COMPLEX</a>
<li><a href="node518.htm#Node518">CONST:MPI::F_COMPLEX16</a>
<li><a href="node518.htm#Node518">CONST:MPI::F_COMPLEX32</a>
<li><a href="node518.htm#Node518">CONST:MPI::F_COMPLEX4</a>
<li><a href="node518.htm#Node518">CONST:MPI::F_COMPLEX8</a>
<li><a href="node518.htm#Node518">CONST:MPI::INTEGER16</a>
<li><a href="node518.htm#Node518">CONST:MPI::LONG_DOUBLE_COMPLEX</a>
<li><a href="node518.htm#Node518">CONST:MPI::LONG_LONG</a>
<li><a href="node518.htm#Node518">CONST:MPI::REAL16</a>
<li><a href="node518.htm#Node518">CONST:MPI::_LONG_LONG</a>
<li><a href="node114.htm#Node114">CONST:MPI_2DOUBLE_PRECISION</a>
<li><a href="node114.htm#Node114">CONST:MPI_2INT</a>
<li><a href="node114.htm#Node114">CONST:MPI_2INTEGER</a>
<li><a href="node114.htm#Node114">CONST:MPI_2REAL</a>
<li><a href="node30.htm#Node30">CONST:MPI_ADDRESS_KIND</a>
<li><a href="node30.htm#Node30">CONST:MPI_ADDRESS_KIND|uu</a>
<li><a href="node48.htm#Node48">CONST:MPI_AINT</a>
<li><a href="node50.htm#Node50">CONST:MPI_ANY_SOURCE</a>
<li><a href="node28.htm#Node28">CONST:MPI_ANY_TAG</a>
<li><a href="node254.htm#Node254">CONST:MPI_APPNUM</a>
<li><a href="node238.htm#Node238">CONST:MPI_ARGVS_NULL</a>
<li><a href="node237.htm#Node237">CONST:MPI_ARGV_NULL</a>
<li><a href="node294.htm#Node294">CONST:MPI_ASYNC_PROTECTS_NONBLOCKING</a>
<li><a href="node30.htm#Node30">CONST:MPI_Aint</a>
<li><a href="node30.htm#Node30">CONST:MPI_Aint|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_BAND</a>
<li><a href="node459.htm#Node459">CONST:MPI_BOR</a>
<li><a href="node22.htm#Node22">CONST:MPI_BOTTOM</a>
<li><a href="node60.htm#Node60">CONST:MPI_BSEND_OVERHEAD</a>
<li><a href="node459.htm#Node459">CONST:MPI_BXOR</a>
<li><a href="node48.htm#Node48">CONST:MPI_BYTE</a>
<li><a href="node459.htm#Node459">CONST:MPI_CART</a>
<li><a href="node48.htm#Node48">CONST:MPI_CHAR</a>
<li><a href="node48.htm#Node48">CONST:MPI_CHARACTER</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_CONTIGUOUS</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_DARRAY</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_DUP</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_F90_COMPLEX</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_F90_INTEGER</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_F90_REAL</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_HINDEXED</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_HINDEXED_BLOCK</a>
<li><a href="node403.htm#Node403">CONST:MPI_COMBINER_HINDEXED_INTEGER</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_HVECTOR</a>
<li><a href="node403.htm#Node403">CONST:MPI_COMBINER_HVECTOR_INTEGER</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_INDEXED</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_INDEXED_BLOCK</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_NAMED</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_RESIZED</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_STRUCT</a>
<li><a href="node403.htm#Node403">CONST:MPI_COMBINER_STRUCT_INTEGER</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_SUBARRAY</a>
<li><a href="node90.htm#Node90">CONST:MPI_COMBINER_VECTOR</a>
<li><a href="node217.htm#Node217">CONST:MPI_COMM-</a>
<li><a href="node34.htm#Node34">CONST:MPI_COMM_DUP_FN</a>
<li><a href="node174.htm#Node174">CONST:MPI_COMM_DUP_FN|uu</a>
<li><a href="node149.htm#Node149">CONST:MPI_COMM_NULL</a>
<li><a href="node34.htm#Node34">CONST:MPI_COMM_NULL_COPY_FN</a>
<li><a href="node174.htm#Node174">CONST:MPI_COMM_NULL_COPY_FN|uu</a>
<li><a href="node34.htm#Node34">CONST:MPI_COMM_NULL_DELETE_FN</a>
<li><a href="node174.htm#Node174">CONST:MPI_COMM_NULL_DELETE_FN|uu</a>
<li><a href="node179.htm#Node179">CONST:MPI_COMM_PARENT</a>
<li><a href="node149.htm#Node149">CONST:MPI_COMM_SELF</a>
<li><a href="node156.htm#Node156">CONST:MPI_COMM_TYPE_SHARED</a>
<li><a href="node28.htm#Node28">CONST:MPI_COMM_WORLD</a>
<li><a href="node48.htm#Node48">CONST:MPI_COMPLEX</a>
<li><a href="node459.htm#Node459">CONST:MPI_COMPLEX16</a>
<li><a href="node459.htm#Node459">CONST:MPI_COMPLEX32</a>
<li><a href="node459.htm#Node459">CONST:MPI_COMPLEX4</a>
<li><a href="node459.htm#Node459">CONST:MPI_COMPLEX8</a>
<li><a href="node155.htm#Node155">CONST:MPI_CONGRUENT</a>
<li><a href="node459.htm#Node459">CONST:MPI_CONVERSION_FN_NULL</a>
<li><a href="node334.htm#Node336">CONST:MPI_CONVERSION_FN_NULL|uu</a>
<li><a href="node48.htm#Node48">CONST:MPI_COUNT</a>
<li><a href="node48.htm#Node48">CONST:MPI_COUNT_KIND</a>
<li><a href="node48.htm#Node48">CONST:MPI_CXX_BOOL</a>
<li><a href="node48.htm#Node48">CONST:MPI_CXX_DOUBLE_COMPLEX</a>
<li><a href="node48.htm#Node48">CONST:MPI_CXX_FLOAT_COMPLEX</a>
<li><a href="node48.htm#Node48">CONST:MPI_CXX_LONG_DOUBLE_COMPLEX</a>
<li><a href="node48.htm#Node48">CONST:MPI_C_BOOL</a>
<li><a href="node48.htm#Node48">CONST:MPI_C_COMPLEX</a>
<li><a href="node48.htm#Node48">CONST:MPI_C_DOUBLE_COMPLEX</a>
<li><a href="node459.htm#Node459">CONST:MPI_C_FLOAT_COMPLEX</a>
<li><a href="node48.htm#Node48">CONST:MPI_C_FLOAT_COMPLEX (as a synonym)</a>
<li><a href="node48.htm#Node48">CONST:MPI_C_LONG_DOUBLE_COMPLEX</a>
<li><a href="node25.htm#Node25">CONST:MPI_Comm</a>
<li><a href="node47.htm#Node47">CONST:MPI_Comm|uu</a>
<li><a href="node32.htm#Node32">CONST:MPI_Count</a>
<li><a href="node32.htm#Node32">CONST:MPI_Count|uu</a>
<li><a href="node86.htm#Node86">CONST:MPI_DATATYPE_NULL</a>
<li><a href="node317.htm#Node317">CONST:MPI_DISPLACEMENT_CURRENT</a>
<li><a href="node81.htm#Node81">CONST:MPI_DISTRIBUTE_BLOCK</a>
<li><a href="node81.htm#Node81">CONST:MPI_DISTRIBUTE_CYCLIC</a>
<li><a href="node81.htm#Node81">CONST:MPI_DISTRIBUTE_DFLT_DARG</a>
<li><a href="node81.htm#Node81">CONST:MPI_DISTRIBUTE_NONE</a>
<li><a href="node459.htm#Node459">CONST:MPI_DIST_GRAPH</a>
<li><a href="node48.htm#Node48">CONST:MPI_DOUBLE</a>
<li><a href="node48.htm#Node48">CONST:MPI_DOUBLE_COMPLEX</a>
<li><a href="node114.htm#Node114">CONST:MPI_DOUBLE_INT</a>
<li><a href="node48.htm#Node48">CONST:MPI_DOUBLE_PRECISION</a>
<li><a href="node34.htm#Node34">CONST:MPI_DUP_FN</a>
<li><a href="node396.htm#Node396">CONST:MPI_DUP_FN|uu</a>
<li><a href="node427.htm#Node431">CONST:MPI_Datatype</a>
<li><a href="node79.htm#Node79">CONST:MPI_Datatype|uu</a>
<li><a href="node237.htm#Node237">CONST:MPI_ERRCODES_IGNORE</a>
<li><a href="node221.htm#Node221">CONST:MPI_ERRHANDLER_NULL</a>
<li><a href="node51.htm#Node51">CONST:MPI_ERROR</a>
<li><a href="node217.htm#Node217">CONST:MPI_ERRORS_ARE_FATAL</a>
<li><a href="node217.htm#Node217">CONST:MPI_ERRORS_RETURN</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_ACCESS</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_AMODE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_ARG</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_ASSERT</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_BAD_FILE</a>
<li><a href="node216.htm#Node216">CONST:MPI_ERR_BASE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_BUFFER</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_COMM</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_CONVERSION</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_COUNT</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_DIMS</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_DISP</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_DUP_DATAREP</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_FILE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_FILE_EXISTS</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_FILE_IN_USE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_GROUP</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_INFO</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_INFO_KEY</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_INFO_NOKEY</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_INFO_VALUE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_INTERN</a>
<li><a href="node51.htm#Node51">CONST:MPI_ERR_IN_STATUS</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_IO</a>
<li><a href="node177.htm#Node177">CONST:MPI_ERR_KEYVAL</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_LASTCODE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_LOCKTYPE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_NAME</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_NOT_SAME</a>
<li><a href="node216.htm#Node216">CONST:MPI_ERR_NO_MEM</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_NO_SPACE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_NO_SUCH_FILE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_OP</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_OTHER</a>
<li><a href="node66.htm#Node66">CONST:MPI_ERR_PENDING</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_PORT</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_QUOTA</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RANK</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_READ_ONLY</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_REQUEST</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_ATTACH</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_CONFLICT</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_FLAVOR</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_RANGE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_SHARED</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_RMA_SYNC</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_ROOT</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_SERVICE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_SIZE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_SPAWN</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_TAG</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_TOPOLOGY</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_TRUNCATE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_TYPE</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_UNKNOWN</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_UNSUPPORTED_DATAREP</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_UNSUPPORTED_OPERATION</a>
<li><a href="node222.htm#Node222">CONST:MPI_ERR_WIN</a>
<li><a href="node218.htm#Node218">CONST:MPI_Errhandler</a>
<li><a href="node218.htm#Node218">CONST:MPI_Errhandler|uu</a>
<li><a href="node447.htm#Node447">CONST:MPI_F08_STATUSES_IGNORE</a>
<li><a href="node447.htm#Node447">CONST:MPI_F08_STATUS_IGNORE</a>
<li><a href="node459.htm#Node459">CONST:MPI_F08_status</a>
<li><a href="node447.htm#Node447">CONST:MPI_F08_status|uu</a>
<li><a href="node309.htm#Node309">CONST:MPI_FILE_NULL</a>
<li><a href="node48.htm#Node48">CONST:MPI_FLOAT</a>
<li><a href="node23.htm#Node23">CONST:MPI_FLOAT_INT</a>
<li><a href="node447.htm#Node447">CONST:MPI_F_STATUSES_IGNORE</a>
<li><a href="node447.htm#Node447">CONST:MPI_F_STATUS_IGNORE</a>
<li><a href="node220.htm#Node220">CONST:MPI_File</a>
<li><a href="node308.htm#Node308">CONST:MPI_File|uu</a>
<li><a href="node446.htm#Node446">CONST:MPI_Fint</a>
<li><a href="node446.htm#Node446">CONST:MPI_Fint|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_GRAPH</a>
<li><a href="node146.htm#Node146">CONST:MPI_GROUP_EMPTY</a>
<li><a href="node146.htm#Node146">CONST:MPI_GROUP_NULL</a>
<li><a href="node151.htm#Node151">CONST:MPI_Group</a>
<li><a href="node151.htm#Node151">CONST:MPI_Group|uu</a>
<li><a href="node210.htm#Node210">CONST:MPI_HOST</a>
<li><a href="node151.htm#Node151">CONST:MPI_IDENT</a>
<li><a href="node225.htm#Node225">CONST:MPI_INFO_ENV</a>
<li><a href="node195.htm#Node195">CONST:MPI_INFO_NULL</a>
<li><a href="node23.htm#Node23">CONST:MPI_INT</a>
<li><a href="node48.htm#Node48">CONST:MPI_INT16_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_INT32_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_INT64_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_INT8_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_INTEGER</a>
<li><a href="node48.htm#Node48">CONST:MPI_INTEGER1</a>
<li><a href="node459.htm#Node459">CONST:MPI_INTEGER16</a>
<li><a href="node48.htm#Node48">CONST:MPI_INTEGER2</a>
<li><a href="node48.htm#Node48">CONST:MPI_INTEGER4</a>
<li><a href="node416.htm#Node418">CONST:MPI_INTEGER8</a>
<li><a href="node459.htm#Node459">CONST:MPI_INTEGER_KIND</a>
<li><a href="node97.htm#Node97">CONST:MPI_IN_PLACE</a>
<li><a href="node210.htm#Node210">CONST:MPI_IO</a>
<li><a href="node216.htm#Node216">CONST:MPI_Info</a>
<li><a href="node229.htm#Node229">CONST:MPI_Info|uu</a>
<li><a href="node174.htm#Node174">CONST:MPI_KEYVAL_INVALID</a>
<li><a href="node459.htm#Node459">CONST:MPI_LAND</a>
<li><a href="node223.htm#Node223">CONST:MPI_LASTUSEDCODE</a>
<li><a href="node402.htm#Node402">CONST:MPI_LB</a>
<li><a href="node282.htm#Node282">CONST:MPI_LOCK_EXCLUSIVE</a>
<li><a href="node282.htm#Node282">CONST:MPI_LOCK_SHARED</a>
<li><a href="node48.htm#Node48">CONST:MPI_LOGICAL</a>
<li><a href="node48.htm#Node48">CONST:MPI_LONG</a>
<li><a href="node48.htm#Node48">CONST:MPI_LONG_DOUBLE</a>
<li><a href="node459.htm#Node459">CONST:MPI_LONG_DOUBLE_INT</a>
<li><a href="node114.htm#Node114">CONST:MPI_LONG_INT</a>
<li><a href="node48.htm#Node48">CONST:MPI_LONG_LONG</a>
<li><a href="node48.htm#Node48">CONST:MPI_LONG_LONG_INT</a>
<li><a href="node459.htm#Node459">CONST:MPI_LOR</a>
<li><a href="node459.htm#Node459">CONST:MPI_LXOR</a>
<li><a href="node111.htm#Node111">CONST:MPI_MAX</a>
<li><a href="node112.htm#Node112">CONST:MPI_MAXLOC</a>
<li><a href="node317.htm#Node317">CONST:MPI_MAX_DATAREP_STRING</a>
<li><a href="node221.htm#Node221">CONST:MPI_MAX_ERROR_STRING</a>
<li><a href="node222.htm#Node222">CONST:MPI_MAX_INFO_KEY</a>
<li><a href="node222.htm#Node222">CONST:MPI_MAX_INFO_VAL</a>
<li><a href="node209.htm#Node209">CONST:MPI_MAX_LIBRARY_VERSION_STRING</a>
<li><a href="node179.htm#Node179">CONST:MPI_MAX_OBJECT_NAME</a>
<li><a href="node244.htm#Node244">CONST:MPI_MAX_PORT_NAME</a>
<li><a href="node210.htm#Node215">CONST:MPI_MAX_PROCESSOR_NAME</a>
<li><a href="node70.htm#Node70">CONST:MPI_MESSAGE_NO_PROC</a>
<li><a href="node70.htm#Node70">CONST:MPI_MESSAGE_NULL</a>
<li><a href="node459.htm#Node459">CONST:MPI_MIN</a>
<li><a href="node112.htm#Node112">CONST:MPI_MINLOC</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_APPEND</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_CREATE</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_DELETE_ON_CLOSE</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_EXCL</a>
<li><a href="node282.htm#Node282">CONST:MPI_MODE_NOCHECK</a>
<li><a href="node280.htm#Node280">CONST:MPI_MODE_NOPRECEDE</a>
<li><a href="node284.htm#Node284">CONST:MPI_MODE_NOPUT</a>
<li><a href="node284.htm#Node284">CONST:MPI_MODE_NOSTORE</a>
<li><a href="node284.htm#Node284">CONST:MPI_MODE_NOSUCCEED</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_RDONLY</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_RDWR</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_SEQUENTIAL</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_UNIQUE_OPEN</a>
<li><a href="node308.htm#Node308">CONST:MPI_MODE_WRONLY</a>
<li><a href="node446.htm#Node446">CONST:MPI_Message</a>
<li><a href="node70.htm#Node70">CONST:MPI_Message|uu</a>
<li><a href="node272.htm#Node274">CONST:MPI_NO_OP</a>
<li><a href="node34.htm#Node34">CONST:MPI_NULL_COPY_FN</a>
<li><a href="node396.htm#Node396">CONST:MPI_NULL_COPY_FN|uu</a>
<li><a href="node34.htm#Node34">CONST:MPI_NULL_DELETE_FN</a>
<li><a href="node396.htm#Node396">CONST:MPI_NULL_DELETE_FN|uu</a>
<li><a href="node48.htm#Node48">CONST:MPI_OFFSET</a>
<li><a href="node48.htm#Node48">CONST:MPI_OFFSET </a>
<li><a href="node48.htm#Node48">CONST:MPI_OFFSET_KIND</a>
<li><a href="node31.htm#Node31">CONST:MPI_OFFSET_KIND|uu</a>
<li><a href="node115.htm#Node115">CONST:MPI_OP_NULL</a>
<li><a href="node27.htm#Node27">CONST:MPI_ORDER_C</a>
<li><a href="node27.htm#Node27">CONST:MPI_ORDER_FORTRAN</a>
<li><a href="node31.htm#Node31">CONST:MPI_Offset</a>
<li><a href="node31.htm#Node31">CONST:MPI_Offset|uu</a>
<li><a href="node111.htm#Node111">CONST:MPI_Op</a>
<li><a href="node115.htm#Node115">CONST:MPI_Op|uu</a>
<li><a href="node23.htm#Node23">CONST:MPI_PACKED</a>
<li><a href="node45.htm#Node45">CONST:MPI_PROC_NULL</a>
<li><a href="node459.htm#Node459">CONST:MPI_PROD</a>
<li><a href="node48.htm#Node48">CONST:MPI_REAL</a>
<li><a href="node459.htm#Node459">CONST:MPI_REAL16</a>
<li><a href="node48.htm#Node48">CONST:MPI_REAL2</a>
<li><a href="node48.htm#Node48">CONST:MPI_REAL4</a>
<li><a href="node48.htm#Node48">CONST:MPI_REAL8</a>
<li><a href="node272.htm#Node273">CONST:MPI_REPLACE</a>
<li><a href="node64.htm#Node64">CONST:MPI_REQUEST_NULL</a>
<li><a href="node99.htm#Node99">CONST:MPI_ROOT</a>
<li><a href="node63.htm#Node63">CONST:MPI_Request</a>
<li><a href="node64.htm#Node64">CONST:MPI_Request|uu</a>
<li><a href="node325.htm#Node325">CONST:MPI_SEEK_CUR</a>
<li><a href="node325.htm#Node325">CONST:MPI_SEEK_END</a>
<li><a href="node325.htm#Node325">CONST:MPI_SEEK_SET</a>
<li><a href="node48.htm#Node48">CONST:MPI_SHORT</a>
<li><a href="node459.htm#Node459">CONST:MPI_SHORT_INT</a>
<li><a href="node48.htm#Node48">CONST:MPI_SIGNED_CHAR</a>
<li><a href="node151.htm#Node151">CONST:MPI_SIMILAR</a>
<li><a href="node51.htm#Node51">CONST:MPI_SOURCE</a>
<li><a href="node26.htm#Node26">CONST:MPI_STATUSES_IGNORE</a>
<li><a href="node22.htm#Node22">CONST:MPI_STATUS_IGNORE</a>
<li><a href="node51.htm#Node51">CONST:MPI_STATUS_SIZE</a>
<li><a href="node408.htm#Node408">CONST:MPI_SUBARRAYS_SUPPORTED</a>
<li><a href="node209.htm#Node209">CONST:MPI_SUBVERSION</a>
<li><a href="node35.htm#Node35">CONST:MPI_SUCCESS</a>
<li><a href="node455.htm#Node455">CONST:MPI_SUM</a>
<li><a href="node51.htm#Node51">CONST:MPI_Status</a>
<li><a href="node50.htm#Node50">CONST:MPI_Status|uu</a>
<li><a href="node51.htm#Node51">CONST:MPI_TAG</a>
<li><a href="node49.htm#Node49">CONST:MPI_TAG_UB</a>
<li><a href="node303.htm#Node303">CONST:MPI_THREAD_FUNNELED</a>
<li><a href="node303.htm#Node303">CONST:MPI_THREAD_MULTIPLE</a>
<li><a href="node303.htm#Node303">CONST:MPI_THREAD_SERIALIZED</a>
<li><a href="node303.htm#Node303">CONST:MPI_THREAD_SINGLE</a>
<li><a href="node416.htm#Node418">CONST:MPI_TYPECLASS_COMPLEX</a>
<li><a href="node416.htm#Node418">CONST:MPI_TYPECLASS_INTEGER</a>
<li><a href="node416.htm#Node418">CONST:MPI_TYPECLASS_REAL</a>
<li><a href="node459.htm#Node459">CONST:MPI_TYPE_DUP_FN</a>
<li><a href="node176.htm#Node176">CONST:MPI_TYPE_DUP_FN|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_TYPE_NULL_COPY_FN</a>
<li><a href="node176.htm#Node176">CONST:MPI_TYPE_NULL_COPY_FN|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_TYPE_NULL_DELETE_FN</a>
<li><a href="node176.htm#Node176">CONST:MPI_TYPE_NULL_DELETE_FN|uu</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_COMM</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_DATATYPE</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_ERRHANDLER</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_FILE</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_GROUP</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_INFO</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_MESSAGE</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_OP</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_REQUEST</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_MPI_WIN</a>
<li><a href="node374.htm#Node374">CONST:MPI_T_BIND_NO_OBJECT</a>
<li><a href="node378.htm#Node381">CONST:MPI_T_CVAR_HANDLE_NULL</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_CVAR_READ, WRITE</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_ENUM_NULL</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_CANNOT_INIT</a>
<li><a href="node378.htm#Node382">CONST:MPI_T_ERR_CVAR_SET_NEVER</a>
<li><a href="node378.htm#Node382">CONST:MPI_T_ERR_CVAR_SET_NOT_NOW</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_INVALID</a>
<li><a href="node384.htm#Node388">CONST:MPI_T_ERR_INVALID_HANDLE</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_INVALID_INDEX</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_INVALID_ITEM</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_ERR_INVALID_NAME</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_INVALID_SESSION</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_MEMORY</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_NOT_INITIALIZED</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_OUT_OF_HANDLES</a>
<li><a href="node393.htm#Node393">CONST:MPI_T_ERR_OUT_OF_SESSIONS</a>
<li><a href="node384.htm#Node390">CONST:MPI_T_ERR_PVAR_NO_ATOMIC</a>
<li><a href="node384.htm#Node389">CONST:MPI_T_ERR_PVAR_NO_STARTSTOP</a>
<li><a href="node384.htm#Node390">CONST:MPI_T_ERR_PVAR_NO_WRITE</a>
<li><a href="node384.htm#Node389">CONST:MPI_T_PVAR_ALL_HANDLES</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_AGGREGATE</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_COUNTER</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_GENERIC</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_HIGHWATERMARK</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_LEVEL</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_LOWWATERMARK</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_PERCENTAGE</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_SIZE</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_STATE</a>
<li><a href="node459.htm#Node459">CONST:MPI_T_PVAR_CLASS_TIMER</a>
<li><a href="node384.htm#Node388">CONST:MPI_T_PVAR_HANDLE_NULL</a>
<li><a href="node384.htm#Node387">CONST:MPI_T_PVAR_SESSION_NULL</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_ALL</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_ALL_EQ</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_CONSTANT</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_GROUP</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_GROUP_EQ</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_LOCAL</a>
<li><a href="node378.htm#Node379">CONST:MPI_T_SCOPE_READONLY</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_MPIDEV_ALL</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_MPIDEV_BASIC</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_MPIDEV_DETAIL</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_TUNER_ALL</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_TUNER_BASIC</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_TUNER_DETAIL</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_USER_ALL</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_USER_BASIC</a>
<li><a href="node373.htm#Node373">CONST:MPI_T_VERBOSITY_USER_DETAIL</a>
<li><a href="node378.htm#Node381">CONST:MPI_T_cvar_handle</a>
<li><a href="node378.htm#Node381">CONST:MPI_T_cvar_handle|uu</a>
<li><a href="node377.htm#Node377">CONST:MPI_T_enum</a>
<li><a href="node377.htm#Node377">CONST:MPI_T_enum|uu</a>
<li><a href="node384.htm#Node388">CONST:MPI_T_pvar_handle</a>
<li><a href="node384.htm#Node388">CONST:MPI_T_pvar_handle|uu</a>
<li><a href="node384.htm#Node387">CONST:MPI_T_pvar_session</a>
<li><a href="node384.htm#Node387">CONST:MPI_T_pvar_session|uu</a>
<li><a href="node12.htm#Node12">CONST:MPI_UB</a>
<li><a href="node48.htm#Node48">CONST:MPI_UINT16_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_UINT32_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_UINT64_T</a>
<li><a href="node48.htm#Node48">CONST:MPI_UINT8_T</a>
<li><a href="node51.htm#Node51">CONST:MPI_UNDEFINED</a>
<li><a href="node151.htm#Node151">CONST:MPI_UNEQUAL</a>
<li><a href="node234.htm#Node234">CONST:MPI_UNIVERSE_SIZE</a>
<li><a href="node48.htm#Node48">CONST:MPI_UNSIGNED</a>
<li><a href="node48.htm#Node48">CONST:MPI_UNSIGNED_CHAR</a>
<li><a href="node48.htm#Node48">CONST:MPI_UNSIGNED_LONG</a>
<li><a href="node48.htm#Node48">CONST:MPI_UNSIGNED_LONG_LONG</a>
<li><a href="node48.htm#Node48">CONST:MPI_UNSIGNED_SHORT</a>
<li><a href="node195.htm#Node195">CONST:MPI_UNWEIGHTED</a>
<li><a href="node25.htm#Node25">CONST:MPI_VAL</a>
<li><a href="node209.htm#Node209">CONST:MPI_VERSION</a>
<li><a href="node48.htm#Node48">CONST:MPI_WCHAR</a>
<li><a href="node195.htm#Node195">CONST:MPI_WEIGHTS_EMPTY</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_BASE</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_CREATE_FLAVOR</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_DISP_UNIT</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_DUP_FN</a>
<li><a href="node175.htm#Node175">CONST:MPI_WIN_DUP_FN|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_FLAVOR_ALLOCATE</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_FLAVOR_CREATE</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_FLAVOR_DYNAMIC</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_FLAVOR_SHARED</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_MODEL</a>
<li><a href="node265.htm#Node265">CONST:MPI_WIN_NULL</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_NULL_COPY_FN</a>
<li><a href="node175.htm#Node175">CONST:MPI_WIN_NULL_COPY_FN|uu</a>
<li><a href="node459.htm#Node459">CONST:MPI_WIN_NULL_DELETE_FN</a>
<li><a href="node175.htm#Node175">CONST:MPI_WIN_NULL_DELETE_FN|uu</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_SEPARATE</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_SIZE</a>
<li><a href="node266.htm#Node266">CONST:MPI_WIN_UNIFIED</a>
<li><a href="node210.htm#Node210">CONST:MPI_WTIME_IS_GLOBAL</a>
<li><a href="node175.htm#Node175">CONST:MPI_Win</a>
<li><a href="node261.htm#Node261">CONST:MPI_Win|uu</a>
<li><a href="node52.htm#Node52">CONST:NULL</a>
<li><a href="node221.htm#Node221">CONST:PRINT</a>
<li><a href="node217.htm#Node217">CONST:WIN</a>
<li><a href="node217.htm#Node217">CONST:_WORLD</a>
<li><a href="node225.htm#Node225">CONST:``1024''</a>
<li><a href="node225.htm#Node225">CONST:``MPI_THREAD_SINGLE''</a>
<li><a href="node54.htm#Node55">CONST:a</a>
<li><a href="node315.htm#Node316">CONST:access_style</a>
<li><a href="node261.htm#Node261">CONST:accumulate_ops</a>
<li><a href="node261.htm#Node261">CONST:accumulate_ordering</a>
<li><a href="node263.htm#Node263">CONST:alloc_shared_noncontig</a>
<li><a href="node255.htm#Node255">CONST:appnum</a>
<li><a href="node225.htm#Node225">CONST:arch</a>
<li><a href="node225.htm#Node225">CONST:argv</a>
<li><a href="node54.htm#Node55">CONST:b</a>
<li><a href="node48.htm#Node48">CONST:bool</a>
<li><a href="node315.htm#Node316">CONST:cb_block_size</a>
<li><a href="node315.htm#Node316">CONST:cb_buffer_size</a>
<li><a href="node315.htm#Node316">CONST:cb_nodes</a>
<li><a href="node59.htm#Node59">CONST:char**</a>
<li><a href="node315.htm#Node316">CONST:chunked</a>
<li><a href="node315.htm#Node316">CONST:chunked_item</a>
<li><a href="node315.htm#Node316">CONST:chunked_size</a>
<li><a href="node315.htm#Node316">CONST:collective_buffering</a>
<li><a href="node225.htm#Node225">CONST:command</a>
<li><a href="node197.htm#Node197">CONST:dims[i]</a>
<li><a href="node197.htm#Node197">CONST:direction = i</a>
<li><a href="node221.htm#Node221">CONST:errorcode</a>
<li><a href="node331.htm#Node331">CONST:external32</a>
<li><a href="node64.htm#Node64">CONST:false</a>
<li><a href="node225.htm#Node225">CONST:file</a>
<li><a href="node315.htm#Node316">CONST:file_perm</a>
<li><a href="node315.htm#Node316">CONST:filename</a>
<li><a href="node174.htm#Node174">CONST:flag = 0</a>
<li><a href="node174.htm#Node174">CONST:flag = 1</a>
<li><a href="node225.htm#Node225">CONST:host</a>
<li><a href="node82.htm#Node82">CONST:int</a>
<li><a href="node331.htm#Node331">CONST:internal</a>
<li><a href="node315.htm#Node316">CONST:io_node_list</a>
<li><a href="node247.htm#Node247">CONST:ip_address</a>
<li><a href="node247.htm#Node247">CONST:ip_port</a>
<li><a href="node225.htm#Node225">CONST:maxprocs</a>
<li><a href="node70.htm#Node70">CONST:message = MPI_MESSAGE_NO_PROC</a>
<li><a href="node331.htm#Node331">CONST:native</a>
<li><a href="node315.htm#Node316">CONST:nb_proc</a>
<li><a href="node261.htm#Node261">CONST:no_locks</a>
<li><a href="node291.htm#Node291">CONST:none</a>
<li><a href="node315.htm#Node316">CONST:num_io_nodes</a>
<li><a href="node239.htm#Node239">CONST:path</a>
<li><a href="node315.htm#Node316">CONST:random</a>
<li><a href="node291.htm#Node291">CONST:rar</a>
<li><a href="node291.htm#Node291">CONST:raw</a>
<li><a href="node315.htm#Node316">CONST:read_mostly</a>
<li><a href="node315.htm#Node316">CONST:read_once</a>
<li><a href="node315.htm#Node316">CONST:reverse_sequential</a>
<li><a href="node261.htm#Node261">CONST:same_disp_unit</a>
<li><a href="node261.htm#Node261">CONST:same_op</a>
<li><a href="node261.htm#Node261">CONST:same_op_no_op</a>
<li><a href="node261.htm#Node261">CONST:same_size</a>
<li><a href="node315.htm#Node316">CONST:sequential</a>
<li><a href="node225.htm#Node225">CONST:soft</a>
<li><a href="node48.htm#Node48">CONST:std::complex$&lt;$double$&gt;$</a>
<li><a href="node48.htm#Node48">CONST:std::complex$&lt;$float$&gt;$</a>
<li><a href="node48.htm#Node48">CONST:std::complex$&lt;$long double$&gt;$</a>
<li><a href="node221.htm#Node221">CONST:string</a>
<li><a href="node315.htm#Node316">CONST:striping_factor</a>
<li><a href="node315.htm#Node316">CONST:striping_unit</a>
<li><a href="node225.htm#Node225">CONST:thread_level</a>
<li><a href="node66.htm#Node66">CONST:true</a>
<li><a href="node173.htm#Node173">CONST:void *</a>
<li><a href="node59.htm#Node59">CONST:void*</a>
<li><a href="node59.htm#Node59">CONST:void**</a>
<li><a href="node291.htm#Node291">CONST:war</a>
<li><a href="node291.htm#Node291">CONST:waw</a>
<li><a href="node225.htm#Node225">CONST:wdir</a>
<li><a href="node315.htm#Node316">CONST:write_mostly</a>
<li><a href="node315.htm#Node316">CONST:write_once</a>
<li><a href="node34.htm#Node34">COPY_FUNCTION</a>
<li><a href="node34.htm#Node34">DELETE_FUNCTION</a>
<li><a href="node294.htm#Node294">EXAMPLES:ASYNCHRONOUS</a>
<li><a href="node453.htm#Node453">EXAMPLES:Attributes between languages</a>
<li><a href="node384.htm#Node391">EXAMPLES:Basic tool using performance variables in the <font face="sans-serif"> MPI</font> tool information interface</a>
<li><a href="node446.htm#Node446">EXAMPLES:C/Fortran handle conversion</a>
<li><a href="node206.htm#Node206">EXAMPLES:Cartesian virtual topologies</a>
<li><a href="node66.htm#Node66">EXAMPLES:Client-server code</a>
<li><a href="node69.htm#Node69">EXAMPLES:Client-server code!with blocking probe</a>
<li><a href="node69.htm#Node69">EXAMPLES:Client-server code!with blocking probe, wrong</a>
<li><a href="node91.htm#Node91">EXAMPLES:Datatype!3D array</a>
<li><a href="node91.htm#Node91">EXAMPLES:Datatype!absolute addresses</a>
<li><a href="node91.htm#Node91">EXAMPLES:Datatype!array of structures</a>
<li><a href="node92.htm#Node92">EXAMPLES:Datatype!elaborate example</a>
<li><a href="node88.htm#Node88">EXAMPLES:Datatype!matching type</a>
<li><a href="node91.htm#Node91">EXAMPLES:Datatype!matrix transpose</a>
<li><a href="node91.htm#Node91">EXAMPLES:Datatype!union</a>
<li><a href="node54.htm#Node54">EXAMPLES:Datatypes!matching</a>
<li><a href="node54.htm#Node54">EXAMPLES:Datatypes!not matching</a>
<li><a href="node54.htm#Node54">EXAMPLES:Datatypes!untyped</a>
<li><a href="node140.htm#Node140">EXAMPLES:Deadlock! with MPI_Bcast</a>
<li><a href="node58.htm#Node58">EXAMPLES:Deadlock!if not buffered</a>
<li><a href="node58.htm#Node58">EXAMPLES:Deadlock!wrong message exchange</a>
<li><a href="node140.htm#Node140">EXAMPLES:False matching of collective operations</a>
<li><a href="node416.htm#Node418">EXAMPLES:Fortran 90 MPI_TYPE_MATCH_SIZE implementation</a>
<li><a href="node421.htm#Node421">EXAMPLES:Fortran 90 copying and sequence problem</a>
<li><a href="node425.htm#Node425">EXAMPLES:Fortran 90 derived types</a>
<li><a href="node416.htm#Node419">EXAMPLES:Fortran 90 heterogeneous communication (unsafe)</a>
<li><a href="node416.htm#Node417">EXAMPLES:Fortran 90 invalid KIND</a>
<li><a href="node439.htm#Node439">EXAMPLES:Fortran 90 overlapping communication and computation</a>
<li><a href="node427.htm#Node428">EXAMPLES:Fortran 90 register optimization</a>
<li><a href="node140.htm#Node140">EXAMPLES:Independence of nonblocking operations</a>
<li><a href="node156.htm#Node156">EXAMPLES:Intercommunicator</a>
<li><a href="node456.htm#Node456">EXAMPLES:Interlanguage communication</a>
<li><a href="node58.htm#Node58">EXAMPLES:Intertwined matching pairs</a>
<li><a href="node272.htm#Node273">EXAMPLES:MPI_ACCUMULATE</a>
<li><a href="node216.htm#Node216">EXAMPLES:MPI_ALLOC_MEM</a>
<li><a href="node117.htm#Node117">EXAMPLES:MPI_ALLREDUCE</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_ASYNC_PROTECTS_NONBLOCKING</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Accumulate</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Aint</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Aint_add</a>
<li><a href="node108.htm#Node108">EXAMPLES:MPI_Allgather</a>
<li><a href="node216.htm#Node216">EXAMPLES:MPI_Alloc_mem</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Alltoall</a>
<li><a href="node58.htm#Node58">EXAMPLES:MPI_BSEND</a>
<li><a href="node54.htm#Node54">EXAMPLES:MPI_BYTE</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Barrier</a>
<li><a href="node102.htm#Node102">EXAMPLES:MPI_Bcast</a>
<li><a href="node59.htm#Node59">EXAMPLES:MPI_Buffer_attach</a>
<li><a href="node59.htm#Node59">EXAMPLES:MPI_Buffer_detach</a>
<li><a href="node197.htm#Node197">EXAMPLES:MPI_CART_COORDS</a>
<li><a href="node206.htm#Node206">EXAMPLES:MPI_CART_GET</a>
<li><a href="node197.htm#Node197">EXAMPLES:MPI_CART_RANK</a>
<li><a href="node197.htm#Node197">EXAMPLES:MPI_CART_SHIFT</a>
<li><a href="node198.htm#Node198">EXAMPLES:MPI_CART_SUB</a>
<li><a href="node54.htm#Node55">EXAMPLES:MPI_CHARACTER</a>
<li><a href="node237.htm#Node237">EXAMPLES:MPI_COMM_SPAWN</a>
<li><a href="node238.htm#Node238">EXAMPLES:MPI_COMM_SPAWN_MULTIPLE</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Cancel</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Comm_create</a>
<li><a href="node178.htm#Node178">EXAMPLES:MPI_Comm_create_keyval</a>
<li><a href="node164.htm#Node164">EXAMPLES:MPI_Comm_dup</a>
<li><a href="node178.htm#Node178">EXAMPLES:MPI_Comm_get_attr</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Comm_group</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Comm_remote_size</a>
<li><a href="node178.htm#Node178">EXAMPLES:MPI_Comm_set_attr</a>
<li><a href="node237.htm#Node237">EXAMPLES:MPI_Comm_spawn</a>
<li><a href="node238.htm#Node238">EXAMPLES:MPI_Comm_spawn_multiple</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Comm_split</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Compare_and_swap</a>
<li><a href="node193.htm#Node193">EXAMPLES:MPI_DIMS_CREATE</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_DIST_GRAPH_CREATE</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_DIST_GRAPH_CREATE_ADJACENT</a>
<li><a href="node195.htm#Node195">EXAMPLES:MPI_Dist_graph_create</a>
<li><a href="node325.htm#Node325">EXAMPLES:MPI_FILE_CLOSE</a>
<li><a href="node314.htm#Node314">EXAMPLES:MPI_FILE_GET_AMODE</a>
<li><a href="node325.htm#Node325">EXAMPLES:MPI_FILE_IREAD</a>
<li><a href="node325.htm#Node325">EXAMPLES:MPI_FILE_OPEN</a>
<li><a href="node325.htm#Node325">EXAMPLES:MPI_FILE_READ</a>
<li><a href="node349.htm#Node349">EXAMPLES:MPI_FILE_SET_ATOMICITY</a>
<li><a href="node325.htm#Node325">EXAMPLES:MPI_FILE_SET_VIEW</a>
<li><a href="node349.htm#Node349">EXAMPLES:MPI_FILE_SYNC</a>
<li><a href="node216.htm#Node216">EXAMPLES:MPI_FREE_MEM</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_F_sync_reg</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Finalize</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Free_mem</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_GET</a>
<li><a href="node82.htm#Node82">EXAMPLES:MPI_GET_ADDRESS</a>
<li><a href="node88.htm#Node88">EXAMPLES:MPI_GET_COUNT</a>
<li><a href="node88.htm#Node88">EXAMPLES:MPI_GET_ELEMENTS</a>
<li><a href="node194.htm#Node194">EXAMPLES:MPI_GRAPH_CREATE</a>
<li><a href="node196.htm#Node196">EXAMPLES:MPI_GRAPH_NEIGHBORS</a>
<li><a href="node196.htm#Node196">EXAMPLES:MPI_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node92.htm#Node92">EXAMPLES:MPI_Gather</a>
<li><a href="node92.htm#Node92">EXAMPLES:MPI_Gatherv</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Get</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Get_accumulate</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Get_address</a>
<li><a href="node298.htm#Node298">EXAMPLES:MPI_Grequest_complete</a>
<li><a href="node298.htm#Node298">EXAMPLES:MPI_Grequest_start</a>
<li><a href="node162.htm#Node162">EXAMPLES:MPI_Group_excl</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Group_free</a>
<li><a href="node156.htm#Node156">EXAMPLES:MPI_Group_incl</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_INFO_ENV</a>
<li><a href="node64.htm#Node64">EXAMPLES:MPI_IRECV</a>
<li><a href="node64.htm#Node64">EXAMPLES:MPI_ISEND</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Iallreduce</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Ialltoall</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Ibarrier</a>
<li><a href="node128.htm#Node129">EXAMPLES:MPI_Ibcast</a>
<li><a href="node169.htm#Node170">EXAMPLES:MPI_Intercomm_create</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Iprobe</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Irecv</a>
<li><a href="node115.htm#Node116">EXAMPLES:MPI_Op_create</a>
<li><a href="node69.htm#Node69">EXAMPLES:MPI_PROBE</a>
<li><a href="node92.htm#Node92">EXAMPLES:MPI_Pack</a>
<li><a href="node92.htm#Node92">EXAMPLES:MPI_Pack_size</a>
<li><a href="node281.htm#Node281">EXAMPLES:MPI_Put</a>
<li><a href="node54.htm#Node54">EXAMPLES:MPI_RECV</a>
<li><a href="node112.htm#Node112">EXAMPLES:MPI_REDUCE</a>
<li><a href="node64.htm#Node64">EXAMPLES:MPI_REQUEST_FREE</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Recv</a>
<li><a href="node114.htm#Node114">EXAMPLES:MPI_Reduce</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Request_free</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Rget</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Rput</a>
<li><a href="node54.htm#Node54">EXAMPLES:MPI_SEND</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_SENDRECV</a>
<li><a href="node197.htm#Node197">EXAMPLES:MPI_SENDRECV_REPLACE</a>
<li><a href="node58.htm#Node58">EXAMPLES:MPI_SSEND</a>
<li><a href="node125.htm#Node125">EXAMPLES:MPI_Scan</a>
<li><a href="node106.htm#Node106">EXAMPLES:MPI_Scatter</a>
<li><a href="node106.htm#Node106">EXAMPLES:MPI_Scatterv</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Send</a>
<li><a href="node86.htm#Node86">EXAMPLES:MPI_TYPE_COMMIT</a>
<li><a href="node79.htm#Node79">EXAMPLES:MPI_TYPE_CONTIGUOUS</a>
<li><a href="node81.htm#Node81">EXAMPLES:MPI_TYPE_CREATE_DARRAY</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_TYPE_CREATE_HVECTOR</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_TYPE_CREATE_INDEXED_BLOCK</a>
<li><a href="node425.htm#Node425">EXAMPLES:MPI_TYPE_CREATE_RESIZED</a>
<li><a href="node79.htm#Node79">EXAMPLES:MPI_TYPE_CREATE_STRUCT</a>
<li><a href="node355.htm#Node355">EXAMPLES:MPI_TYPE_CREATE_SUBARRAY</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_TYPE_EXTENT</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_TYPE_FREE</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_TYPE_GET_EXTENT</a>
<li><a href="node79.htm#Node79">EXAMPLES:MPI_TYPE_INDEXED</a>
<li><a href="node79.htm#Node79">EXAMPLES:MPI_TYPE_VECTOR</a>
<li><a href="node225.htm#Node225">EXAMPLES:MPI_Test_cancelled</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_commit</a>
<li><a href="node104.htm#Node104">EXAMPLES:MPI_Type_contiguous</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_create_hvector</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_create_struct</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_get_contents</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_get_envelope</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_get_extent</a>
<li><a href="node91.htm#Node91">EXAMPLES:MPI_Type_indexed</a>
<li><a href="node104.htm#Node104">EXAMPLES:MPI_Type_vector</a>
<li><a href="node92.htm#Node92">EXAMPLES:MPI_Unpack</a>
<li><a href="node115.htm#Node116">EXAMPLES:MPI_User_function</a>
<li><a href="node64.htm#Node64">EXAMPLES:MPI_WAIT</a>
<li><a href="node66.htm#Node66">EXAMPLES:MPI_WAITANY</a>
<li><a href="node66.htm#Node66">EXAMPLES:MPI_WAITSOME</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_WIN_CREATE</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_WIN_FENCE</a>
<li><a href="node271.htm#Node271">EXAMPLES:MPI_WIN_FREE</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Wait</a>
<li><a href="node140.htm#Node140">EXAMPLES:MPI_Waitall</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Waitany</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_attach</a>
<li><a href="node281.htm#Node281">EXAMPLES:MPI_Win_complete</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_create_dynamic</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_detach</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_fence</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Win_flush</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_flush_all</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Win_flush_local</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_Win_lock</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_lock_all</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Win_post</a>
<li><a href="node281.htm#Node281">EXAMPLES:MPI_Win_start</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Win_sync</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_sync!shared memory windows</a>
<li><a href="node282.htm#Node282">EXAMPLES:MPI_Win_unlock</a>
<li><a href="node294.htm#Node294">EXAMPLES:MPI_Win_unlock_all</a>
<li><a href="node289.htm#Node289">EXAMPLES:MPI_Win_wait</a>
<li><a href="node58.htm#Node58">EXAMPLES:Message exchange (ping-pong)</a>
<li><a href="node140.htm#Node140">EXAMPLES:Mixing blocking and nonblocking collective operations</a>
<li><a href="node140.htm#Node140">EXAMPLES:Mixing collective and point-to-point requests</a>
<li><a href="node206.htm#Node206">EXAMPLES:Neighborhood collective communication</a>
<li><a href="node140.htm#Node140">EXAMPLES:No Matching of Blocking and Nonblocking collective operations</a>
<li><a href="node140.htm#Node140">EXAMPLES:Non-deterministic program with MPI_Bcast</a>
<li><a href="node58.htm#Node58">EXAMPLES:Non-overtaking messages</a>
<li><a href="node64.htm#Node64">EXAMPLES:Nonblocking operations</a>
<li><a href="node65.htm#Node65">EXAMPLES:Nonblocking operations!message ordering</a>
<li><a href="node65.htm#Node65">EXAMPLES:Nonblocking operations!progress</a>
<li><a href="node140.htm#Node140">EXAMPLES:Overlapping Communicators</a>
<li><a href="node140.htm#Node140">EXAMPLES:Pipelining nonblocking collective operations</a>
<li><a href="node363.htm#Node363">EXAMPLES:Profiling interface</a>
<li><a href="node140.htm#Node140">EXAMPLES:Progression of nonblocking collective operations</a>
<li><a href="node378.htm#Node383">EXAMPLES:Reading the value of a control variable in the <font face="sans-serif"> MPI</font> tool information interface</a>
<li><a href="node294.htm#Node294">EXAMPLES:Shared memory windows!MPI_Win_sync</a>
<li><a href="node301.htm#Node301">EXAMPLES:Threads and <font face="sans-serif"> MPI</font></a>
<li><a href="node206.htm#Node206">EXAMPLES:Topologies</a>
<li><a href="node77.htm#Node77">EXAMPLES:Typemap</a>
<li><a href="node378.htm#Node380">EXAMPLES:Using MPI_T_CVAR_GET_INFO to list all names of control variables.</a>
<li><a href="node206.htm#Node206">EXAMPLES:Virtual topologies</a>
<li><a href="node225.htm#Node225">EXAMPLES:mpiexec</a>
<li><a href="node115.htm#Node115">MPI_ABORT</a>
<li><a href="node225.htm#Node225">MPI_ABORT(comm, errorcode)</a>
<li><a href="node259.htm#Node259">MPI_ACCUMULATE</a>
<li><a href="node34.htm#Node34">MPI_ADDRESS</a>
<li><a href="node223.htm#Node223">MPI_ADD_ERROR_CLASS</a>
<li><a href="node223.htm#Node223">MPI_ADD_ERROR_CLASS(errorclass)</a>
<li><a href="node223.htm#Node223">MPI_ADD_ERROR_CODE(errorclass, errorcode)</a>
<li><a href="node223.htm#Node223">MPI_ADD_ERROR_STRING</a>
<li><a href="node223.htm#Node223">MPI_ADD_ERROR_STRING(errorcode, string)</a>
<li><a href="node37.htm#Node37">MPI_AINT_ADD</a>
<li><a href="node82.htm#Node82">MPI_AINT_ADD(base, disp)</a>
<li><a href="node37.htm#Node37">MPI_AINT_DIFF</a>
<li><a href="node82.htm#Node82">MPI_AINT_DIFF(addr1, addr2)</a>
<li><a href="node95.htm#Node95">MPI_ALLGATHER</a>
<li><a href="node107.htm#Node107">MPI_ALLGATHER(...)</a>
<li><a href="node107.htm#Node107">MPI_ALLGATHER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node95.htm#Node95">MPI_ALLGATHERV</a>
<li><a href="node107.htm#Node107">MPI_ALLGATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, comm)</a>
<li><a href="node216.htm#Node216">MPI_ALLOC_MEM</a>
<li><a href="node216.htm#Node216">MPI_ALLOC_MEM(size, info, baseptr)</a>
<li><a href="node216.htm#Node216">MPI_ALLOC_MEM_CPTR</a>
<li><a href="node95.htm#Node95">MPI_ALLREDUCE</a>
<li><a href="node117.htm#Node117">MPI_ALLREDUCE(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node95.htm#Node95">MPI_ALLTOALL</a>
<li><a href="node109.htm#Node109">MPI_ALLTOALL(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm)</a>
<li><a href="node95.htm#Node95">MPI_ALLTOALLV</a>
<li><a href="node95.htm#Node95">MPI_ALLTOALLW</a>
<li><a href="node34.htm#Node34">MPI_ATTR_DELETE</a>
<li><a href="node396.htm#Node396">MPI_ATTR_DELETE(comm, keyval)</a>
<li><a href="node34.htm#Node34">MPI_ATTR_GET</a>
<li><a href="node396.htm#Node396">MPI_ATTR_GET(comm, keyval, attribute_val, flag)</a>
<li><a href="node34.htm#Node34">MPI_ATTR_PUT</a>
<li><a href="node396.htm#Node396">MPI_ATTR_PUT(comm, keyval, attribute_val)</a>
<li><a href="node95.htm#Node95">MPI_BARRIER</a>
<li><a href="node100.htm#Node100">MPI_BARRIER(comm)</a>
<li><a href="node95.htm#Node95">MPI_BCAST</a>
<li><a href="node101.htm#Node101">MPI_BCAST(buffer, count, datatype, root, comm)</a>
<li><a href="node60.htm#Node60">MPI_BSEND</a>
<li><a href="node57.htm#Node57">MPI_BSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node73.htm#Node73">MPI_BSEND_INIT</a>
<li><a href="node73.htm#Node73">MPI_BSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node64.htm#Node64">MPI_BUFFER_ATTACH</a>
<li><a href="node59.htm#Node59">MPI_BUFFER_ATTACH(buffer, size)</a>
<li><a href="node519.htm#Node519">MPI_BUFFER_DETACH</a>
<li><a href="node59.htm#Node59">MPI_BUFFER_DETACH(buffer_addr, size)</a>
<li><a href="node58.htm#Node58">MPI_CANCEL</a>
<li><a href="node72.htm#Node72">MPI_CANCEL(request)</a>
<li><a href="node190.htm#Node190">MPI_CARTDIM_GET</a>
<li><a href="node196.htm#Node196">MPI_CARTDIM_GET(comm, ndims)</a>
<li><a href="node190.htm#Node190">MPI_CART_COORDS</a>
<li><a href="node196.htm#Node196">MPI_CART_COORDS(comm, rank, maxdims, coords)</a>
<li><a href="node166.htm#Node166">MPI_CART_CREATE</a>
<li><a href="node199.htm#Node199">MPI_CART_CREATE(comm, ndims, dims, 
periods, reorder, comm_cart)</a>
<li><a href="node192.htm#Node192">MPI_CART_CREATE(comm_old, ndims, dims, periods, reorder, comm_cart)</a>
<li><a href="node190.htm#Node190">MPI_CART_GET</a>
<li><a href="node196.htm#Node196">MPI_CART_GET(comm, maxdims, dims, periods, coords)</a>
<li><a href="node190.htm#Node190">MPI_CART_MAP</a>
<li><a href="node199.htm#Node199">MPI_CART_MAP(comm, ndims, dims, periods, newrank)</a>
<li><a href="node190.htm#Node190">MPI_CART_RANK</a>
<li><a href="node196.htm#Node196">MPI_CART_RANK(comm, coords, rank)</a>
<li><a href="node190.htm#Node190">MPI_CART_SHIFT</a>
<li><a href="node197.htm#Node197">MPI_CART_SHIFT(comm, direction, disp, rank_source, rank_dest)</a>
<li><a href="node190.htm#Node190">MPI_CART_SUB</a>
<li><a href="node198.htm#Node198">MPI_CART_SUB(comm, remain_dims, comm_new)</a>
<li><a href="node198.htm#Node198">MPI_CART_SUB(comm, remain_dims, newcomm)</a>
<li><a href="node244.htm#Node244">MPI_CLOSE_PORT</a>
<li><a href="node244.htm#Node244">MPI_CLOSE_PORT(port_name)</a>
<li><a href="node243.htm#Node243">MPI_COMM_ACCEPT</a>
<li><a href="node244.htm#Node244">MPI_COMM_ACCEPT(port_name, info, root, comm, newcomm)</a>
<li><a href="node446.htm#Node446">MPI_COMM_C2F|uu</a>
<li><a href="node223.htm#Node223">MPI_COMM_CALL_ERRHANDLER</a>
<li><a href="node223.htm#Node223">MPI_COMM_CALL_ERRHANDLER (comm, errorcode)</a>
<li><a href="node167.htm#Node167">MPI_COMM_COMPARE</a>
<li><a href="node155.htm#Node155">MPI_COMM_COMPARE(comm1, comm2, result)</a>
<li><a href="node222.htm#Node222">MPI_COMM_CONNECT</a>
<li><a href="node245.htm#Node245">MPI_COMM_CONNECT(port_name, info, root, comm, 
newcomm)</a>
<li><a href="node153.htm#Node153">MPI_COMM_CREATE</a>
<li><a href="node156.htm#Node156">MPI_COMM_CREATE(comm, group, newcomm)</a>
<li><a href="node34.htm#Node34">MPI_COMM_CREATE_ERRHANDLER</a>
<li><a href="node218.htm#Node218">MPI_COMM_CREATE_ERRHANDLER(comm_errhandler_fn, errhandler)</a>
<li><a href="node156.htm#Node156">MPI_COMM_CREATE_GROUP</a>
<li><a href="node156.htm#Node156">MPI_COMM_CREATE_GROUP(comm, group, tag, newcomm)</a>
<li><a href="node34.htm#Node34">MPI_COMM_CREATE_KEYVAL</a>
<li><a href="node174.htm#Node174">MPI_COMM_CREATE_KEYVAL(comm_copy_attr_fn, comm_delete_attr_fn, comm_keyval,  extra_state)</a>
<li><a href="node34.htm#Node34">MPI_COMM_DELETE_ATTR</a>
<li><a href="node174.htm#Node174">MPI_COMM_DELETE_ATTR(comm, comm_keyval)</a>
<li><a href="node177.htm#Node177">MPI_COMM_DISCONNECT</a>
<li><a href="node256.htm#Node256">MPI_COMM_DISCONNECT(comm)</a>
<li><a href="node152.htm#Node152">MPI_COMM_DUP</a>
<li><a href="node156.htm#Node156">MPI_COMM_DUP(comm, newcomm)</a>
<li><a href="node34.htm#Node34">MPI_COMM_DUP_FN</a>
<li><a href="node174.htm#Node174">MPI_COMM_DUP_FN|uu</a>
<li><a href="node156.htm#Node156">MPI_COMM_DUP_WITH_INFO</a>
<li><a href="node156.htm#Node156">MPI_COMM_DUP_WITH_INFO(comm, info, newcomm)</a>
<li><a href="node446.htm#Node446">MPI_COMM_F2C|uu</a>
<li><a href="node153.htm#Node153">MPI_COMM_FREE</a>
<li><a href="node157.htm#Node157">MPI_COMM_FREE(comm)</a>
<li><a href="node34.htm#Node34">MPI_COMM_FREE_KEYVAL</a>
<li><a href="node174.htm#Node174">MPI_COMM_FREE_KEYVAL(comm_keyval)</a>
<li><a href="node34.htm#Node34">MPI_COMM_GET_ATTR</a>
<li><a href="node453.htm#Node453">MPI_COMM_GET_ATTR(MPI_COMM_WORLD, MPI_TAG_UB, val, flag, ierr)</a>
<li><a href="node174.htm#Node174">MPI_COMM_GET_ATTR(comm, comm_keyval, attribute_val, flag)</a>
<li><a href="node34.htm#Node34">MPI_COMM_GET_ERRHANDLER</a>
<li><a href="node218.htm#Node218">MPI_COMM_GET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node158.htm#Node158">MPI_COMM_GET_INFO</a>
<li><a href="node158.htm#Node158">MPI_COMM_GET_INFO(comm, info_used)</a>
<li><a href="node179.htm#Node179">MPI_COMM_GET_NAME</a>
<li><a href="node179.htm#Node179">MPI_COMM_GET_NAME (comm, comm_name, resultlen)</a>
<li><a href="node179.htm#Node179">MPI_COMM_GET_PARENT</a>
<li><a href="node237.htm#Node237">MPI_COMM_GET_PARENT(parent)</a>
<li><a href="node25.htm#Node25">MPI_COMM_GROUP</a>
<li><a href="node152.htm#Node152">MPI_COMM_GROUP(comm, group)</a>
<li><a href="node153.htm#Node153">MPI_COMM_IDUP</a>
<li><a href="node156.htm#Node156">MPI_COMM_IDUP(comm, newcomm, request)</a>
<li><a href="node257.htm#Node257">MPI_COMM_JOIN</a>
<li><a href="node257.htm#Node257">MPI_COMM_JOIN(fd, intercomm)</a>
<li><a href="node34.htm#Node34">MPI_COMM_NULL_COPY_FN</a>
<li><a href="node174.htm#Node174">MPI_COMM_NULL_COPY_FN|uu</a>
<li><a href="node34.htm#Node34">MPI_COMM_NULL_DELETE_FN</a>
<li><a href="node174.htm#Node174">MPI_COMM_NULL_DELETE_FN|uu</a>
<li><a href="node155.htm#Node155">MPI_COMM_RANK</a>
<li><a href="node155.htm#Node155">MPI_COMM_RANK(comm, rank)</a>
<li><a href="node412.htm#Node412">MPI_COMM_RANK_F08</a>
<li><a href="node167.htm#Node167">MPI_COMM_REMOTE_GROUP(comm, group)</a>
<li><a href="node167.htm#Node167">MPI_COMM_REMOTE_SIZE</a>
<li><a href="node167.htm#Node167">MPI_COMM_REMOTE_SIZE(comm, size)</a>
<li><a href="node34.htm#Node34">MPI_COMM_SET_ATTR</a>
<li><a href="node174.htm#Node174">MPI_COMM_SET_ATTR(comm, comm_keyval, attribute_val)</a>
<li><a href="node34.htm#Node34">MPI_COMM_SET_ERRHANDLER</a>
<li><a href="node218.htm#Node218">MPI_COMM_SET_ERRHANDLER(comm, errhandler)</a>
<li><a href="node158.htm#Node158">MPI_COMM_SET_INFO</a>
<li><a href="node158.htm#Node158">MPI_COMM_SET_INFO(comm, info)</a>
<li><a href="node179.htm#Node179">MPI_COMM_SET_NAME</a>
<li><a href="node179.htm#Node179">MPI_COMM_SET_NAME (comm, comm_name)</a>
<li><a href="node155.htm#Node155">MPI_COMM_SIZE</a>
<li><a href="node155.htm#Node155">MPI_COMM_SIZE(comm, size)</a>
<li><a href="node225.htm#Node225">MPI_COMM_SPAWN</a>
<li><a href="node237.htm#Node237">MPI_COMM_SPAWN(command, argv, maxprocs, info,  
root, comm, intercomm,  array_of_errcodes)</a>
<li><a href="node225.htm#Node225">MPI_COMM_SPAWN_MULTIPLE</a>
<li><a href="node156.htm#Node156">MPI_COMM_SPLIT</a>
<li><a href="node199.htm#Node199">MPI_COMM_SPLIT(comm, color, key, comm_cart)</a>
<li><a href="node199.htm#Node199">MPI_COMM_SPLIT(comm, color, key, comm_graph)</a>
<li><a href="node199.htm#Node199">MPI_COMM_SPLIT(comm, color, key, comm_new)</a>
<li><a href="node156.htm#Node156">MPI_COMM_SPLIT(comm, color, key, newcomm)</a>
<li><a href="node158.htm#Node158">MPI_COMM_SPLIT_TYPE</a>
<li><a href="node156.htm#Node156">MPI_COMM_SPLIT_TYPE(comm, split_type, key, info, newcomm)</a>
<li><a href="node166.htm#Node166">MPI_COMM_TEST_INTER</a>
<li><a href="node167.htm#Node167">MPI_COMM_TEST_INTER(comm, flag)</a>
<li><a href="node303.htm#Node303">MPI_COMM_WORLD</a>
<li><a href="node259.htm#Node259">MPI_COMPARE_AND_SWAP</a>
<li><a href="node272.htm#Node276">MPI_COMPARE_AND_SWAP(origin_addr, compare_addr, result_addr, datatype, target_rank, target_disp, win)</a>
<li><a href="node459.htm#Node459">MPI_CONVERSION_FN_NULL</a>
<li><a href="node334.htm#Node336">MPI_CONVERSION_FN_NULL|uu</a>
<li><a href="node412.htm#Node412">MPI_CWIN_GET_ATTR</a>
<li><a href="node190.htm#Node190">MPI_DIMS_CREATE</a>
<li><a href="node193.htm#Node193">MPI_DIMS_CREATE(6, 2, dims)</a>
<li><a href="node193.htm#Node193">MPI_DIMS_CREATE(6, 3, dims)</a>
<li><a href="node193.htm#Node193">MPI_DIMS_CREATE(7, 2, dims)</a>
<li><a href="node193.htm#Node193">MPI_DIMS_CREATE(7, 3, dims)</a>
<li><a href="node193.htm#Node193">MPI_DIMS_CREATE(nnodes, ndims, dims)</a>
<li><a href="node158.htm#Node158">MPI_DIST_GRAPH_CREATE</a>
<li><a href="node158.htm#Node158">MPI_DIST_GRAPH_CREATE_ADJACENT</a>
<li><a href="node190.htm#Node190">MPI_DIST_GRAPH_NEIGHBORS</a>
<li><a href="node196.htm#Node196">MPI_DIST_GRAPH_NEIGHBORS(comm, maxindegree, sources, sourceweights,  
    maxoutdegree, destinations, destweights)</a>
<li><a href="node190.htm#Node190">MPI_DIST_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node196.htm#Node196">MPI_DIST_GRAPH_NEIGHBORS_COUNT(comm, indegree, outdegree, weighted)</a>
<li><a href="node196.htm#Node196">MPI_DIST_GRAPH_NEIGHBOR_COUNT</a>
<li><a href="node34.htm#Node34">MPI_DUP_FN</a>
<li><a href="node396.htm#Node396">MPI_DUP_FN|uu</a>
<li><a href="node446.htm#Node446">MPI_ERRHANDLER_C2F|uu</a>
<li><a href="node34.htm#Node34">MPI_ERRHANDLER_CREATE</a>
<li><a href="node446.htm#Node446">MPI_ERRHANDLER_F2C|uu</a>
<li><a href="node217.htm#Node217">MPI_ERRHANDLER_FREE</a>
<li><a href="node221.htm#Node221">MPI_ERRHANDLER_FREE( errhandler )</a>
<li><a href="node34.htm#Node34">MPI_ERRHANDLER_GET</a>
<li><a href="node34.htm#Node34">MPI_ERRHANDLER_SET</a>
<li><a href="node222.htm#Node222">MPI_ERROR_CLASS</a>
<li><a href="node222.htm#Node222">MPI_ERROR_CLASS( errorcode, errorclass )</a>
<li><a href="node221.htm#Node221">MPI_ERROR_STRING</a>
<li><a href="node221.htm#Node221">MPI_ERROR_STRING( errorcode, string, resultlen )</a>
<li><a href="node95.htm#Node95">MPI_EXSCAN</a>
<li><a href="node124.htm#Node124">MPI_EXSCAN(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node259.htm#Node259">MPI_FETCH_AND_OP</a>
<li><a href="node272.htm#Node275">MPI_FETCH_AND_OP(origin_addr, result_addr, datatype, target_rank, target_disp, op, win)</a>
<li><a href="node446.htm#Node446">MPI_FILE_C2F|uu</a>
<li><a href="node223.htm#Node223">MPI_FILE_CALL_ERRHANDLER</a>
<li><a href="node223.htm#Node223">MPI_FILE_CALL_ERRHANDLER (fh, errorcode)</a>
<li><a href="node256.htm#Node256">MPI_FILE_CLOSE</a>
<li><a href="node309.htm#Node309">MPI_FILE_CLOSE(fh)</a>
<li><a href="node217.htm#Node217">MPI_FILE_CREATE_ERRHANDLER</a>
<li><a href="node220.htm#Node220">MPI_FILE_CREATE_ERRHANDLER(file_errhandler_fn, errhandler)</a>
<li><a href="node308.htm#Node308">MPI_FILE_DELETE</a>
<li><a href="node310.htm#Node310">MPI_FILE_DELETE(filename, info)</a>
<li><a href="node446.htm#Node446">MPI_FILE_F2C|uu</a>
<li><a href="node314.htm#Node314">MPI_FILE_GET_AMODE</a>
<li><a href="node314.htm#Node314">MPI_FILE_GET_AMODE(fh, amode)</a>
<li><a href="node339.htm#Node339">MPI_FILE_GET_ATOMICITY</a>
<li><a href="node339.htm#Node339">MPI_FILE_GET_ATOMICITY(fh, flag)</a>
<li><a href="node325.htm#Node325">MPI_FILE_GET_BYTE_OFFSET</a>
<li><a href="node325.htm#Node325">MPI_FILE_GET_BYTE_OFFSET(fh, offset, disp)</a>
<li><a href="node217.htm#Node217">MPI_FILE_GET_ERRHANDLER</a>
<li><a href="node220.htm#Node220">MPI_FILE_GET_ERRHANDLER(file, errhandler)</a>
<li><a href="node314.htm#Node314">MPI_FILE_GET_GROUP</a>
<li><a href="node314.htm#Node314">MPI_FILE_GET_GROUP(fh, group)</a>
<li><a href="node315.htm#Node315">MPI_FILE_GET_INFO</a>
<li><a href="node315.htm#Node315">MPI_FILE_GET_INFO(fh, info_used)</a>
<li><a href="node325.htm#Node325">MPI_FILE_GET_POSITION</a>
<li><a href="node325.htm#Node325">MPI_FILE_GET_POSITION(fh, offset)</a>
<li><a href="node326.htm#Node329">MPI_FILE_GET_POSITION_SHARED</a>
<li><a href="node326.htm#Node329">MPI_FILE_GET_POSITION_SHARED(fh, offset)</a>
<li><a href="node313.htm#Node313">MPI_FILE_GET_SIZE</a>
<li><a href="node313.htm#Node313">MPI_FILE_GET_SIZE(fh, size)</a>
<li><a href="node332.htm#Node332">MPI_FILE_GET_TYPE_EXTENT</a>
<li><a href="node332.htm#Node332">MPI_FILE_GET_TYPE_EXTENT(fh, datatype, extent)</a>
<li><a href="node317.htm#Node317">MPI_FILE_GET_VIEW</a>
<li><a href="node317.htm#Node317">MPI_FILE_GET_VIEW(fh, disp, etype, filetype, datarep)</a>
<li><a href="node319.htm#Node321">MPI_FILE_I<font face="sans-serif"> XXX</font></a>
<li><a href="node319.htm#Node319">MPI_FILE_IREAD</a>
<li><a href="node325.htm#Node325">MPI_FILE_IREAD(fh, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IREAD_ALL</a>
<li><a href="node325.htm#Node325">MPI_FILE_IREAD_ALL(fh, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IREAD_AT</a>
<li><a href="node324.htm#Node324">MPI_FILE_IREAD_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IREAD_AT_ALL</a>
<li><a href="node324.htm#Node324">MPI_FILE_IREAD_AT_ALL(fh, offset, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IREAD_SHARED</a>
<li><a href="node326.htm#Node327">MPI_FILE_IREAD_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IWRITE</a>
<li><a href="node325.htm#Node325">MPI_FILE_IWRITE(fh, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IWRITE_ALL</a>
<li><a href="node325.htm#Node325">MPI_FILE_IWRITE_ALL(fh, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IWRITE_AT</a>
<li><a href="node324.htm#Node324">MPI_FILE_IWRITE_AT(fh, offset, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IWRITE_AT_ALL</a>
<li><a href="node324.htm#Node324">MPI_FILE_IWRITE_AT_ALL(fh, offset, buf, count, datatype, request)</a>
<li><a href="node319.htm#Node319">MPI_FILE_IWRITE_SHARED</a>
<li><a href="node326.htm#Node327">MPI_FILE_IWRITE_SHARED(fh, buf, count, datatype, request)</a>
<li><a href="node222.htm#Node222">MPI_FILE_OPEN</a>
<li><a href="node308.htm#Node308">MPI_FILE_OPEN(comm, filename, amode, info, fh)</a>
<li><a href="node311.htm#Node311">MPI_FILE_PREALLOCATE</a>
<li><a href="node312.htm#Node312">MPI_FILE_PREALLOCATE(fh, size)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ</a>
<li><a href="node325.htm#Node325">MPI_FILE_READ(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ALL</a>
<li><a href="node325.htm#Node325">MPI_FILE_READ_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ALL_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ALL_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_ALL_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_AT</a>
<li><a href="node324.htm#Node324">MPI_FILE_READ_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_AT_ALL</a>
<li><a href="node324.htm#Node324">MPI_FILE_READ_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_AT_ALL_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_AT_ALL_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_AT_ALL_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ORDERED</a>
<li><a href="node326.htm#Node328">MPI_FILE_READ_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ORDERED_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_ORDERED_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_READ_ORDERED_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_READ_SHARED</a>
<li><a href="node326.htm#Node327">MPI_FILE_READ_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node325.htm#Node325">MPI_FILE_SEEK</a>
<li><a href="node325.htm#Node325">MPI_FILE_SEEK(fh, offset, whence)</a>
<li><a href="node326.htm#Node329">MPI_FILE_SEEK_SHARED</a>
<li><a href="node326.htm#Node329">MPI_FILE_SEEK_SHARED(fh, offset, whence)</a>
<li><a href="node308.htm#Node308">MPI_FILE_SET_ATOMICITY</a>
<li><a href="node339.htm#Node339">MPI_FILE_SET_ATOMICITY(fh, flag)</a>
<li><a href="node217.htm#Node217">MPI_FILE_SET_ERRHANDLER</a>
<li><a href="node220.htm#Node220">MPI_FILE_SET_ERRHANDLER(file, errhandler)</a>
<li><a href="node315.htm#Node315">MPI_FILE_SET_INFO</a>
<li><a href="node315.htm#Node315">MPI_FILE_SET_INFO(fh, info)</a>
<li><a href="node311.htm#Node311">MPI_FILE_SET_SIZE</a>
<li><a href="node311.htm#Node311">MPI_FILE_SET_SIZE(fh, size)</a>
<li><a href="node81.htm#Node81">MPI_FILE_SET_VIEW</a>
<li><a href="node317.htm#Node317">MPI_FILE_SET_VIEW(fh, disp, etype, filetype, datarep, info)</a>
<li><a href="node309.htm#Node309">MPI_FILE_SYNC</a>
<li><a href="node339.htm#Node339">MPI_FILE_SYNC(fh)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE</a>
<li><a href="node325.htm#Node325">MPI_FILE_WRITE(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ALL</a>
<li><a href="node325.htm#Node325">MPI_FILE_WRITE_ALL(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ALL_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_ALL_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ALL_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_ALL_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_AT</a>
<li><a href="node324.htm#Node324">MPI_FILE_WRITE_AT(fh, offset, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_AT_ALL</a>
<li><a href="node324.htm#Node324">MPI_FILE_WRITE_AT_ALL(fh, offset, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_AT_ALL_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_AT_ALL_BEGIN(fh, offset, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_AT_ALL_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_AT_ALL_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ORDERED</a>
<li><a href="node326.htm#Node328">MPI_FILE_WRITE_ORDERED(fh, buf, count, datatype, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ORDERED_BEGIN</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_ORDERED_BEGIN(fh, buf, count, datatype)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_ORDERED_END</a>
<li><a href="node330.htm#Node330">MPI_FILE_WRITE_ORDERED_END(fh, buf, status)</a>
<li><a href="node319.htm#Node319">MPI_FILE_WRITE_SHARED</a>
<li><a href="node326.htm#Node327">MPI_FILE_WRITE_SHARED(fh, buf, count, datatype, status)</a>
<li><a href="node28.htm#Node28">MPI_FINALIZE</a>
<li><a href="node225.htm#Node225">MPI_FINALIZED</a>
<li><a href="node227.htm#Node227">MPI_FINALIZED(flag)</a>
<li><a href="node216.htm#Node216">MPI_FREE_MEM</a>
<li><a href="node216.htm#Node216">MPI_FREE_MEM(base)</a>
<li><a href="node82.htm#Node82">MPI_F_SYNC_REG</a>
<li><a href="node427.htm#Node434">MPI_F_SYNC_REG(bbbb)</a>
<li><a href="node415.htm#Node415">MPI_F_SYNC_REG(buf)</a>
<li><a href="node427.htm#Node434">MPI_F_SYNC_REG(buff)</a>
<li><a href="node95.htm#Node95">MPI_GATHER</a>
<li><a href="node103.htm#Node103">MPI_GATHER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm)</a>
<li><a href="node95.htm#Node95">MPI_GATHERV</a>
<li><a href="node103.htm#Node103">MPI_GATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, root, comm)</a>
<li><a href="node259.htm#Node259">MPI_GET</a>
<li><a href="node289.htm#Node289">MPI_GET(Y)</a>
<li><a href="node270.htm#Node270">MPI_GET(origin_addr, origin_count, 
    origin_datatype, target_rank, target_disp, target_count, <br> 
    target_datatype, win)</a>
<li><a href="node259.htm#Node259">MPI_GET_ACCUMULATE</a>
<li><a href="node34.htm#Node34">MPI_GET_ADDRESS</a>
<li><a href="node82.htm#Node82">MPI_GET_ADDRESS(location, address)</a>
<li><a href="node51.htm#Node51">MPI_GET_COUNT</a>
<li><a href="node299.htm#Node299">MPI_GET_COUNT(status, datatype,  
count)</a>
<li><a href="node51.htm#Node51">MPI_GET_COUNT(status, datatype, count)</a>
<li><a href="node64.htm#Node64">MPI_GET_ELEMENTS</a>
<li><a href="node299.htm#Node299">MPI_GET_ELEMENTS(status, datatype,  
count)</a>
<li><a href="node88.htm#Node88">MPI_GET_ELEMENTS(status, datatype, count)</a>
<li><a href="node64.htm#Node64">MPI_GET_ELEMENTS_X</a>
<li><a href="node299.htm#Node299">MPI_GET_ELEMENTS_X(status, datatype, 
count)</a>
<li><a href="node88.htm#Node88">MPI_GET_ELEMENTS_X(status, datatype, count)</a>
<li><a href="node209.htm#Node209">MPI_GET_LIBRARY_VERSION</a>
<li><a href="node209.htm#Node209">MPI_GET_LIBRARY_VERSION( version, resultlen )</a>
<li><a href="node210.htm#Node215">MPI_GET_PROCESSOR_NAME</a>
<li><a href="node210.htm#Node215">MPI_GET_PROCESSOR_NAME( name, resultlen )</a>
<li><a href="node209.htm#Node209">MPI_GET_VERSION</a>
<li><a href="node209.htm#Node209">MPI_GET_VERSION( version, subversion )</a>
<li><a href="node190.htm#Node190">MPI_GRAPHDIMS_GET</a>
<li><a href="node196.htm#Node196">MPI_GRAPHDIMS_GET(comm, nnodes, nedges)</a>
<li><a href="node190.htm#Node190">MPI_GRAPH_CREATE</a>
<li><a href="node199.htm#Node199">MPI_GRAPH_CREATE(comm, nnodes, index, edges, 
reorder, comm_graph)</a>
<li><a href="node194.htm#Node194">MPI_GRAPH_CREATE(comm_old, nnodes, index, edges, reorder, comm_graph)</a>
<li><a href="node190.htm#Node190">MPI_GRAPH_GET</a>
<li><a href="node196.htm#Node196">MPI_GRAPH_GET(comm, maxindex, maxedges, index, edges)</a>
<li><a href="node190.htm#Node190">MPI_GRAPH_MAP</a>
<li><a href="node199.htm#Node199">MPI_GRAPH_MAP(comm, nnodes, index, edges, newrank)</a>
<li><a href="node190.htm#Node190">MPI_GRAPH_NEIGHBORS</a>
<li><a href="node196.htm#Node196">MPI_GRAPH_NEIGHBORS(comm, rank, maxneighbors, neighbors)</a>
<li><a href="node190.htm#Node190">MPI_GRAPH_NEIGHBORS_COUNT</a>
<li><a href="node196.htm#Node196">MPI_GRAPH_NEIGHBORS_COUNT(comm, rank, nneighbors)</a>
<li><a href="node297.htm#Node297">MPI_GREQUEST_COMPLETE</a>
<li><a href="node297.htm#Node297">MPI_GREQUEST_COMPLETE(request)</a>
<li><a href="node297.htm#Node297">MPI_GREQUEST_START</a>
<li><a href="node297.htm#Node297">MPI_GREQUEST_START(query_fn, free_fn, cancel_fn, extra_state, request)</a>
<li><a href="node446.htm#Node446">MPI_GROUP_C2F|uu</a>
<li><a href="node152.htm#Node152">MPI_GROUP_COMPARE</a>
<li><a href="node151.htm#Node151">MPI_GROUP_COMPARE(group1, group2, result)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_DIFFERENCE(group1, group2, newgroup)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_EXCL</a>
<li><a href="node152.htm#Node152">MPI_GROUP_EXCL(group, n, ranks, newgroup)</a>
<li><a href="node446.htm#Node446">MPI_GROUP_F2C|uu</a>
<li><a href="node153.htm#Node153">MPI_GROUP_FREE</a>
<li><a href="node153.htm#Node153">MPI_GROUP_FREE(group)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_INCL</a>
<li><a href="node152.htm#Node152">MPI_GROUP_INCL(group, n, ranks, newgroup)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_INTERSECTION(group1, group2, newgroup)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_RANGE_EXCL</a>
<li><a href="node152.htm#Node152">MPI_GROUP_RANGE_EXCL(group, n, ranges, newgroup)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_RANGE_INCL</a>
<li><a href="node152.htm#Node152">MPI_GROUP_RANGE_INCL(group, n, ranges, newgroup)</a>
<li><a href="node155.htm#Node155">MPI_GROUP_RANK</a>
<li><a href="node151.htm#Node151">MPI_GROUP_RANK(group, rank)</a>
<li><a href="node155.htm#Node155">MPI_GROUP_SIZE</a>
<li><a href="node151.htm#Node151">MPI_GROUP_SIZE(group, size)</a>
<li><a href="node151.htm#Node151">MPI_GROUP_TRANSLATE_RANKS</a>
<li><a href="node151.htm#Node151">MPI_GROUP_TRANSLATE_RANKS(group1, n, ranks1, group2, ranks2)</a>
<li><a href="node152.htm#Node152">MPI_GROUP_UNION(group1, group2, newgroup)</a>
<li><a href="node95.htm#Node95">MPI_IALLGATHER</a>
<li><a href="node95.htm#Node95">MPI_IALLGATHERV</a>
<li><a href="node132.htm#Node132">MPI_IALLGATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IALLREDUCE</a>
<li><a href="node135.htm#Node135">MPI_IALLREDUCE(sendbuf, recvbuf, count, datatype, op, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IALLTOALL</a>
<li><a href="node133.htm#Node133">MPI_IALLTOALL(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IALLTOALLV</a>
<li><a href="node95.htm#Node95">MPI_IALLTOALLW</a>
<li><a href="node95.htm#Node95">MPI_IBARRIER</a>
<li><a href="node127.htm#Node127">MPI_IBARRIER(comm , request)</a>
<li><a href="node95.htm#Node95">MPI_IBCAST</a>
<li><a href="node128.htm#Node128">MPI_IBCAST(buffer, count, datatype, root, comm, request)</a>
<li><a href="node64.htm#Node64">MPI_IBSEND</a>
<li><a href="node63.htm#Node63">MPI_IBSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IEXSCAN</a>
<li><a href="node139.htm#Node139">MPI_IEXSCAN(sendbuf, recvbuf, count, datatype, op, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IGATHER</a>
<li><a href="node95.htm#Node95">MPI_IGATHERV</a>
<li><a href="node130.htm#Node130">MPI_IGATHERV(sendbuf, sendcount, sendtype, recvbuf, 
recvcounts, displs, recvtype, root, comm, request) </a>
<li><a href="node68.htm#Node68">MPI_IMPROBE</a>
<li><a href="node70.htm#Node70">MPI_IMPROBE(source, tag, comm, flag, message, status)</a>
<li><a href="node69.htm#Node69">MPI_IMRECV</a>
<li><a href="node71.htm#Node71">MPI_IMRECV(buf, count, datatype, message, request)</a>
<li><a href="node190.htm#Node190">MPI_INEIGHBOR_ALLGATHER</a>
<li><a href="node204.htm#Node204">MPI_INEIGHBOR_ALLGATHER(sendbuf, sendcount, sendtype, 
recvbuf, recvcount, recvtype, comm, request)</a>
<li><a href="node190.htm#Node190">MPI_INEIGHBOR_ALLGATHERV</a>
<li><a href="node204.htm#Node204">MPI_INEIGHBOR_ALLGATHERV(sendbuf, sendcount, sendtype, 
recvbuf, recvcounts, displs, recvtype, comm, request)</a>
<li><a href="node190.htm#Node190">MPI_INEIGHBOR_ALLTOALL</a>
<li><a href="node190.htm#Node190">MPI_INEIGHBOR_ALLTOALLV</a>
<li><a href="node205.htm#Node205">MPI_INEIGHBOR_ALLTOALLV(sendbuf, sendcounts, sdispls, sendtype, 
recvbuf, recvcounts, rdispls, recvtype, comm, request)</a>
<li><a href="node190.htm#Node190">MPI_INEIGHBOR_ALLTOALLW</a>
<li><a href="node205.htm#Node205">MPI_INEIGHBOR_ALLTOALLW(sendbuf, sendcounts, sdispls, sendtypes, 
recvbuf, recvcounts, rdispls, recvtypes, comm, request)</a>
<li><a href="node446.htm#Node446">MPI_INFO_C2F|uu</a>
<li><a href="node229.htm#Node229">MPI_INFO_CREATE</a>
<li><a href="node229.htm#Node229">MPI_INFO_CREATE(info)</a>
<li><a href="node222.htm#Node222">MPI_INFO_DELETE</a>
<li><a href="node229.htm#Node229">MPI_INFO_DELETE(info, key)</a>
<li><a href="node229.htm#Node229">MPI_INFO_DUP</a>
<li><a href="node229.htm#Node229">MPI_INFO_DUP(info, newinfo)</a>
<li><a href="node446.htm#Node446">MPI_INFO_F2C|uu</a>
<li><a href="node158.htm#Node158">MPI_INFO_FREE</a>
<li><a href="node229.htm#Node229">MPI_INFO_FREE(info)</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET(info, key, valuelen, value, flag)</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_NKEYS</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_NKEYS(info, nkeys)</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_NTHKEY</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_NTHKEY(info, n, key)</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_VALUELEN</a>
<li><a href="node229.htm#Node229">MPI_INFO_GET_VALUELEN(info, key, valuelen, flag)</a>
<li><a href="node229.htm#Node229">MPI_INFO_SET</a>
<li><a href="node229.htm#Node229">MPI_INFO_SET(info, key, value)</a>
<li><a href="node28.htm#Node28">MPI_INIT</a>
<li><a href="node225.htm#Node225">MPI_INITIALIZED</a>
<li><a href="node225.htm#Node225">MPI_INITIALIZED(flag)</a>
<li><a href="node149.htm#Node149">MPI_INIT_THREAD</a>
<li><a href="node303.htm#Node303">MPI_INIT_THREAD()</a>
<li><a href="node303.htm#Node303">MPI_INIT_THREAD(required, provided)</a>
<li><a href="node156.htm#Node156">MPI_INTERCOMM_CREATE</a>
<li><a href="node156.htm#Node156">MPI_INTERCOMM_MERGE</a>
<li><a href="node168.htm#Node168">MPI_INTERCOMM_MERGE(intercomm, high, newintracomm)</a>
<li><a href="node51.htm#Node51">MPI_IPROBE</a>
<li><a href="node69.htm#Node69">MPI_IPROBE(source, tag, comm, flag, status)</a>
<li><a href="node71.htm#Node71">MPI_IRECV</a>
<li><a href="node63.htm#Node63">MPI_IRECV (buf, count, datatype, source, tag, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IREDUCE</a>
<li><a href="node134.htm#Node134">MPI_IREDUCE(sendbuf, recvbuf, count, datatype, op, 
root, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IREDUCE_SCATTER</a>
<li><a href="node137.htm#Node137">MPI_IREDUCE_SCATTER(sendbuf, recvbuf, recvcounts, 
datatype, op, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_IREDUCE_SCATTER_BLOCK</a>
<li><a href="node136.htm#Node136">MPI_IREDUCE_SCATTER_BLOCK(sendbuf, recvbuf, recvcount, 
datatype, op, comm, request)</a>
<li><a href="node63.htm#Node63">MPI_IRSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_ISCAN</a>
<li><a href="node138.htm#Node138">MPI_ISCAN(sendbuf, recvbuf, count, datatype, op, comm, request)</a>
<li><a href="node95.htm#Node95">MPI_ISCATTER</a>
<li><a href="node95.htm#Node95">MPI_ISCATTERV</a>
<li><a href="node131.htm#Node131">MPI_ISCATTERV(sendbuf, sendcounts, displs, sendtype, 
recvbuf, recvcount, recvtype, root, comm, request)</a>
<li><a href="node73.htm#Node73">MPI_ISEND</a>
<li><a href="node63.htm#Node63">MPI_ISEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node63.htm#Node63">MPI_ISSEND(buf, count, datatype, dest, tag, comm, request)</a>
<li><a href="node300.htm#Node300">MPI_IS_THREAD_MAIN</a>
<li><a href="node303.htm#Node303">MPI_IS_THREAD_MAIN(flag)</a>
<li><a href="node34.htm#Node34">MPI_KEYVAL_CREATE</a>
<li><a href="node396.htm#Node396">MPI_KEYVAL_CREATE(copy_fn, delete_fn, keyval, extra_state)</a>
<li><a href="node34.htm#Node34">MPI_KEYVAL_FREE</a>
<li><a href="node396.htm#Node396">MPI_KEYVAL_FREE(keyval)</a>
<li><a href="node222.htm#Node222">MPI_LOOKUP_NAME</a>
<li><a href="node246.htm#Node246">MPI_LOOKUP_NAME(service_name, info, port_name)</a>
<li><a href="node519.htm#Node519">MPI_MESSAGE_C2F</a>
<li><a href="node446.htm#Node446">MPI_MESSAGE_C2F|uu</a>
<li><a href="node519.htm#Node519">MPI_MESSAGE_F2C</a>
<li><a href="node446.htm#Node446">MPI_MESSAGE_F2C|uu</a>
<li><a href="node68.htm#Node68">MPI_MPROBE</a>
<li><a href="node70.htm#Node70">MPI_MPROBE(source, tag, comm, message, status)</a>
<li><a href="node69.htm#Node69">MPI_MRECV</a>
<li><a href="node71.htm#Node71">MPI_MRECV(buf, count, datatype, message, status)</a>
<li><a href="node190.htm#Node190">MPI_NEIGHBOR_ALLGATHER</a>
<li><a href="node201.htm#Node201">MPI_NEIGHBOR_ALLGATHER(sendbuf, sendcount, sendtype, 
recvbuf, recvcount, recvtype, comm)</a>
<li><a href="node190.htm#Node190">MPI_NEIGHBOR_ALLGATHERV</a>
<li><a href="node201.htm#Node201">MPI_NEIGHBOR_ALLGATHERV(sendbuf, sendcount, sendtype, 
recvbuf, recvcounts, displs, recvtype, comm)</a>
<li><a href="node190.htm#Node190">MPI_NEIGHBOR_ALLTOALL</a>
<li><a href="node190.htm#Node190">MPI_NEIGHBOR_ALLTOALLV</a>
<li><a href="node202.htm#Node202">MPI_NEIGHBOR_ALLTOALLV(sendbuf, sendcounts, sdispls, sendtype, 
recvbuf, recvcounts, rdispls, recvtype, comm)</a>
<li><a href="node190.htm#Node190">MPI_NEIGHBOR_ALLTOALLW</a>
<li><a href="node202.htm#Node202">MPI_NEIGHBOR_ALLTOALLW(sendbuf, sendcounts, sdispls, sendtypes, 
recvbuf, recvcounts, rdispls, recvtypes, comm)</a>
<li><a href="node34.htm#Node34">MPI_NULL_COPY_FN</a>
<li><a href="node396.htm#Node396">MPI_NULL_COPY_FN|uu</a>
<li><a href="node34.htm#Node34">MPI_NULL_DELETE_FN</a>
<li><a href="node396.htm#Node396">MPI_NULL_DELETE_FN|uu</a>
<li><a href="node243.htm#Node243">MPI_OPEN_PORT</a>
<li><a href="node244.htm#Node244">MPI_OPEN_PORT(info, port_name)</a>
<li><a href="node446.htm#Node446">MPI_OP_C2F|uu</a>
<li><a href="node520.htm#Node520">MPI_OP_COMMUTATIVE</a>
<li><a href="node118.htm#Node118">MPI_OP_COMMUTATIVE( op, commute)</a>
<li><a href="node115.htm#Node115">MPI_OP_CREATE</a>
<li><a href="node115.htm#Node115">MPI_OP_CREATE(user_fn, commute, op)</a>
<li><a href="node446.htm#Node446">MPI_OP_F2C|uu</a>
<li><a href="node225.htm#Node225">MPI_OP_FREE</a>
<li><a href="node115.htm#Node115">MPI_OP_FREE(op)</a>
<li><a href="node60.htm#Node60">MPI_PACK</a>
<li><a href="node92.htm#Node92">MPI_PACK(inbuf, incount, datatype, 
outbuf, outcount, position, comm)</a>
<li><a href="node92.htm#Node92">MPI_PACK(inbuf, incount, datatype, outbuf, outsize, 
position, comm)</a>
<li><a href="node18.htm#Node18">MPI_PACK_EXTERNAL</a>
<li><a href="node93.htm#Node93">MPI_PACK_EXTERNAL(datarep, inbuf, incount, datatype, outbuf, outsize, position)</a>
<li><a href="node93.htm#Node93">MPI_PACK_EXTERNAL_SIZE(datarep, incount, datatype, size)</a>
<li><a href="node92.htm#Node92">MPI_PACK_SIZE</a>
<li><a href="node60.htm#Node60">MPI_PACK_SIZE(count, datatype, 
comm, size)</a>
<li><a href="node92.htm#Node92">MPI_PACK_SIZE(incount, datatype, comm, size)</a>
<li><a href="node359.htm#Node359">MPI_PCONTROL</a>
<li><a href="node362.htm#Node362">MPI_PCONTROL(level, ...)</a>
<li><a href="node50.htm#Node50">MPI_PROBE</a>
<li><a href="node69.htm#Node69">MPI_PROBE(source, tag, comm, status)</a>
<li><a href="node243.htm#Node243">MPI_PUBLISH_NAME</a>
<li><a href="node246.htm#Node246">MPI_PUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node259.htm#Node259">MPI_PUT</a>
<li><a href="node269.htm#Node269">MPI_PUT(origin_addr, origin_count, 
    origin_datatype, target_rank, target_disp, target_count, 
    target_datatype, win)</a>
<li><a href="node300.htm#Node300">MPI_QUERY_THREAD</a>
<li><a href="node303.htm#Node303">MPI_QUERY_THREAD(provided)</a>
<li><a href="node259.htm#Node259">MPI_RACCUMULATE</a>
<li><a href="node45.htm#Node45">MPI_RECV</a>
<li><a href="node50.htm#Node50">MPI_RECV (buf, count, datatype, source, tag, comm, status)</a>
<li><a href="node69.htm#Node69">MPI_RECV($...$, 
source, tag, comm, status)</a>
<li><a href="node70.htm#Node70">MPI_RECV($...$, source, tag, 
  comm, status)</a>
<li><a href="node69.htm#Node69">MPI_RECV($...$, source, tag, 
comm, status)</a>
<li><a href="node69.htm#Node69">MPI_RECV()</a>
<li><a href="node77.htm#Node77">MPI_RECV(buf, 1, datatype,$...$)</a>
<li><a href="node88.htm#Node88">MPI_RECV(buf, count, datatype, dest, tag, comm, status)</a>
<li><a href="node88.htm#Node88">MPI_RECV(buf, count, datatype, source, tag, comm, status)</a>
<li><a href="node103.htm#Node103">MPI_RECV(recvbuf, recvcount$.$n, recvtype, ...)</a>
<li><a href="node73.htm#Node73">MPI_RECV_INIT</a>
<li><a href="node73.htm#Node73">MPI_RECV_INIT(buf, count, datatype, source, tag, 
comm, request)</a>
<li><a href="node95.htm#Node95">MPI_REDUCE</a>
<li><a href="node111.htm#Node111">MPI_REDUCE(sendbuf, recvbuf, count, datatype, op, 
root, comm)</a>
<li><a href="node111.htm#Node111">MPI_REDUCE_LOCAL</a>
<li><a href="node118.htm#Node118">MPI_REDUCE_LOCAL( inbuf, inoutbuf, count, datatype, op)</a>
<li><a href="node95.htm#Node95">MPI_REDUCE_SCATTER</a>
<li><a href="node121.htm#Node121">MPI_REDUCE_SCATTER( sendbuf, recvbuf, recvcounts, 
datatype, op, comm)</a>
<li><a href="node95.htm#Node95">MPI_REDUCE_SCATTER_BLOCK</a>
<li><a href="node120.htm#Node120">MPI_REDUCE_SCATTER_BLOCK( sendbuf, recvbuf, recvcount, 
datatype, op, comm)</a>
<li><a href="node222.htm#Node222">MPI_REGISTER_DATAREP</a>
<li><a href="node334.htm#Node334">MPI_REGISTER_DATAREP(datarep, read_conversion_fn, write_conversion_fn,  dtype_file_extent_fn, extra_state)</a>
<li><a href="node446.htm#Node446">MPI_REQUEST_C2F|uu</a>
<li><a href="node446.htm#Node446">MPI_REQUEST_F2C|uu</a>
<li><a href="node64.htm#Node64">MPI_REQUEST_FREE</a>
<li><a href="node64.htm#Node64">MPI_REQUEST_FREE(request)</a>
<li><a href="node52.htm#Node52">MPI_REQUEST_GET_STATUS</a>
<li><a href="node67.htm#Node67">MPI_REQUEST_GET_STATUS( request, flag, status )</a>
<li><a href="node259.htm#Node259">MPI_RGET</a>
<li><a href="node277.htm#Node277">MPI_RGET(origin_addr, origin_count, 
    origin_datatype, target_rank, target_disp, target_count, <br> 
    target_datatype, win, request)</a>
<li><a href="node259.htm#Node259">MPI_RGET_ACCUMULATE</a>
<li><a href="node259.htm#Node259">MPI_RPUT</a>
<li><a href="node277.htm#Node277">MPI_RPUT(origin_addr, origin_count, 
    origin_datatype, target_rank, target_disp, target_count, 
    target_datatype, win, request)</a>
<li><a href="node57.htm#Node57">MPI_RSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node73.htm#Node73">MPI_RSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node95.htm#Node95">MPI_SCAN</a>
<li><a href="node123.htm#Node123">MPI_SCAN(sendbuf, recvbuf, count, datatype, op, comm)</a>
<li><a href="node95.htm#Node95">MPI_SCATTER</a>
<li><a href="node105.htm#Node105">MPI_SCATTER(sendbuf, sendcount, sendtype, recvbuf, 
recvcount, recvtype, root, comm)</a>
<li><a href="node95.htm#Node95">MPI_SCATTERV</a>
<li><a href="node105.htm#Node105">MPI_SCATTERV(sendbuf, sendcounts, displs, sendtype, 
recvbuf, recvcount, recvtype, root, comm)</a>
<li><a href="node45.htm#Node45">MPI_SEND</a>
<li><a href="node77.htm#Node77">MPI_SEND(buf, 1, datatype,$...$)</a>
<li><a href="node88.htm#Node88">MPI_SEND(buf, count, 
datatype, dest, tag, comm)</a>
<li><a href="node88.htm#Node88">MPI_SEND(buf, count, datatype, ...)</a>
<li><a href="node47.htm#Node47">MPI_SEND(buf, count, datatype, dest, tag, comm)</a>
<li><a href="node197.htm#Node197">MPI_SENDRECV</a>
<li><a href="node74.htm#Node74">MPI_SENDRECV(sendbuf, sendcount, sendtype, dest, 
sendtag, recvbuf, recvcount, recvtype, source, recvtag, comm, status)</a>
<li><a href="node73.htm#Node73">MPI_SEND_INIT</a>
<li><a href="node73.htm#Node73">MPI_SEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node408.htm#Node408">MPI_SIZEOF</a>
<li><a href="node416.htm#Node418">MPI_SIZEOF(x, size)</a>
<li><a href="node57.htm#Node57">MPI_SSEND (buf, count, datatype, dest, tag, comm)</a>
<li><a href="node73.htm#Node73">MPI_SSEND_INIT(buf, count, datatype, dest, tag, 
comm, request)</a>
<li><a href="node73.htm#Node73">MPI_START</a>
<li><a href="node73.htm#Node73">MPI_START(request)</a>
<li><a href="node73.htm#Node73">MPI_STARTALL</a>
<li><a href="node73.htm#Node73">MPI_STARTALL(count, array_of_requests)</a>
<li><a href="node519.htm#Node519">MPI_STATUS_C2F08</a>
<li><a href="node447.htm#Node447">MPI_STATUS_C2F08|uu</a>
<li><a href="node447.htm#Node447">MPI_STATUS_C2F|uu</a>
<li><a href="node519.htm#Node519">MPI_STATUS_F082C</a>
<li><a href="node447.htm#Node447">MPI_STATUS_F082C|uu</a>
<li><a href="node519.htm#Node519">MPI_STATUS_F082F</a>
<li><a href="node447.htm#Node447">MPI_STATUS_F082F(f08_status, f_status)</a>
<li><a href="node447.htm#Node447">MPI_STATUS_F2C|uu</a>
<li><a href="node519.htm#Node519">MPI_STATUS_F2F08</a>
<li><a href="node447.htm#Node447">MPI_STATUS_F2F08(f_status, f08_status)</a>
<li><a href="node299.htm#Node299">MPI_STATUS_SET_CANCELLED(status, flag)</a>
<li><a href="node299.htm#Node299">MPI_STATUS_SET_ELEMENTS</a>
<li><a href="node299.htm#Node299">MPI_STATUS_SET_ELEMENTS(status, datatype, count)</a>
<li><a href="node299.htm#Node299">MPI_STATUS_SET_ELEMENTS_X</a>
<li><a href="node299.htm#Node299">MPI_STATUS_SET_ELEMENTS_X(status, datatype, count)</a>
<li><a href="node52.htm#Node52">MPI_TEST</a>
<li><a href="node66.htm#Node66">MPI_TEST( &amp;array_of_requests[i], flag, status)</a>
<li><a href="node64.htm#Node64">MPI_TEST(request, flag, status)</a>
<li><a href="node66.htm#Node66">MPI_TESTALL</a>
<li><a href="node66.htm#Node66">MPI_TESTALL(count, array_of_requests, flag, 
array_of_statuses)</a>
<li><a href="node64.htm#Node64">MPI_TESTANY</a>
<li><a href="node66.htm#Node66">MPI_TESTANY(count, array_of_requests, 
index, status)</a>
<li><a href="node66.htm#Node66">MPI_TESTANY(count, array_of_requests, index, flag, status)</a>
<li><a href="node66.htm#Node66">MPI_TESTSOME</a>
<li><a href="node66.htm#Node66">MPI_TESTSOME(incount, array_of_requests, outcount, 
array_of_indices, array_of_statuses)</a>
<li><a href="node64.htm#Node64">MPI_TEST_CANCELLED</a>
<li><a href="node72.htm#Node72">MPI_TEST_CANCELLED(status, flag)</a>
<li><a href="node190.htm#Node190">MPI_TOPO_TEST</a>
<li><a href="node196.htm#Node196">MPI_TOPO_TEST(comm, status)</a>
<li><a href="node446.htm#Node446">MPI_TYPE_C2F|uu</a>
<li><a href="node86.htm#Node86">MPI_TYPE_COMMIT</a>
<li><a href="node86.htm#Node86">MPI_TYPE_COMMIT(datatype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CONTIGUOUS</a>
<li><a href="node83.htm#Node83">MPI_TYPE_CONTIGUOUS(2, type1, type2)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CONTIGUOUS(count, oldtype, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_DARRAY</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_F90_COMPLEX</a>
<li><a href="node416.htm#Node417">MPI_TYPE_CREATE_F90_COMPLEX(p, r, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_F90_INTEGER</a>
<li><a href="node416.htm#Node417">MPI_TYPE_CREATE_F90_INTEGER(r, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_F90_REAL</a>
<li><a href="node416.htm#Node417">MPI_TYPE_CREATE_F90_REAL(p, r, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_HINDEXED</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CREATE_HINDEXED(count, B, D, oldtype, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_HINDEXED_BLOCK</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_HVECTOR</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CREATE_HVECTOR(count, blocklength, stride, 
oldtype, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_INDEXED_BLOCK</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CREATE_INDEXED_BLOCK(count, blocklength, array_of_displacements, oldtype, newtype)</a>
<li><a href="node172.htm#Node172">MPI_TYPE_CREATE_KEYVAL</a>
<li><a href="node34.htm#Node34">MPI_TYPE_CREATE_RESIZED</a>
<li><a href="node83.htm#Node83">MPI_TYPE_CREATE_RESIZED(MPI_INT, -3, 9, type1)</a>
<li><a href="node84.htm#Node84">MPI_TYPE_CREATE_RESIZED(oldtype, lb, extent, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_STRUCT</a>
<li><a href="node79.htm#Node79">MPI_TYPE_CREATE_STRUCT(count, B, D, T, newtype)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_CREATE_SUBARRAY</a>
<li><a href="node80.htm#Node80">MPI_TYPE_CREATE_SUBARRAY(ndims, array_of_sizes, array_of_subsizes, 
array_of_starts, order, oldtype, newtype)</a>
<li><a href="node172.htm#Node172">MPI_TYPE_DELETE_ATTR</a>
<li><a href="node176.htm#Node176">MPI_TYPE_DELETE_ATTR(datatype, type_keyval)</a>
<li><a href="node23.htm#Node23">MPI_TYPE_DUP</a>
<li><a href="node87.htm#Node87">MPI_TYPE_DUP(oldtype, newtype)</a>
<li><a href="node176.htm#Node176">MPI_TYPE_DUP_FN</a>
<li><a href="node176.htm#Node176">MPI_TYPE_DUP_FN|uu</a>
<li><a href="node34.htm#Node34">MPI_TYPE_EXTENT</a>
<li><a href="node446.htm#Node446">MPI_TYPE_F2C|uu</a>
<li><a href="node90.htm#Node90">MPI_TYPE_FREE</a>
<li><a href="node86.htm#Node86">MPI_TYPE_FREE(datatype)</a>
<li><a href="node172.htm#Node172">MPI_TYPE_FREE_KEYVAL</a>
<li><a href="node176.htm#Node176">MPI_TYPE_FREE_KEYVAL(type_keyval)</a>
<li><a href="node172.htm#Node172">MPI_TYPE_GET_ATTR</a>
<li><a href="node176.htm#Node176">MPI_TYPE_GET_ATTR(datatype, type_keyval, attribute_val, flag)</a>
<li><a href="node90.htm#Node90">MPI_TYPE_GET_CONTENTS</a>
<li><a href="node90.htm#Node90">MPI_TYPE_GET_ENVELOPE</a>
<li><a href="node34.htm#Node34">MPI_TYPE_GET_EXTENT</a>
<li><a href="node84.htm#Node84">MPI_TYPE_GET_EXTENT(datatype, lb, extent)</a>
<li><a href="node519.htm#Node519">MPI_TYPE_GET_EXTENT_X</a>
<li><a href="node84.htm#Node84">MPI_TYPE_GET_EXTENT_X(datatype, lb, extent)</a>
<li><a href="node519.htm#Node519">MPI_TYPE_GET_NAME</a>
<li><a href="node179.htm#Node179">MPI_TYPE_GET_NAME (datatype, type_name, resultlen)</a>
<li><a href="node85.htm#Node85">MPI_TYPE_GET_TRUE_EXTENT</a>
<li><a href="node85.htm#Node85">MPI_TYPE_GET_TRUE_EXTENT(datatype, true_lb, true_extent)</a>
<li><a href="node85.htm#Node85">MPI_TYPE_GET_TRUE_EXTENT_X</a>
<li><a href="node85.htm#Node85">MPI_TYPE_GET_TRUE_EXTENT_X(datatype, true_lb, true_extent)</a>
<li><a href="node34.htm#Node34">MPI_TYPE_HINDEXED</a>
<li><a href="node34.htm#Node34">MPI_TYPE_HVECTOR</a>
<li><a href="node23.htm#Node23">MPI_TYPE_INDEXED</a>
<li><a href="node79.htm#Node79">MPI_TYPE_INDEXED(2, B, D, oldtype, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_INDEXED(count, B, D, oldtype, newtype)</a>
<li><a href="node34.htm#Node34">MPI_TYPE_LB</a>
<li><a href="node408.htm#Node408">MPI_TYPE_MATCH_SIZE</a>
<li><a href="node416.htm#Node418">MPI_TYPE_MATCH_SIZE(typeclass, size, datatype)</a>
<li><a href="node176.htm#Node176">MPI_TYPE_NULL_COPY_FN</a>
<li><a href="node176.htm#Node176">MPI_TYPE_NULL_COPY_FN|uu</a>
<li><a href="node459.htm#Node459">MPI_TYPE_NULL_DELETE_FN</a>
<li><a href="node176.htm#Node176">MPI_TYPE_NULL_DELETE_FN|uu</a>
<li><a href="node172.htm#Node172">MPI_TYPE_SET_ATTR</a>
<li><a href="node176.htm#Node176">MPI_TYPE_SET_ATTR(datatype, type_keyval, attribute_val)</a>
<li><a href="node519.htm#Node519">MPI_TYPE_SET_NAME</a>
<li><a href="node179.htm#Node179">MPI_TYPE_SET_NAME (datatype, type_name)</a>
<li><a href="node82.htm#Node82">MPI_TYPE_SIZE</a>
<li><a href="node82.htm#Node82">MPI_TYPE_SIZE(datatype, size)</a>
<li><a href="node82.htm#Node82">MPI_TYPE_SIZE_X</a>
<li><a href="node82.htm#Node82">MPI_TYPE_SIZE_X(datatype, size)</a>
<li><a href="node34.htm#Node34">MPI_TYPE_STRUCT</a>
<li><a href="node34.htm#Node34">MPI_TYPE_UB</a>
<li><a href="node23.htm#Node23">MPI_TYPE_VECTOR</a>
<li><a href="node79.htm#Node79">MPI_TYPE_VECTOR(1, count, n, oldtype, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_VECTOR(2, 3, 4, oldtype, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_VECTOR(3, 1, -2, oldtype, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_VECTOR(count, 1, 1, oldtype, newtype)</a>
<li><a href="node79.htm#Node79">MPI_TYPE_VECTOR(count, blocklength, stride, oldtype, 
newtype)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_CHANGED(stamp)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_CATEGORIES</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_CATEGORIES(cat_index, len, indices)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_CVARS</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_CVARS(cat_index, len, indices)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_INDEX</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_INDEX(name, cat_index)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_INFO</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_NUM(num_cat)</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_PVARS</a>
<li><a href="node392.htm#Node392">MPI_T_CATEGORY_GET_PVARS(cat_index, len, indices)</a>
<li><a href="node378.htm#Node379">MPI_T_CVAR_GET_INDEX</a>
<li><a href="node378.htm#Node379">MPI_T_CVAR_GET_INDEX(name, cvar_index)</a>
<li><a href="node377.htm#Node377">MPI_T_CVAR_GET_INFO</a>
<li><a href="node378.htm#Node379">MPI_T_CVAR_GET_INFO(cvar_index, name, name_len, verbosity, datatype, enumtype, desc, desc_len,  
bind, scope)</a>
<li><a href="node378.htm#Node381">MPI_T_CVAR_GET_NUM</a>
<li><a href="node378.htm#Node379">MPI_T_CVAR_GET_NUM(num_cvar)</a>
<li><a href="node377.htm#Node377">MPI_T_CVAR_HANDLE_ALLOC</a>
<li><a href="node378.htm#Node381">MPI_T_CVAR_HANDLE_ALLOC(cvar_index, obj_handle, handle, count)</a>
<li><a href="node378.htm#Node381">MPI_T_CVAR_HANDLE_FREE</a>
<li><a href="node378.htm#Node381">MPI_T_CVAR_HANDLE_FREE(handle)</a>
<li><a href="node378.htm#Node382">MPI_T_CVAR_READ(handle, buf)</a>
<li><a href="node378.htm#Node382">MPI_T_CVAR_WRITE(handle, buf)</a>
<li><a href="node377.htm#Node377">MPI_T_ENUM_GET_INFO</a>
<li><a href="node377.htm#Node377">MPI_T_ENUM_GET_INFO(enumtype, num, name, name_len)</a>
<li><a href="node377.htm#Node377">MPI_T_ENUM_GET_ITEM</a>
<li><a href="node377.htm#Node377">MPI_T_ENUM_GET_ITEM(enumtype, index, value, name, name_len)</a>
<li><a href="node376.htm#Node376">MPI_T_FINALIZE</a>
<li><a href="node376.htm#Node376">MPI_T_INIT_THREAD</a>
<li><a href="node376.htm#Node376">MPI_T_INIT_THREAD(required, provided)</a>
<li><a href="node384.htm#Node386">MPI_T_PVAR_GET_INDEX</a>
<li><a href="node384.htm#Node386">MPI_T_PVAR_GET_INDEX(name, var_class, pvar_index)</a>
<li><a href="node377.htm#Node377">MPI_T_PVAR_GET_INFO</a>
<li><a href="node384.htm#Node388">MPI_T_PVAR_GET_NUM</a>
<li><a href="node384.htm#Node386">MPI_T_PVAR_GET_NUM(num_pvar)</a>
<li><a href="node377.htm#Node377">MPI_T_PVAR_HANDLE_ALLOC</a>
<li><a href="node384.htm#Node388">MPI_T_PVAR_HANDLE_ALLOC(session, pvar_index, obj_handle, handle, count)</a>
<li><a href="node384.htm#Node388">MPI_T_PVAR_HANDLE_FREE</a>
<li><a href="node384.htm#Node388">MPI_T_PVAR_HANDLE_FREE(session, handle)</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_READ</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_READ(session, handle, buf)</a>
<li><a href="node384.htm#Node386">MPI_T_PVAR_READRESET</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_READRESET(session, handle, buf)</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_RESET</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_RESET(session, handle)</a>
<li><a href="node393.htm#Node393">MPI_T_PVAR_SESSION_CREATE</a>
<li><a href="node384.htm#Node387">MPI_T_PVAR_SESSION_CREATE(session)</a>
<li><a href="node393.htm#Node393">MPI_T_PVAR_SESSION_FREE</a>
<li><a href="node384.htm#Node387">MPI_T_PVAR_SESSION_FREE(session)</a>
<li><a href="node393.htm#Node393">MPI_T_PVAR_START</a>
<li><a href="node384.htm#Node389">MPI_T_PVAR_START(session, handle)</a>
<li><a href="node393.htm#Node393">MPI_T_PVAR_STOP</a>
<li><a href="node384.htm#Node389">MPI_T_PVAR_STOP(session, handle)</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_WRITE</a>
<li><a href="node384.htm#Node390">MPI_T_PVAR_WRITE(session,handle, buf)</a>
<li><a href="node92.htm#Node92">MPI_UNPACK</a>
<li><a href="node92.htm#Node92">MPI_UNPACK(inbuf, insize, position, outbuf, outcount, 
datatype, comm)</a>
<li><a href="node18.htm#Node18">MPI_UNPACK_EXTERNAL</a>
<li><a href="node93.htm#Node93">MPI_UNPACK_EXTERNAL(datarep, inbuf, insize, position, outbuf, outsize, position)</a>
<li><a href="node222.htm#Node222">MPI_UNPUBLISH_NAME</a>
<li><a href="node246.htm#Node246">MPI_UNPUBLISH_NAME(service_name, info, port_name)</a>
<li><a href="node51.htm#Node51">MPI_WAIT</a>
<li><a href="node66.htm#Node66">MPI_WAIT(&amp;array_of_request[i], &amp;array_of_statuses[i])</a>
<li><a href="node66.htm#Node66">MPI_WAIT(&amp;array_of_requests[i], status)</a>
<li><a href="node64.htm#Node64">MPI_WAIT(request, status)</a>
<li><a href="node66.htm#Node66">MPI_WAITALL</a>
<li><a href="node66.htm#Node66">MPI_WAITALL( count, array_of_requests, array_of_statuses)</a>
<li><a href="node66.htm#Node66">MPI_WAITALL(count, array_of_requests, 
array_of_statuses)</a>
<li><a href="node58.htm#Node58">MPI_WAITANY</a>
<li><a href="node66.htm#Node66">MPI_WAITANY (count, array_of_requests, index, status)</a>
<li><a href="node66.htm#Node66">MPI_WAITANY(count, array_of_requests, index, 
status)</a>
<li><a href="node66.htm#Node66">MPI_WAITSOME</a>
<li><a href="node66.htm#Node66">MPI_WAITSOME(incount, array_of_requests, outcount, 
array_of_indices, array_of_statuses)</a>
<li><a href="node260.htm#Node260">MPI_WIN_ALLOCATE</a>
<li><a href="node262.htm#Node262">MPI_WIN_ALLOCATE(size, disp_unit, info, comm, baseptr, win)</a>
<li><a href="node262.htm#Node262">MPI_WIN_ALLOCATE_CPTR</a>
<li><a href="node260.htm#Node260">MPI_WIN_ALLOCATE_SHARED</a>
<li><a href="node263.htm#Node263">MPI_WIN_ALLOCATE_SHARED(size, disp_unit, info, comm, baseptr, win)</a>
<li><a href="node263.htm#Node263">MPI_WIN_ALLOCATE_SHARED_CPTR</a>
<li><a href="node264.htm#Node264">MPI_WIN_ATTACH</a>
<li><a href="node264.htm#Node264">MPI_WIN_ATTACH(win, base, size)</a>
<li><a href="node446.htm#Node446">MPI_WIN_C2F|uu</a>
<li><a href="node223.htm#Node223">MPI_WIN_CALL_ERRHANDLER</a>
<li><a href="node223.htm#Node223">MPI_WIN_CALL_ERRHANDLER (win, errorcode)</a>
<li><a href="node265.htm#Node265">MPI_WIN_COMPLETE</a>
<li><a href="node281.htm#Node281">MPI_WIN_COMPLETE(win)</a>
<li><a href="node260.htm#Node260">MPI_WIN_CREATE</a>
<li><a href="node261.htm#Node261">MPI_WIN_CREATE(base, size, disp_unit, info, comm, win)</a>
<li><a href="node222.htm#Node222">MPI_WIN_CREATE_DYNAMIC</a>
<li><a href="node264.htm#Node264">MPI_WIN_CREATE_DYNAMIC(info, comm, win)</a>
<li><a href="node217.htm#Node217">MPI_WIN_CREATE_ERRHANDLER</a>
<li><a href="node219.htm#Node219">MPI_WIN_CREATE_ERRHANDLER(win_errhandler_fn, errhandler)</a>
<li><a href="node172.htm#Node172">MPI_WIN_CREATE_KEYVAL</a>
<li><a href="node175.htm#Node175">MPI_WIN_CREATE_KEYVAL(win_copy_attr_fn, win_delete_attr_fn, win_keyval, extra_state)</a>
<li><a href="node172.htm#Node172">MPI_WIN_DELETE_ATTR</a>
<li><a href="node175.htm#Node175">MPI_WIN_DELETE_ATTR(win, win_keyval)</a>
<li><a href="node264.htm#Node264">MPI_WIN_DETACH</a>
<li><a href="node264.htm#Node264">MPI_WIN_DETACH(win, base)</a>
<li><a href="node175.htm#Node175">MPI_WIN_DUP_FN</a>
<li><a href="node175.htm#Node175">MPI_WIN_DUP_FN|uu</a>
<li><a href="node446.htm#Node446">MPI_WIN_F2C|uu</a>
<li><a href="node265.htm#Node265">MPI_WIN_FENCE</a>
<li><a href="node289.htm#Node289">MPI_WIN_FENCE(0, win1)</a>
<li><a href="node289.htm#Node289">MPI_WIN_FENCE(0, win2)</a>
<li><a href="node280.htm#Node280">MPI_WIN_FENCE(assert, win)</a>
<li><a href="node263.htm#Node263">MPI_WIN_FLUSH</a>
<li><a href="node283.htm#Node283">MPI_WIN_FLUSH(rank, win)</a>
<li><a href="node289.htm#Node289">MPI_WIN_FLUSH(rank=target)</a>
<li><a href="node277.htm#Node277">MPI_WIN_FLUSH_ALL</a>
<li><a href="node283.htm#Node283">MPI_WIN_FLUSH_ALL(win)</a>
<li><a href="node277.htm#Node277">MPI_WIN_FLUSH_LOCAL</a>
<li><a href="node283.htm#Node283">MPI_WIN_FLUSH_LOCAL(rank, win)</a>
<li><a href="node277.htm#Node277">MPI_WIN_FLUSH_LOCAL_ALL</a>
<li><a href="node283.htm#Node283">MPI_WIN_FLUSH_LOCAL_ALL(win)</a>
<li><a href="node175.htm#Node175">MPI_WIN_FREE</a>
<li><a href="node265.htm#Node265">MPI_WIN_FREE(win)</a>
<li><a href="node172.htm#Node172">MPI_WIN_FREE_KEYVAL</a>
<li><a href="node175.htm#Node175">MPI_WIN_FREE_KEYVAL(win_keyval)</a>
<li><a href="node172.htm#Node172">MPI_WIN_GET_ATTR</a>
<li><a href="node266.htm#Node266">MPI_WIN_GET_ATTR(win, MPI_WIN_BASE, 
base, flag, ierror)</a>
<li><a href="node453.htm#Node453">MPI_WIN_GET_ATTR(win, MPI_WIN_BASE, val, flag, ierror)</a>
<li><a href="node266.htm#Node266">MPI_WIN_GET_ATTR(win, MPI_WIN_DISP_UNIT, disp_unit, 
flag, ierror)</a>
<li><a href="node266.htm#Node266">MPI_WIN_GET_ATTR(win, MPI_WIN_SIZE, size, flag, ierror)</a>
<li><a href="node175.htm#Node175">MPI_WIN_GET_ATTR(win, win_keyval, attribute_val, flag)</a>
<li><a href="node217.htm#Node217">MPI_WIN_GET_ERRHANDLER</a>
<li><a href="node219.htm#Node219">MPI_WIN_GET_ERRHANDLER(win, errhandler)</a>
<li><a href="node266.htm#Node266">MPI_WIN_GET_GROUP</a>
<li><a href="node266.htm#Node266">MPI_WIN_GET_GROUP(win, group)</a>
<li><a href="node267.htm#Node267">MPI_WIN_GET_INFO</a>
<li><a href="node267.htm#Node267">MPI_WIN_GET_INFO(win, info_used)</a>
<li><a href="node179.htm#Node179">MPI_WIN_GET_NAME (win, win_name, resultlen)</a>
<li><a href="node261.htm#Node261">MPI_WIN_LOCK</a>
<li><a href="node282.htm#Node282">MPI_WIN_LOCK(lock_type, rank, assert, win)</a>
<li><a href="node261.htm#Node261">MPI_WIN_LOCK_ALL</a>
<li><a href="node282.htm#Node282">MPI_WIN_LOCK_ALL(assert, win)</a>
<li><a href="node175.htm#Node175">MPI_WIN_NULL_COPY_FN</a>
<li><a href="node175.htm#Node175">MPI_WIN_NULL_COPY_FN|uu</a>
<li><a href="node459.htm#Node459">MPI_WIN_NULL_DELETE_FN</a>
<li><a href="node175.htm#Node175">MPI_WIN_NULL_DELETE_FN|uu</a>
<li><a href="node265.htm#Node265">MPI_WIN_POST</a>
<li><a href="node281.htm#Node281">MPI_WIN_POST($ingroup_i$, ...)</a>
<li><a href="node281.htm#Node281">MPI_WIN_POST(group, assert, win)</a>
<li><a href="node281.htm#Node281">MPI_WIN_POST(group,0,win)</a>
<li><a href="node172.htm#Node172">MPI_WIN_SET_ATTR</a>
<li><a href="node175.htm#Node175">MPI_WIN_SET_ATTR(win, win_keyval, attribute_val)</a>
<li><a href="node217.htm#Node217">MPI_WIN_SET_ERRHANDLER</a>
<li><a href="node219.htm#Node219">MPI_WIN_SET_ERRHANDLER(win, errhandler)</a>
<li><a href="node267.htm#Node267">MPI_WIN_SET_INFO</a>
<li><a href="node267.htm#Node267">MPI_WIN_SET_INFO(win, info)</a>
<li><a href="node179.htm#Node179">MPI_WIN_SET_NAME (win, win_name)</a>
<li><a href="node263.htm#Node263">MPI_WIN_SHARED_QUERY</a>
<li><a href="node263.htm#Node263">MPI_WIN_SHARED_QUERY(win, rank, size, disp_unit, baseptr)</a>
<li><a href="node263.htm#Node263">MPI_WIN_SHARED_QUERY_CPTR</a>
<li><a href="node279.htm#Node279">MPI_WIN_START</a>
<li><a href="node281.htm#Node281">MPI_WIN_START($outgroup_i$,...)</a>
<li><a href="node281.htm#Node281">MPI_WIN_START(group, assert, win)</a>
<li><a href="node281.htm#Node281">MPI_WIN_START(group,0,win)</a>
<li><a href="node283.htm#Node283">MPI_WIN_SYNC</a>
<li><a href="node283.htm#Node283">MPI_WIN_SYNC(win)</a>
<li><a href="node281.htm#Node281">MPI_WIN_TEST</a>
<li><a href="node281.htm#Node281">MPI_WIN_TEST(win, flag)</a>
<li><a href="node277.htm#Node277">MPI_WIN_UNLOCK</a>
<li><a href="node282.htm#Node282">MPI_WIN_UNLOCK(rank, win)</a>
<li><a href="node277.htm#Node277">MPI_WIN_UNLOCK_ALL</a>
<li><a href="node282.htm#Node282">MPI_WIN_UNLOCK_ALL(win)</a>
<li><a href="node265.htm#Node265">MPI_WIN_WAIT</a>
<li><a href="node281.htm#Node281">MPI_WIN_WAIT(win)</a>
<li><a href="node37.htm#Node37">MPI_WTICK</a>
<li><a href="node37.htm#Node37">MPI_WTIME</a>
<li><a href="node359.htm#Node359">PMPI_</a>
<li><a href="node37.htm#Node37">PMPI_AINT_ADD</a>
<li><a href="node37.htm#Node37">PMPI_AINT_DIFF</a>
<li><a href="node412.htm#Node412">PMPI_ISEND</a>
<li><a href="node37.htm#Node37">PMPI_WTICK</a>
<li><a href="node37.htm#Node37">PMPI_WTIME</a>
<li><a href="node427.htm#Node434">SEND</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Comm_copy_attr_function</a>
<li><a href="node174.htm#Node174">TYPEDEF:MPI_Comm_copy_attr_function(MPI_Comm oldcomm, int comm_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Comm_delete_attr_function</a>
<li><a href="node174.htm#Node174">TYPEDEF:MPI_Comm_delete_attr_function(MPI_Comm comm, int comm_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node397.htm#Node397">TYPEDEF:MPI_Comm_errhandler_fn</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Comm_errhandler_function</a>
<li><a href="node218.htm#Node218">TYPEDEF:MPI_Comm_errhandler_function(MPI_Comm *, int *, ...)</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Copy_function</a>
<li><a href="node459.htm#Node459">TYPEDEF:MPI_Datarep_conversion_function</a>
<li><a href="node334.htm#Node336">TYPEDEF:MPI_Datarep_conversion_function(void *userbuf, MPI_Datatype datatype, int count, void *filebuf, MPI_Offset position, void *extra_state)</a>
<li><a href="node334.htm#Node335">TYPEDEF:MPI_Datarep_extent_function(MPI_Datatype datatype, MPI_Aint *file_extent, void *extra_state)</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Delete_function</a>
<li><a href="node397.htm#Node397">TYPEDEF:MPI_File_errhandler_fn</a>
<li><a href="node397.htm#Node397">TYPEDEF:MPI_File_errhandler_function</a>
<li><a href="node220.htm#Node220">TYPEDEF:MPI_File_errhandler_function(MPI_File *, int *, ...)</a>
<li><a href="node297.htm#Node297">TYPEDEF:MPI_Grequest_cancel_function(void *extra_state, int complete)</a>
<li><a href="node297.htm#Node297">TYPEDEF:MPI_Grequest_free_function(void *extra_state)</a>
<li><a href="node297.htm#Node297">TYPEDEF:MPI_Grequest_query_function(void *extra_state, MPI_Status *status)</a>
<li><a href="node34.htm#Node34">TYPEDEF:MPI_Handler_function</a>
<li><a href="node459.htm#Node459">TYPEDEF:MPI_Type_copy_attr_function</a>
<li><a href="node176.htm#Node176">TYPEDEF:MPI_Type_copy_attr_function(MPI_Datatype oldtype, int type_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node459.htm#Node459">TYPEDEF:MPI_Type_delete_attr_function</a>
<li><a href="node176.htm#Node176">TYPEDEF:MPI_Type_delete_attr_function(MPI_Datatype datatype, int type_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node115.htm#Node116">TYPEDEF:MPI_User_function</a>
<li><a href="node115.htm#Node115">TYPEDEF:MPI_User_function(void* invec, void* inoutvec, int *len, MPI_Datatype *datatype)</a>
<li><a href="node459.htm#Node459">TYPEDEF:MPI_Win_copy_attr_function</a>
<li><a href="node175.htm#Node175">TYPEDEF:MPI_Win_copy_attr_function(MPI_Win oldwin, int win_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag)</a>
<li><a href="node459.htm#Node459">TYPEDEF:MPI_Win_delete_attr_function</a>
<li><a href="node175.htm#Node175">TYPEDEF:MPI_Win_delete_attr_function(MPI_Win win, int win_keyval, void *attribute_val, void *extra_state)</a>
<li><a href="node397.htm#Node397">TYPEDEF:MPI_Win_errhandler_fn</a>
<li><a href="node397.htm#Node397">TYPEDEF:MPI_Win_errhandler_function</a>
<li><a href="node219.htm#Node219">TYPEDEF:MPI_Win_errhandler_function(MPI_Win *, int *, ...)</a>
<li><a href="node297.htm#Node297">cancel_fn</a>
<li><a href="node174.htm#Node174">comm_copy_attr_fn</a>
<li><a href="node174.htm#Node174">comm_delete_attr_fn</a>
<li><a href="node396.htm#Node396">copy_fn</a>
<li><a href="node396.htm#Node396">delete_fn</a>
<li><a href="node297.htm#Node297">free_fn</a>
<li><a href="node225.htm#Node225">mpiexec</a>
<li><a href="node228.htm#Node228">mpiexec|uu</a>
<li><a href="node228.htm#Node228">mpirun</a>
<li><a href="node297.htm#Node297">query_fn</a>
<li><a href="node334.htm#Node336">read_conversion_fn</a>
<li><a href="node416.htm#Node418">sizeof()</a>
<li><a href="node334.htm#Node336">write_conversion_fn</a>
</ul> 
  
  
  
  
  
  
  

<P>
<hr>
<a href="node526.htm#Node526"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node528.htm#Node528"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node528.htm#Node528"> Index</a>
<b>Previous: </b><a href="node526.htm#Node526"> Index</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
