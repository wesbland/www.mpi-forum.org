<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-dynamic/dynamic-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Client Routines</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node245">227. Client Routines</span></h2>
<a href="node244.htm#Node244"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node242.htm#Node242"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node246.htm#Node246"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node242.htm#Node242"> Establishing Communication</a>
<b>Next: </b><a href="node246.htm#Node246"> Name Publishing</a>
<b>Previous: </b><a href="node244.htm#Node244"> Server Routines</a>
<p>
There is only one routine on the client side.   
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_CONNECT(port_name, info, root, comm,  
newcomm)</TD></TR>  
<TR><TD> IN port_name</TD><TD>network address (string, used only on  
<font face="sans-serif"> root</font>)</TD></TR>  
<TR><TD> IN info</TD><TD>implementation-dependent information (handle, used  
only on <font face="sans-serif"> root</font>)</TD></TR>  
<TR><TD> IN root</TD><TD>rank in <font face="sans-serif"> comm</font> of root node (integer)</TD></TR>  
<TR><TD> IN comm</TD><TD>intracommunicator over which call is collective  
(handle)</TD></TR>  
<TR><TD> OUT newcomm</TD><TD>intercommunicator with server as remote group  
(handle)</TD></TR>  
</TABLE>  
 <tt> int MPI_Comm_connect(const char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm) <br></tt>  
 <tt> MPI_Comm_connect(port_name, info, root, comm, newcomm, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: port_name <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, INTENT(IN) :: root <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Comm), INTENT(OUT) :: newcomm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_COMM_CONNECT(PORT_NAME, INFO, ROOT, COMM, NEWCOMM, IERROR)<br> CHARACTER*(*) PORT_NAME <br>INTEGER INFO, ROOT, COMM, NEWCOMM, IERROR <br></tt>  
  
<P> 
This routine establishes communication with a server specified by  
<font face="sans-serif"> port_name</font>. It is collective  
over the calling communicator and returns an intercommunicator  
in which the remote group participated in an <font face="sans-serif"> MPI_COMM_ACCEPT</font>.   
<P> 
If the named port does not exist (or has been closed),  
<font face="sans-serif"> MPI_COMM_CONNECT</font> raises an error of class  
<font face="sans-serif"> MPI_ERR_PORT</font>.  
<P> 
If the port exists, but does not have a pending  
<font face="sans-serif"> MPI_COMM_ACCEPT</font>, the connection attempt will eventually   
time out after an implementation-defined time, or succeed  
when the server calls <font face="sans-serif"> MPI_COMM_ACCEPT</font>. In the   
case of a time out, <font face="sans-serif"> MPI_COMM_CONNECT</font> raises  
an error of class <font face="sans-serif"> MPI_ERR_PORT</font>.  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
The time out period may be arbitrarily short or long. However, a high-quality  
implementation will try to queue connection attempts so that a  
server can handle simultaneous requests from several clients.  A high-quality  
implementation may also provide a mechanism, through the <font face="sans-serif"> info</font>  
arguments to <font face="sans-serif"> MPI_OPEN_PORT</font>, <font face="sans-serif"> MPI_COMM_ACCEPT</font>, and/or   
<font face="sans-serif"> MPI_COMM_CONNECT</font>, for the user to  
control timeout and queuing behavior.  
 (<em> End of advice to implementors.</em>) <br> 
<font face="sans-serif"> MPI</font> provides no guarantee of fairness in servicing connection   
attempts. That is, connection attempts are not necessarily satisfied  
in the order they were initiated and competition from other  
connection attempts may prevent a particular connection attempt  
from being satisfied.   
<P> 
<font face="sans-serif"> port_name</font> is the address of the server.   
It must be the same as the name returned  
by <font face="sans-serif"> MPI_OPEN_PORT</font> on the server. Some  
freedom is allowed here. If there are equivalent forms  
of <font face="sans-serif"> port_name</font>, an implementation may accept them  
as well. For instance, if <font face="sans-serif"> port_name</font> is (<font face="sans-serif"> hostname:port</font>),   
an implementation may accept (<font face="sans-serif"> ip_address:port</font>) as well.   
<P> 

<P>
<hr>
<a href="node244.htm#Node244"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node242.htm#Node242"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node246.htm#Node246"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node242.htm#Node242"> Establishing Communication</a>
<b>Next: </b><a href="node246.htm#Node246"> Name Publishing</a>
<b>Previous: </b><a href="node244.htm#Node244"> Server Routines</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
