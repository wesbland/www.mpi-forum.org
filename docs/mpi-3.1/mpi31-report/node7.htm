<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-intro/intro.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Overview and Goals</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node7">3. Overview and Goals</span></h1>
<a href="node6.htm#Node6"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node8.htm#Node8"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node8.htm#Node8"> Background of <font face="sans-serif"> MPI-1.0</font></a>
<b>Previous: </b><a href="node6.htm#Node6"> Introduction to <font face="sans-serif"> MPI</font></a>
<p>
<font face="sans-serif"> MPI</font> (Message-Passing Interface) is a <em> message-passing library  
  interface specification</em>.  All parts of this definition are  
significant.  <font face="sans-serif"> MPI</font> addresses primarily the message-passing parallel  
programming model, in which data is moved from the address space of  
one process to that of another process through cooperative operations  
on each process.  Extensions to the ``classical'' message-passing model  
are provided in collective operations, remote-memory access  
operations, dynamic process creation, and parallel I/O.  <font face="sans-serif"> MPI</font> is a  
<em> specification</em>, not an implementation; there are multiple  
implementations of <font face="sans-serif"> MPI</font>.  This specification is for a <em> library  
  interface</em>; <font face="sans-serif"> MPI</font> is not a language, and all <font face="sans-serif"> MPI</font> operations are  
expressed as functions, subroutines, or methods, according to the  
appropriate language bindings  
  which, for C and Fortran, are part of the <font face="sans-serif"> MPI</font> standard.  The standard has been  
defined through an open process by a community of parallel computing  
vendors, computer scientists, and application developers.  The next  
few sections provide an overview of the history of <font face="sans-serif"> MPI</font>'s development.    
<P> 
The main advantages of establishing a message-passing standard are portability  
and ease of use. In a distributed memory communication environment in which  
the higher level routines and/or abstractions are   
built   
upon lower level  
message-passing routines the benefits of standardization are particularly  
apparent. Furthermore, the definition of a message-passing standard, such  
as that proposed here, provides vendors with a clearly defined base set of  
routines that they can implement efficiently, or in some cases for which they can provide hardware support, thereby enhancing scalability.  
<P> 
The goal of the Message-Passing Interface simply stated is to  
develop a widely used  
standard for writing message-passing programs.  
As such the interface should  
establish a practical, portable, efficient, and flexible standard for message  
passing.  
<P> 
A complete list of goals follows.  
<P> 
<ul> 
 
<li>Design an application programming interface (not necessarily for compilers  
or a system implementation library).  
<P> 
 
<li>Allow efficient communication: Avoid memory-to-memory copying,  
allow overlap of computation and communication, and offload to communication  
co-processors, where available.  
<P> 
 
<li>Allow for implementations that can be used in a heterogeneous environment.  
<P> 
 
<li>Allow convenient   
C and Fortran   
bindings for the interface.  
<P> 
 
<li>Assume a reliable communication interface:  
the user need not cope with communication failures.  
Such failures are dealt with by the underlying communication subsystem.  
<P> 
 
<li>Define an interface that can be implemented on many  
vendor's platforms, with no significant changes in the underlying  
communication and system software.  
<P> 
 
<li>Semantics of the interface should be language independent.  
<P> 
 
<li>The interface should be designed to allow for thread safety.  
</ul> 
<br> 

<P>
<hr>
<a href="node6.htm#Node6"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node8.htm#Node8"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node8.htm#Node8"> Background of <font face="sans-serif"> MPI-1.0</font></a>
<b>Previous: </b><a href="node6.htm#Node6"> Introduction to <font face="sans-serif"> MPI</font></a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
