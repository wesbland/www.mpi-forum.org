<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-F2008Names.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>I/O Fortran 2008 Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node495">421. I/O Fortran 2008 Bindings</span></h2>
<a href="node494.htm#Node494"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node496.htm#Node496"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node496.htm#Node496"> Language Bindings Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node494.htm#Node494"> External Interfaces Fortran 2008 Bindings</a>
<p>
 <tt> MPI_CONVERSION_FN_NULL(userbuf, datatype, count, filebuf, position, extra_state, ierror) <br> USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), VALUE :: userbuf, filebuf <br>TYPE(MPI_Datatype) :: datatype <br>INTEGER :: count, ierror <br>INTEGER(KIND=MPI_OFFSET_KIND) :: position <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: extra_state <br></tt>  
 <tt> MPI_File_close(fh, ierror) <br> TYPE(MPI_File), INTENT(INOUT) :: fh <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_delete(filename, info, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: filename <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_amode(fh, amode, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER, INTENT(OUT) :: amode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_atomicity(fh, flag, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>LOGICAL, INTENT(OUT) :: flag <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_byte_offset(fh, offset, disp, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: disp <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_group(fh, group, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(MPI_Group), INTENT(OUT) :: group <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_info(fh, info_used, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(MPI_Info), INTENT(OUT) :: info_used <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_position(fh, offset, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: offset <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_position_shared(fh, offset, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: offset <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_size(fh, size, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_type_extent(fh, datatype, extent, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(OUT) :: extent <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_view(fh, disp, etype, filetype, datarep, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: disp <br>TYPE(MPI_Datatype), INTENT(OUT) :: etype, filetype <br>CHARACTER(LEN=*), INTENT(OUT) :: datarep <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iread(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iread_all(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iread_at(fh, offset, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iread_at_all(fh, offset, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>             
 <tt> MPI_File_iread_shared(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iwrite(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iwrite_all(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iwrite_at(fh, offset, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iwrite_at_all(fh, offset, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_iwrite_shared(fh, buf, count, datatype, request, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_open(comm, filename, amode, info, fh, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>CHARACTER(LEN=*), INTENT(IN) :: filename <br>INTEGER, INTENT(IN) :: amode <br>TYPE(MPI_Info), INTENT(IN) :: info <br>TYPE(MPI_File), INTENT(OUT) :: fh <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_preallocate(fh, size, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_all(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_all_begin(fh, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_all_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_at(fh, offset, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_at_all(fh, offset, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_at_all_begin(fh, offset, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_at_all_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_ordered(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_ordered_begin(fh, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_ordered_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_read_shared(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_seek(fh, offset, whence, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>INTEGER, INTENT(IN) :: whence <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_seek_shared(fh, offset, whence, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>INTEGER, INTENT(IN) :: whence <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_set_atomicity(fh, flag, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>LOGICAL, INTENT(IN) :: flag <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_set_info(fh, info, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_set_size(fh, size, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_set_view(fh, disp, etype, filetype, datarep, info, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: disp <br>TYPE(MPI_Datatype), INTENT(IN) :: etype, filetype <br>CHARACTER(LEN=*), INTENT(IN) :: datarep <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_sync(fh, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_all(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_all_begin(fh, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_all_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_at(fh, offset, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_at_all(fh, offset, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_at_all_begin(fh, offset, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_at_all_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_ordered(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_ordered_begin(fh, buf, count, datatype, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_ordered_end(fh, buf, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_write_shared(fh, buf, count, datatype, status, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Register_datarep(datarep, read_conversion_fn, write_conversion_fn, dtype_file_extent_fn, extra_state, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: datarep <br>PROCEDURE(MPI_Datarep_conversion_function) :: read_conversion_fn <br>PROCEDURE(MPI_Datarep_conversion_function) :: write_conversion_fn <br>PROCEDURE(MPI_Datarep_extent_function) :: dtype_file_extent_fn <br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: extra_state <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
<P> 

<P>
<hr>
<a href="node494.htm#Node494"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node496.htm#Node496"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node496.htm#Node496"> Language Bindings Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node494.htm#Node494"> External Interfaces Fortran 2008 Bindings</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
