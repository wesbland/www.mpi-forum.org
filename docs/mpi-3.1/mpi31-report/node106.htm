<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Examples using <font face="sans-serif"> MPI_SCATTER</font>, <font face="sans-serif"> MPI_SCATTERV</font></title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node106">101. Examples using  MPI_SCATTER,  MPI_SCATTERV</span></h2>
<a href="node105.htm#Node105"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node105.htm#Node105"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node107.htm#Node107"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node105.htm#Node105"> Scatter</a>
<b>Next: </b><a href="node107.htm#Node107"> Gather-to-all</a>
<b>Previous: </b><a href="node105.htm#Node105"> Scatter</a>
<p>
The examples in this section use intracommunicators.  
<P> 
<br><b> Example</b>  
  
  
The reverse of Example <a href="node104.htm#Node104">Examples using <font face="sans-serif"> MPI_GATHER</font>, <font face="sans-serif"> MPI_GATHERV</font> 
</a>.  
Scatter sets of 100 <tt>int</tt>s from the root to each process in the group.  
See Figure <a href="node106.htm#Figure9">9 
</a>.  
<P> 
<br> 
<pre><tt>    MPI_Comm comm; 
    int gsize,*sendbuf; 
    int root, rbuf[100]; 
    ... 
    MPI_Comm_size(comm, &amp;gsize); 
    sendbuf = (int *)malloc(gsize*100*sizeof(int)); 
    ... 
    MPI_Scatter(sendbuf, 100, MPI_INT, rbuf, 100, MPI_INT, root, comm); 
</tt></pre> 
  
<P> 
  <div style=\"text-align:center\"><P><img width=497 height=208 src="mycoll-fig7.gif" alt="Image file"><P>
</div>  
  <br> 
<b>Figure 9: </b><span id="Figure9">The root process scatters sets of 100 <tt>int</tt>s
    to each process in the group.</span><P> 
  
    
<br><b> Example</b>  
  
  
The reverse of Example <a href="node104.htm#Node104">Examples using <font face="sans-serif"> MPI_GATHER</font>, <font face="sans-serif"> MPI_GATHERV</font> 
</a>.  
The root process scatters sets of 100 <tt>int</tt>s to the other processes,  
but the sets of 100 are <em> stride int</em>s apart in the sending buffer.  
Requires use of <font face="sans-serif"> MPI_SCATTERV</font>.  
Assume <img width=58 height=9 src="img103.gif" alt="Image file">
.  See Figure <a href="node106.htm#Figure10">10 
</a>.  
<P> 
<br> 
<pre><tt>    MPI_Comm comm; 
    int gsize,*sendbuf; 
    int root, rbuf[100], i, *displs, *scounts; 
 
    ... 
 
    MPI_Comm_size(comm, &amp;gsize); 
    sendbuf = (int *)malloc(gsize*stride*sizeof(int)); 
    ... 
    displs = (int *)malloc(gsize*sizeof(int)); 
    scounts = (int *)malloc(gsize*sizeof(int)); 
    for (i=0; i&lt;gsize; ++i) { 
        displs[i] = i*stride; 
        scounts[i] = 100; 
    } 
    MPI_Scatterv(sendbuf, scounts, displs, MPI_INT, rbuf, 100, MPI_INT, 
                                                              root, comm); 
</tt></pre> 
  
<P> 
  <div style=\"text-align:center\"><P><img width=497 height=212 src="mycoll-fig8.gif" alt="Image file"><P>
</div>  
  <br> 
<b>Figure 10: </b><span id="Figure10">The root process scatters sets of 
    100 <tt>int</tt>s, moving by
  <tt>stride int</tt>s from send to send in the scatter.</span><P> 
  
    
<br><b> Example</b>  
  
  
The reverse of Example <a href="node104.htm#Node104">Examples using <font face="sans-serif"> MPI_GATHER</font>, <font face="sans-serif"> MPI_GATHERV</font> 
</a>.  
We have a varying stride between blocks at sending (root) side,  
at the receiving side we receive into the <tt>i</tt>-th column of a 100<i>&#215;</i>150  
C array.  
See Figure <a href="node106.htm#Figure11">11 
</a>.  
<P> 
<br> 
<pre><tt>    MPI_Comm comm; 
    int gsize,recvarray[100][150],*rptr; 
    int root, *sendbuf, myrank, *stride; 
    MPI_Datatype rtype; 
    int i, *displs, *scounts, offset; 
    ... 
    MPI_Comm_size(comm, &amp;gsize); 
    MPI_Comm_rank(comm, &amp;myrank); 
 
    stride = (int *)malloc(gsize*sizeof(int)); 
    ... 
    /* stride[i] for i = 0 to gsize-1 is set somehow 
     * sendbuf comes from elsewhere 
     */ 
    ... 
    displs = (int *)malloc(gsize*sizeof(int)); 
    scounts = (int *)malloc(gsize*sizeof(int)); 
    offset = 0; 
    for (i=0; i&lt;gsize; ++i) { 
        displs[i] = offset; 
        offset += stride[i]; 
        scounts[i] = 100 - i; 
    } 
    /* Create datatype for the column we are receiving 
     */ 
    MPI_Type_vector(100-myrank, 1, 150, MPI_INT, &amp;rtype); 
    MPI_Type_commit(&amp;rtype); 
    rptr = &amp;recvarray[0][myrank]; 
    MPI_Scatterv(sendbuf, scounts, displs, MPI_INT, rptr, 1, rtype, 
                                                            root, comm); 
 
</tt></pre> 
  
<P> 
  <div style=\"text-align:center\"><P><img width=610 height=262 src="mycoll-fig9.gif" alt="Image file"><P>
</div>  
  <br> 
<b>Figure 11: </b><span id="Figure11">The root 
    scatters blocks of <tt>100-i int</tt>s into
    column <tt>i</tt> of a 100$ x $150
    C array.  At the sending side, the blocks are <tt>stride[i] int</tt>s apart.</span><P> 
  
    

<P>
<hr>
<a href="node105.htm#Node105"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node105.htm#Node105"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node107.htm#Node107"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node105.htm#Node105"> Scatter</a>
<b>Next: </b><a href="node107.htm#Node107"> Gather-to-all</a>
<b>Previous: </b><a href="node105.htm#Node105"> Scatter</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
