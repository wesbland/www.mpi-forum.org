<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Window Info</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node267">246. Window Info</span></h2>
<a href="node266.htm#Node266"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node260.htm#Node260"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node268.htm#Node268"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node260.htm#Node260"> Initialization</a>
<b>Next: </b><a href="node268.htm#Node268"> Communication Calls</a>
<b>Previous: </b><a href="node266.htm#Node266"> Window Attributes</a>
<p>
  
<P> 
Hints specified via info  
(see Section <a href="node229.htm#Node229">The <font face="sans-serif"> Info</font> Object 
</a>)  
allow a user to provide information  
to direct optimization.  
Providing hints may enable an implementation to deliver increased  
performance or use system resources more efficiently.  
However, hints do not change the semantics of any <font face="sans-serif"> MPI</font> interfaces.  
In other words, an implementation is free to ignore all hints.  
Hints are specified on a per window basis,  
in window creation functions and <font face="sans-serif"> MPI_WIN_SET_INFO</font>,  
via the opaque <font face="sans-serif"> info</font> object.  
When an info object that specifies a subset of valid hints is passed to  
<font face="sans-serif"> MPI_WIN_SET_INFO</font>   
there will be no effect on  
previously set or default hints that the <font face="sans-serif"> info</font> does not specify.   
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
It may happen that a program is coded with hints for one system, and  
later executes on another system that does not support these hints.  
In general, unsupported hints should simply be ignored.  
Needless to say, no hint can be mandatory.  
However, for each hint used by a specific implementation,  
a default value must be provided  
when the user does not specify a value for  
the hint.   
 (<em> End of advice to implementors.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_SET_INFO(win, info)</TD></TR>  
<TR><TD> INOUT win</TD><TD>window object (handle)</TD></TR>  
<TR><TD> IN info</TD><TD>info object (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Win_set_info(MPI_Win win, MPI_Info info) <br></tt>  
 <tt> MPI_Win_set_info(win, info, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: win <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_WIN_SET_INFO(WIN, INFO, IERROR)<br> INTEGER WIN, INFO, IERROR <br></tt>  
<P> 
<font face="sans-serif"> MPI_WIN_SET_INFO</font> sets new values for the hints of the window associated with <font face="sans-serif"> win</font>.  
The call is collective on the group of <font face="sans-serif"> win</font>.  
The info object may be different on each process,  
but any info entries that an implementation requires to be the same on all processes  
must appear with the same value in each process's info object.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Some info items that an implementation can use when it creates a window  
cannot easily be changed once the window has been created.  
Thus, an implementation may ignore hints issued in this call that it would have accepted in a creation call.  
 (<em> End of advice to users.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_GET_INFO(win, info_used)</TD></TR>  
<TR><TD> IN win</TD><TD>window object (handle)</TD></TR>  
<TR><TD> OUT info_used</TD><TD>new info object (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Win_get_info(MPI_Win win, MPI_Info *info_used) <br></tt>  
 <tt> MPI_Win_get_info(win, info_used, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: win <br>TYPE(MPI_Info), INTENT(OUT) :: info_used <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_WIN_GET_INFO(WIN, INFO_USED, IERROR)<br> INTEGER WIN, INFO_USED, IERROR <br></tt>  
<P> 
<font face="sans-serif"> MPI_WIN_GET_INFO</font> returns a new info object containing the hints of the window associated with <font face="sans-serif"> win</font>.  
The current setting of all hints actually used by the system related to this window is returned in <font face="sans-serif"> info_used</font>.  
If no such hints exist, a handle to a newly created info object is returned that contains no key/value pair.  
The user is responsible for freeing <font face="sans-serif"> info_used</font> via <font face="sans-serif"> MPI_INFO_FREE</font>.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
The info object returned in <font face="sans-serif"> info_used</font> will contain all hints currently active for this window.  
This set of hints may be greater or smaller than the set of hints specified when the window was created,  
as the system may not recognize some hints set by the user, and may recognize other hints that the user has not set.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node266.htm#Node266"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node260.htm#Node260"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node268.htm#Node268"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node260.htm#Node260"> Initialization</a>
<b>Next: </b><a href="node268.htm#Node268"> Communication Calls</a>
<b>Previous: </b><a href="node266.htm#Node266"> Window Attributes</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
