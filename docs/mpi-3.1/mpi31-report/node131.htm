<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Nonblocking Scatter</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node131">124. Nonblocking Scatter</span></h2>
<a href="node130.htm#Node130"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node126.htm#Node126"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node132.htm#Node132"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node126.htm#Node126"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node132.htm#Node132"> Nonblocking Gather-to-all</a>
<b>Previous: </b><a href="node130.htm#Node130"> Nonblocking Gather</a>
<p>
  
  
<P> 
<P><img width=358 height=281 src="img134.gif" alt="Image file"><P>
 <tt> int MPI_Iscatter(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request) <br></tt>  
<P> 
 <tt> MPI_Iscatter(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, root, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: sendbuf <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: recvbuf <br>INTEGER, INTENT(IN) :: sendcount, recvcount, root <br>TYPE(MPI_Datatype), INTENT(IN) :: sendtype, recvtype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_ISCATTER(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, ROOT, COMM, REQUEST, IERROR) <br> &lt;type&gt; SENDBUF(*), RECVBUF(*) <br>INTEGER SENDCOUNT, SENDTYPE, RECVCOUNT, RECVTYPE, ROOT, COMM, REQUEST, IERROR <br></tt>  
<P> 
This call starts a nonblocking variant of <font face="sans-serif"> MPI_SCATTER</font> (see  
Section <a href="node105.htm#Node105">Scatter 
</a>).   
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ISCATTERV(sendbuf, sendcounts, displs, sendtype,  
recvbuf, recvcount, recvtype, root, comm, request)</TD></TR>  
<TR><TD> IN  sendbuf</TD><TD> address of send buffer (choice, significant  
only at root)</TD></TR>  
<TR><TD> IN  sendcounts</TD><TD>non-negative  
integer array (of length group size)  
specifying the number of elements to send to each rank</TD></TR>  
<TR><TD> IN  displs</TD><TD> integer array (of length group size).  Entry  
<font face="sans-serif"> i</font> specifies the displacement (relative to <font face="sans-serif"> sendbuf</font>) from  
which to take the outgoing data to process <font face="sans-serif"> i</font></TD></TR>  
<TR><TD> IN  sendtype</TD><TD> data type of send buffer elements (handle)</TD></TR>  
<TR><TD> OUT  recvbuf</TD><TD> address of receive buffer (choice)</TD></TR>  
<TR><TD> IN  recvcount</TD><TD> number of elements in receive buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN  recvtype</TD><TD> data type of receive buffer elements (handle)</TD></TR>  
<TR><TD> IN  root</TD><TD>  rank of sending process (integer)</TD></TR>  
<TR><TD> IN  comm</TD><TD> communicator (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>communication request (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Iscatterv(const void* sendbuf, const int sendcounts[], const int displs[], MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request) <br></tt>  
<P> 
 <tt> MPI_Iscatterv(sendbuf, sendcounts, displs, sendtype, recvbuf, recvcount, recvtype, root, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: sendbuf <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: recvbuf <br>INTEGER, INTENT(IN), ASYNCHRONOUS :: sendcounts(*), displs(*) <br>INTEGER, INTENT(IN) :: recvcount, root <br>TYPE(MPI_Datatype), INTENT(IN) :: sendtype, recvtype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_ISCATTERV(SENDBUF, SENDCOUNTS, DISPLS, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, ROOT, COMM, REQUEST, IERROR) <br> &lt;type&gt; SENDBUF(*), RECVBUF(*) <br>INTEGER SENDCOUNTS(*), DISPLS(*), SENDTYPE, RECVCOUNT, RECVTYPE, ROOT, COMM, REQUEST, IERROR <br></tt>  
<P> 
This call starts a nonblocking variant of <font face="sans-serif"> MPI_SCATTERV</font> (see  
Section <a href="node105.htm#Node105">Scatter 
</a>).   
<P> 

<P>
<hr>
<a href="node130.htm#Node130"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node126.htm#Node126"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node132.htm#Node132"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node126.htm#Node126"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node132.htm#Node132"> Nonblocking Gather-to-all</a>
<b>Previous: </b><a href="node130.htm#Node130"> Nonblocking Gather</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
