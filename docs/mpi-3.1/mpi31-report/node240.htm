<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-dynamic/dynamic-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Spawn Example</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node240">223. Spawn Example</span></h2>
<a href="node239.htm#Node239"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node235.htm#Node235"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node240.htm#Node241"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node235.htm#Node235"> Process Manager Interface</a>
<b>Next: </b><a href="node240.htm#Node241"> Manager-worker Example Using <font face="sans-serif"> MPI_COMM_SPAWN</font></a>
<b>Previous: </b><a href="node239.htm#Node239"> Reserved Keys</a>
<p>
  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node239.htm#Node239"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node235.htm#Node235"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node240.htm#Node241"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node235.htm#Node235"> Process Manager Interface</a>
<b>Next: </b><a href="node240.htm#Node241"> Manager-worker Example Using <font face="sans-serif"> MPI_COMM_SPAWN</font></a>
<b>Previous: </b><a href="node239.htm#Node239"> Reserved Keys</a>
<p>
<hr><h3><span id="Node241">223.1. Manager-worker Example Using  MPI_COMM_SPAWN</span></h3>
<a href="node240.htm#Node240"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node240.htm#Node240"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node242.htm#Node242"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node240.htm#Node240"> Spawn Example</a>
<b>Next: </b><a href="node242.htm#Node242"> Establishing Communication</a>
<b>Previous: </b><a href="node240.htm#Node240"> Spawn Example</a>
<p>
<br> 
<pre><tt>/* manager */ 
#include "mpi.h" 
int main(int argc, char *argv[]) 
{ 
   int world_size, universe_size, *universe_sizep, flag; 
   MPI_Comm everyone;           /* intercommunicator */ 
   char worker_program[100]; 
 
   MPI_Init(&amp;argc, &amp;argv); 
   MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size); 
 
   if (world_size != 1)    error("Top heavy with management"); 
 
   MPI_Comm_get_attr(MPI_COMM_WORLD, MPI_UNIVERSE_SIZE,  
                     &amp;universe_sizep, &amp;flag);  
   if (!flag) { 
        printf("This MPI does not support UNIVERSE_SIZE. How many\n\ 
processes total?"); 
        scanf("%d", &amp;universe_size); 
   } else universe_size = *universe_sizep; 
   if (universe_size == 1) error("No room to start workers"); 
 
   /*  
    * Now spawn the workers. Note that there is a run-time determination 
    * of what type of worker to spawn, and presumably this calculation must 
    * be done at run time and cannot be calculated before starting 
    * the program. If everything is known when the application is  
    * first started, it is generally better to start them all at once 
    * in a single MPI_COMM_WORLD.  
    */ 
 
   choose_worker_program(worker_program); 
   MPI_Comm_spawn(worker_program, MPI_ARGV_NULL, universe_size-1,  
             MPI_INFO_NULL, 0, MPI_COMM_SELF, &amp;everyone,  
             MPI_ERRCODES_IGNORE); 
   /* 
    * Parallel code here. The communicator "everyone" can be used 
    * to communicate with the spawned processes, which have ranks 0,.. 
    * MPI_UNIVERSE_SIZE-1 in the remote group of the intercommunicator 
    * "everyone". 
    */ 
 
   MPI_Finalize(); 
   return 0; 
} 
</tt></pre> 
<br> 
<pre><tt>/* worker */ 
 
#include "mpi.h" 
int main(int argc, char *argv[]) 
{ 
   int size; 
   MPI_Comm parent; 
   MPI_Init(&amp;argc, &amp;argv); 
   MPI_Comm_get_parent(&amp;parent); 
   if (parent == MPI_COMM_NULL) error("No parent!"); 
   MPI_Comm_remote_size(parent, &amp;size); 
   if (size != 1) error("Something's wrong with the parent"); 
 
   /* 
    * Parallel code here.  
    * The manager is represented as the process with rank 0 in (the remote 
    * group of) the parent communicator.  If the workers need to communicate 
    * among themselves, they can use MPI_COMM_WORLD. 
    */ 
 
   MPI_Finalize(); 
   return 0; 
} 
 
 
</tt></pre> 

<P>
<hr>
<a href="node240.htm#Node240"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node240.htm#Node240"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node242.htm#Node242"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node240.htm#Node240"> Spawn Example</a>
<b>Next: </b><a href="node242.htm#Node242"> Establishing Communication</a>
<b>Previous: </b><a href="node240.htm#Node240"> Spawn Example</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
