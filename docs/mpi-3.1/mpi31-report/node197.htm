<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-topol/topol.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Cartesian Shift Coordinates</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node197">185. Cartesian Shift Coordinates</span></h2>
<a href="node196.htm#Node196"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node191.htm#Node191"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node198.htm#Node198"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node191.htm#Node191"> Topology Constructors</a>
<b>Next: </b><a href="node198.htm#Node198"> Partitioning of Cartesian Structures</a>
<b>Previous: </b><a href="node196.htm#Node196"> Topology Inquiry Functions</a>
<p>
  
<P> 
If the process topology is a Cartesian structure, an   
<font face="sans-serif"> MPI_SENDRECV</font>  
operation may be used along a coordinate direction to perform a shift  
of data.  As input, <font face="sans-serif"> MPI_SENDRECV</font> takes the rank of a source process  
for the receive, and the rank of a destination process for the send.  If the  
function <font face="sans-serif"> MPI_CART_SHIFT</font> is called for a Cartesian process group, it  
provides the calling process with the above identifiers, which then can be  
passed to <font face="sans-serif"> MPI_SENDRECV</font>. The user specifies the coordinate direction  
and the size of the step (positive or negative).  The function is local.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_CART_SHIFT(comm, direction, disp, rank_source, rank_dest)</TD></TR>  
<TR><TD> IN  comm</TD><TD> communicator with Cartesian structure (handle)</TD></TR>  
<TR><TD> IN  direction</TD><TD> coordinate dimension of shift (integer)</TD></TR>  
<TR><TD> IN  disp</TD><TD> displacement (<i>&gt; 0</i>: upwards shift, <i>&lt; 0</i>: downwards shift) (integer)</TD></TR>  
<TR><TD> OUT  rank_source</TD><TD> rank of source process (integer)</TD></TR>  
<TR><TD> OUT  rank_dest</TD><TD> rank of destination process (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Cart_shift(MPI_Comm comm, int direction, int disp, int *rank_source, int *rank_dest) <br></tt>  
<P> 
 <tt> MPI_Cart_shift(comm, direction, disp, rank_source, rank_dest, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, INTENT(IN) :: direction, disp <br>INTEGER, INTENT(OUT) :: rank_source, rank_dest <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_CART_SHIFT(COMM, DIRECTION, DISP, RANK_SOURCE, RANK_DEST, IERROR)<br> INTEGER COMM, DIRECTION, DISP, RANK_SOURCE, RANK_DEST, IERROR <br></tt>  
  
<P> 
The <font face="sans-serif"> direction</font> argument indicates the coordinate dimension to be traversed by the shift.  
The dimensions are numbered from <font face="sans-serif"> 0</font> to <font face="sans-serif"> ndims-1</font>, where <font face="sans-serif"> ndims</font> is the number of dimensions.  
<P> 
Depending on the periodicity of the Cartesian group in the specified  
coordinate direction, <font face="sans-serif"> MPI_CART_SHIFT</font> provides the identifiers for a  
circular or an end-off shift. In the case of an end-off shift,  
the value <font face="sans-serif">  MPI_PROC_NULL</font> may be returned in <font face="sans-serif"> rank_source</font> or  
<font face="sans-serif"> rank_dest</font>,  
indicating that the source or the destination for the shift is out of range.  
 <P> 
It is erroneous to call <font face="sans-serif"> MPI_CART_SHIFT</font> with a direction that is either  
negative or greater than or equal to the number of dimensions in the Cartesian  
communicator. This implies that it is erroneous to call <font face="sans-serif"> MPI_CART_SHIFT</font> with a  
<font face="sans-serif"> comm</font> that is associated with a zero-dimensional Cartesian topology.  
<P> 
<br><b> Example</b>  
  
  
The communicator, <font face="sans-serif"> comm</font>, has a two-dimensional, periodic, Cartesian  
topology associated with it.  A two-dimensional array of <tt>REAL</tt>s is stored  
one element per process, in variable <tt>A</tt>.  One wishes to skew this array,  
by shifting column <tt>i</tt> (vertically, i.e., along the column) by  
<tt>i</tt> steps.  
<br> 
<pre><tt>.... 
! find process rank 
      CALL MPI_COMM_RANK(comm, rank, ierr) 
! find Cartesian coordinates 
      CALL MPI_CART_COORDS(comm, rank, maxdims, coords, ierr) 
! compute shift source and destination 
      CALL MPI_CART_SHIFT(comm, 0, coords(2), source, dest, ierr) 
! skew array 
      CALL MPI_SENDRECV_REPLACE(A, 1, MPI_REAL, dest, 0, source, 0, comm, &amp; 
                                status, ierr) 
</tt></pre> 
  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
In Fortran, the dimension indicated by <font face="sans-serif">  DIRECTION  
= i</font> has  
<font face="sans-serif">  DIMS(i+1)</font> nodes, where  
<font face="sans-serif">  DIMS</font> is the array that  
was used to create the grid.  In C, the dimension  
indicated by <font face="sans-serif">  direction = i</font> is the dimension specified by  
<font face="sans-serif">  dims[i]</font>.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node196.htm#Node196"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node191.htm#Node191"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node198.htm#Node198"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node191.htm#Node191"> Topology Constructors</a>
<b>Next: </b><a href="node198.htm#Node198"> Partitioning of Cartesian Structures</a>
<b>Previous: </b><a href="node196.htm#Node196"> Topology Inquiry Functions</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
