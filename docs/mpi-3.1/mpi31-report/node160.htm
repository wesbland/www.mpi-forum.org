<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Current Practice #1</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node160">153. Current Practice #1</span></h2>
<a href="node159.htm#Node159"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node161.htm#Node161"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<b>Next: </b><a href="node161.htm#Node161"> Current Practice #2</a>
<b>Previous: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<p>
  
 Example #1a:  
<br> 
<pre><tt>   int main(int argc, char *argv[]) 
   { 
     int me, size; 
     ... 
     MPI_Init ( &amp;argc, &amp;argv ); 
     MPI_Comm_rank (MPI_COMM_WORLD, &amp;me); 
     MPI_Comm_size (MPI_COMM_WORLD, &amp;size); 
 
     (void)printf ("Process %d size %d\n", me, size); 
     ... 
     MPI_Finalize(); 
     return 0; 
   } 
</tt></pre> 
Example #1a is a do-nothing program that initializes itself,  
and refers to the ``all'' communicator, and prints a message.  It  
terminates itself too. This example does not imply that <font face="sans-serif"> MPI</font>  
supports <tt>printf</tt>-like communication itself.  
<P> 
 Example #1b (supposing that <tt>size</tt> is even):  
<br> 
<pre><tt>    int main(int argc, char *argv[]) 
    { 
       int me, size; 
       int SOME_TAG = 0; 
       ... 
       MPI_Init(&amp;argc, &amp;argv); 
 
       MPI_Comm_rank(MPI_COMM_WORLD, &amp;me);   /* local */ 
       MPI_Comm_size(MPI_COMM_WORLD, &amp;size); /* local */ 
 
       if((me % 2) == 0) 
       { 
          /* send unless highest-numbered process */ 
          if((me + 1) &lt; size) 
             MPI_Send(..., me + 1, SOME_TAG, MPI_COMM_WORLD); 
       } 
       else 
          MPI_Recv(..., me - 1, SOME_TAG, MPI_COMM_WORLD, &amp;status); 
 
       ... 
       MPI_Finalize(); 
       return 0; 
    } 
</tt></pre> 
Example #1b schematically illustrates  
message exchanges between ``even'' and ``odd'' processes in the ``all''  
communicator.  
<P> 

<P>
<hr>
<a href="node159.htm#Node159"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node161.htm#Node161"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<b>Next: </b><a href="node161.htm#Node161"> Current Practice #2</a>
<b>Previous: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
