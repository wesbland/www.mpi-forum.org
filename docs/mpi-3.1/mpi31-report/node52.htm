<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-pt2pt/pt2pt.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Passing <font face="sans-serif">  MPI_STATUS_IGNORE</font> for Status</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node52">48. Passing   MPI_STATUS_IGNORE for Status</span></h2>
<a href="node51.htm#Node51"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node46.htm#Node46"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node53.htm#Node53"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node46.htm#Node46"> Blocking Send and Receive Operations</a>
<b>Next: </b><a href="node53.htm#Node53"> Data Type Matching and Data Conversion</a>
<b>Previous: </b><a href="node51.htm#Node51"> Return Status</a>
<p>
  
   
<P> 
Every call to <font face="sans-serif"> MPI_RECV</font> includes a <font face="sans-serif"> status</font> argument, wherein  
the system can return details about the message received.  
There are also a number of other <font face="sans-serif"> MPI</font> calls  
where <font face="sans-serif"> status</font> is returned.  
An object of type  
<font face="sans-serif"> MPI_Status</font> is not an <font face="sans-serif"> MPI</font> opaque object; its structure is declared  
in <tt>mpi.h</tt> and <tt>mpif.h</tt>, and it exists in the user's program.  In many  
cases, application programs are constructed so that it is unnecessary for them  
to examine the <tt> status</tt> fields.  In these cases, it is a waste for the user  
to allocate a status object, and it is particularly wasteful for the <font face="sans-serif"> MPI</font>  
implementation to fill in fields in this object.  
<P> 
To cope with this problem, there are two predefined constants,  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> and   
<font face="sans-serif">  MPI_STATUSES_IGNORE</font>,  
which when  
passed to a receive,   
probe,  
wait, or test function, inform the implementation that  
the status fields are not to be filled in.  Note that  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> is not a special type of <font face="sans-serif"> MPI_Status</font>  
object; rather, it is a special value for the argument.  In C one would expect  
it to be <font face="sans-serif">  NULL</font>, not the address of a special <font face="sans-serif"> MPI_Status</font>.  
<P> 
<font face="sans-serif">  MPI_STATUS_IGNORE</font>, and the array version  
<font face="sans-serif">  MPI_STATUSES_IGNORE</font>, can be used everywhere a status argument is  
passed to a receive, wait, or test function.  <font face="sans-serif">  MPI_STATUS_IGNORE</font>  
cannot be used when status is an IN argument.  
Note that in Fortran <font face="sans-serif">  MPI_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_STATUSES_IGNORE</font> are  
objects like <font face="sans-serif">  MPI_BOTTOM</font> (not usable for initialization or  
assignment).  See Section <a href="node28.htm#Node28">Named Constants 
</a>.  
<P> 
In general, this optimization can apply to all functions for which  
<font face="sans-serif"> status</font> or an array of <font face="sans-serif"> status</font>es is an OUT argument.  
Note that this converts <font face="sans-serif"> status</font> into an INOUT argument.  
The functions that can be passed <font face="sans-serif">  MPI_STATUS_IGNORE</font> are all the various forms of  
<font face="sans-serif"> MPI_RECV</font>,   
<font face="sans-serif"> MPI_PROBE</font>,  
<font face="sans-serif"> MPI_TEST</font>, and <font face="sans-serif"> MPI_WAIT</font>, as well as  
<font face="sans-serif"> MPI_REQUEST_GET_STATUS</font>.  
When an array is passed, as in the   
<font face="sans-serif"> </font><font face="sans-serif"> MPI_</font> {<font face="sans-serif"> TEST<i>|</i>WAIT</font> }{<font face="sans-serif"> ALL<i>|</i>SOME</font> }</font>  
functions, a separate constant, <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, is passed for  
the array argument.  
It is possible for an <font face="sans-serif"> MPI</font> function to return <font face="sans-serif">  MPI_ERR_IN_STATUS</font>  
even when <font face="sans-serif">  MPI_STATUS_IGNORE</font> or <font face="sans-serif">  MPI_STATUSES_IGNORE</font> has  
been passed to that function.  
<P> 
<font face="sans-serif">  MPI_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_STATUSES_IGNORE</font> are not  
required to have the same values in C and Fortran.   
<P> 
It is not allowed to have some of the statuses in an array of statuses for  
<font face="sans-serif"> </font><font face="sans-serif"> MPI_</font> {<font face="sans-serif"> TEST<i>|</i>WAIT</font> }{<font face="sans-serif"> ALL<i>|</i>SOME</font> }</font>  
functions set to  
<font face="sans-serif">  MPI_STATUS_IGNORE</font>;  one either specifies ignoring <em> all</em> of  
the statuses in such a call with <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, or <em> none</em>  
of them by passing normal statuses in all positions in the array  
of statuses.  
<P> 

<P>
<hr>
<a href="node51.htm#Node51"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node46.htm#Node46"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node53.htm#Node53"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node46.htm#Node46"> Blocking Send and Receive Operations</a>
<b>Next: </b><a href="node53.htm#Node53"> Data Type Matching and Data Conversion</a>
<b>Previous: </b><a href="node51.htm#Node51"> Return Status</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
