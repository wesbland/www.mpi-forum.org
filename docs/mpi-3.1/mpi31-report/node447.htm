<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-binding/binding-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Status</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node447">380. Status</span></h2>
<a href="node446.htm#Node446"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node442.htm#Node442"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node448.htm#Node448"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node442.htm#Node442"> Language Interoperability</a>
<b>Next: </b><a href="node448.htm#Node448"> <font face="sans-serif"> MPI</font> Opaque Objects</a>
<b>Previous: </b><a href="node446.htm#Node446"> Transfer of Handles</a>
<p>
  
   
<P> 
The following two procedures are provided in C to convert from a  
Fortran (with the <tt>mpi</tt> module or <tt>mpif.h</tt>)   
status (which is an array of integers) to a C status (which is  
a structure), and vice versa.    
The conversion occurs on all the information in status, including that which  
is hidden.  That is, no status information is lost in the conversion.   
<P> 
 <tt> int MPI_Status_f2c(const MPI_Fint *f_status, MPI_Status *c_status) <br></tt>  
<P> 
If <font face="sans-serif"> f_status</font> is a valid Fortran status, but not the Fortran value of  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> or <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, then  
<font face="sans-serif"> MPI_Status_f2c</font> returns in <font face="sans-serif"> c_status</font> a valid C status with  
the same content.  If <font face="sans-serif"> f_status</font> is the Fortran value of  
<font face="sans-serif">  MPI_STATUS_IGNORE</font> or <font face="sans-serif">  MPI_STATUSES_IGNORE</font>, or if  
<font face="sans-serif"> f_status</font> is not a valid Fortran status, then the call is erroneous.  
<P> 
The C status has the same source, tag and error code values as the  
Fortran status, and returns the same answers when queried for count,  
elements, and cancellation.  
The conversion function may be called with a Fortran status argument that  
has  
an undefined error field, in which case the value of the error field  
in the C status argument is undefined.  
<P> 
Two global variables of type <tt>MPI_Fint*</tt>,  
<font face="sans-serif">  MPI_F_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_F_STATUSES_IGNORE</font>  
are declared in mpi.h.  They can be used to test, in C, whether  
<font face="sans-serif"> f_status</font> is the Fortran value of <font face="sans-serif">  MPI_STATUS_IGNORE</font>  
or <font face="sans-serif">  MPI_STATUSES_IGNORE</font>  
defined in the <tt>mpi</tt> module or <tt>mpif.h</tt>.    
These are global  
variables, not C constant expressions and cannot be used in places  
where C requires constant expressions. Their value is defined only  
between the calls to <font face="sans-serif"> MPI_INIT</font> and <font face="sans-serif"> MPI_FINALIZE</font>  
and should not be changed by user code.  
<P> 
To do the conversion in the other direction, we have the following:  
<P> 
 <tt> int MPI_Status_c2f(const MPI_Status *c_status, MPI_Fint *f_status) <br></tt>  
<P> 
This call converts a C status into a Fortran status, and has a behavior  
similar to <font face="sans-serif"> MPI_Status_f2c</font>.  That is, the value of  
<font face="sans-serif"> c_status</font> must not be either <font face="sans-serif">  MPI_STATUS_IGNORE</font> or  
<font face="sans-serif">  MPI_STATUSES_IGNORE</font>.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
There exists no separate   
conversion function for arrays of statuses, since one  
can simply loop through the array, converting each status  
with the routines in Figure <a href="node447.htm#Figure33">33 
</a>.  
 (<em> End of advice to users.</em>) <br> 
 
<br> 
<em> Rationale.</em>  
<P> 
The handling of <font face="sans-serif">  MPI_STATUS_IGNORE</font> is required in order to  
layer libraries with only a C wrapper: if the Fortran call has passed  
<font face="sans-serif">  MPI_STATUS_IGNORE</font>, then the C wrapper must handle this  
correctly.  
Note that this constant need not have the same value in  
Fortran and C.  If <font face="sans-serif"> MPI_Status_f2c</font> were to handle  
<font face="sans-serif">  MPI_STATUS_IGNORE</font>, then the type of its result would have to be  
<tt>MPI_Status**</tt>, which was considered an inferior solution.  
 (<em> End of rationale.</em>) <br> 
Using the <tt>mpi_f08</tt> Fortran module, a status is declared   
as <tt> TYPE(MPI_Status)</tt>.  
The C type <tt> MPI_F08_status</tt>   
can be used to pass a   
Fortran <tt> TYPE(MPI_Status)</tt> argument  
into a C routine.   
Figure <a href="node447.htm#Figure33">33 
</a> illustrates all status conversion  
routines. Some are only available in C, some in both C and Fortran.  
<div style=\"text-align:center\"><P><img width=509 height=399 src="status-conversion-triangle.gif" alt="Image file"><P>
</div>  
<br> 
<b>Figure 33: </b><span id="Figure33">Status conversion routines</span><P> 
  
  
 <tt> int MPI_Status_f082c(const MPI_F08_status *f08_status, MPI_Status *c_status) <br></tt>  
<P> 
This C routine converts a Fortran <tt>mpi_f08</tt> <tt> TYPE(MPI_Status)</tt>  
into a C <tt> MPI_Status</tt>.   
<P> 
 <tt> int MPI_Status_c2f08(const MPI_Status *c_status, MPI_F08_status *f08_status) <br></tt>  
<P> 
This C routine converts a C <tt> MPI_Status</tt>  
into a Fortran <tt>mpi_f08</tt> <tt> TYPE(MPI_Status)</tt>.  
Two global variables of type <tt>MPI_F08_status*</tt>,  
<font face="sans-serif">  MPI_F08_STATUS_IGNORE</font> and <font face="sans-serif">  MPI_F08_STATUSES_IGNORE</font>  
are declared in mpi.h.  They can be used to test, in C, whether  
<font face="sans-serif"> f_status</font> is the Fortran value of <font face="sans-serif">  MPI_STATUS_IGNORE</font>  
or <font face="sans-serif">  MPI_STATUSES_IGNORE</font> defined in the <tt>mpi_f08</tt> module.    
These are global  
variables, not C constant expressions and cannot be used in places  
where C requires constant expressions. Their value is defined only  
between the calls to <font face="sans-serif"> MPI_INIT</font> and <font face="sans-serif"> MPI_FINALIZE</font>  
and should not be changed by user code.  
<P> 
Conversion between the two Fortran versions of a status can be done with:  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_STATUS_F2F08(f_status, f08_status)</TD></TR>  
<TR><TD> IN f_status</TD><TD>status object declared as array</TD></TR>  
<TR><TD> OUT f08_status</TD><TD>status object declared as named type</TD></TR>  
</TABLE>  
 <tt> int MPI_Status_f2f08(MPI_Fint *f_status, MPI_F08_status *f08_status) <br></tt>  
 <tt> MPI_Status_f2f08(f_status, f08_status, ierror) <br> INTEGER, INTENT(IN) :: f_status(MPI_STATUS_SIZE) <br>TYPE(MPI_Status), INTENT(OUT) :: f08_status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror  <br></tt>  
 <tt> MPI_STATUS_F2F08(F_STATUS, F08_STATUS, IERROR)<br> INTEGER :: F_STATUS(MPI_STATUS_SIZE) <br>TYPE(MPI_Status) :: F08_STATUS <br>INTEGER IERROR <br></tt>  
<P> 
This routine converts a Fortran <tt> INTEGER</tt>, <tt> DIMENSION(MPI_STATUS_SIZE)</tt> status array  
into a Fortran <tt>mpi_f08</tt> <tt> TYPE(MPI_Status)</tt>.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_STATUS_F082F(f08_status, f_status)</TD></TR>  
<TR><TD> IN f08_status</TD><TD>status object declared as named type</TD></TR>  
<TR><TD> OUT f_status</TD><TD>status object declared as array</TD></TR>  
</TABLE>  
 <tt> int MPI_Status_f082f(MPI_F08_status *f08_status, MPI_Fint *f_status) <br></tt>  
 <tt> MPI_Status_f082f(f08_status, f_status, ierror) <br> TYPE(MPI_Status), INTENT(IN) :: f08_status <br>INTEGER, INTENT(OUT) :: f_status(MPI_STATUS_SIZE) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_STATUS_F082F(F08_STATUS, F_STATUS, IERROR)<br> TYPE(MPI_Status) :: F08_STATUS <br>INTEGER :: F_STATUS(MPI_STATUS_SIZE) <br>INTEGER IERROR <br></tt>  
<P> 
This routine converts a Fortran <tt>mpi_f08</tt> <tt> TYPE(MPI_Status)</tt>  
into a Fortran <tt> INTEGER</tt>, <tt> DIMENSION(MPI_STATUS_SIZE)</tt> status array.  
<P> 
<P> 
<P> 
<P> 
<P> 

<P>
<hr>
<a href="node446.htm#Node446"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node442.htm#Node442"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node448.htm#Node448"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node442.htm#Node442"> Language Interoperability</a>
<b>Next: </b><a href="node448.htm#Node448"> <font face="sans-serif"> MPI</font> Opaque Objects</a>
<b>Previous: </b><a href="node446.htm#Node446"> Transfer of Handles</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
