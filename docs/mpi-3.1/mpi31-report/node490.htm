<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-F2008Names.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>MPI Environmental Management Fortran 2008 Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node490">416. MPI Environmental Management Fortran 2008 Bindings</span></h2>
<a href="node489.htm#Node489"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node491.htm#Node491"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node491.htm#Node491"> The Info Object Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node489.htm#Node489"> Process Topologies Fortran 2008 Bindings</a>
<p>
 <tt> DOUBLE PRECISION MPI_Wtick() <br></tt>  
 <tt> DOUBLE PRECISION MPI_Wtime() <br></tt>  
 <tt> MPI_Abort(comm, errorcode, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, INTENT(IN) :: errorcode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Add_error_class(errorclass, ierror) <br> INTEGER, INTENT(OUT) :: errorclass <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Add_error_code(errorclass, errorcode, ierror) <br> INTEGER, INTENT(IN) :: errorclass <br>INTEGER, INTENT(OUT) :: errorcode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Add_error_string(errorcode, string, ierror) <br> INTEGER, INTENT(IN) :: errorcode <br>CHARACTER(LEN=*), INTENT(IN) :: string <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Alloc_mem(size, info, baseptr, ierror) <br> USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: size <br>TYPE(MPI_Info), INTENT(IN) :: info <br>TYPE(C_PTR), INTENT(OUT) :: baseptr <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_call_errhandler(comm, errorcode, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, INTENT(IN) :: errorcode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_create_errhandler(comm_errhandler_fn, errhandler, ierror) <br> PROCEDURE(MPI_Comm_errhandler_function) :: comm_errhandler_fn <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_get_errhandler(comm, errhandler, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_set_errhandler(comm, errhandler, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Errhandler), INTENT(IN) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Errhandler_free(errhandler, ierror) <br> TYPE(MPI_Errhandler), INTENT(INOUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Error_class(errorcode, errorclass, ierror) <br> INTEGER, INTENT(IN) :: errorcode <br>INTEGER, INTENT(OUT) :: errorclass <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Error_string(errorcode, string, resultlen, ierror) <br> INTEGER, INTENT(IN) :: errorcode <br>CHARACTER(LEN=MPI_MAX_ERROR_STRING), INTENT(OUT) :: string <br>INTEGER, INTENT(OUT) :: resultlen <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_call_errhandler(fh, errorcode, ierror) <br> TYPE(MPI_File), INTENT(IN) :: fh <br>INTEGER, INTENT(IN) :: errorcode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_create_errhandler(file_errhandler_fn, errhandler, ierror) <br> PROCEDURE(MPI_File_errhandler_function) :: file_errhandler_fn <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_get_errhandler(file, errhandler, ierror) <br> TYPE(MPI_File), INTENT(IN) :: file <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_File_set_errhandler(file, errhandler, ierror) <br> TYPE(MPI_File), INTENT(IN) :: file <br>TYPE(MPI_Errhandler), INTENT(IN) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Finalize(ierror) <br> INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Finalized(flag, ierror) <br> LOGICAL, INTENT(OUT) :: flag <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Free_mem(base, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: base <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Get_library_version(version, resultlen, ierror) <br> CHARACTER(LEN=MPI_MAX_LIBRARY_VERSION_STRING), INTENT(OUT) :: version <br>INTEGER, INTENT(OUT) :: resultlen <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Get_processor_name(name, resultlen, ierror) <br> CHARACTER(LEN=MPI_MAX_PROCESSOR_NAME), INTENT(OUT) :: name <br>INTEGER, INTENT(OUT) :: resultlen <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Get_version(version, subversion, ierror) <br> INTEGER, INTENT(OUT) :: version, subversion <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Init(ierror) <br> INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Initialized(flag, ierror) <br> LOGICAL, INTENT(OUT) :: flag <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Win_call_errhandler(win, errorcode, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: win <br>INTEGER, INTENT(IN) :: errorcode <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Win_create_errhandler(win_errhandler_fn, errhandler, ierror) <br> PROCEDURE(MPI_Win_errhandler_function) :: win_errhandler_fn <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Win_get_errhandler(win, errhandler, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: win <br>TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Win_set_errhandler(win, errhandler, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: win <br>TYPE(MPI_Errhandler), INTENT(IN) :: errhandler <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
<P> 

<P>
<hr>
<a href="node489.htm#Node489"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node491.htm#Node491"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node491.htm#Node491"> The Info Object Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node489.htm#Node489"> Process Topologies Fortran 2008 Bindings</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
