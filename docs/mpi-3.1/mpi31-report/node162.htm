<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>(Approximate) Current Practice #3</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node162">155. (Approximate) Current Practice #3</span></h2>
<a href="node161.htm#Node161"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node163.htm#Node163"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<b>Next: </b><a href="node163.htm#Node163"> Example #4</a>
<b>Previous: </b><a href="node161.htm#Node161"> Current Practice #2</a>
<p>
  
<br> 
<pre><tt>  int main(int argc, char *argv[]) 
  { 
    int me, count, count2; 
    void *send_buf, *recv_buf, *send_buf2, *recv_buf2; 
    MPI_Group group_world, grprem; 
    MPI_Comm commslave; 
    static int ranks[] = {0}; 
    ... 
    MPI_Init(&amp;argc, &amp;argv); 
    MPI_Comm_group(MPI_COMM_WORLD, &amp;group_world); 
    MPI_Comm_rank(MPI_COMM_WORLD, &amp;me);  /* local */ 
 
    MPI_Group_excl(group_world, 1, ranks, &amp;grprem);  /* local */ 
    MPI_Comm_create(MPI_COMM_WORLD, grprem, &amp;commslave); 
 
    if(me != 0) 
    { 
      /* compute on slave */ 
      ... 
      MPI_Reduce(send_buf,recv_buf,count, MPI_INT, MPI_SUM, 1, commslave); 
      ... 
      MPI_Comm_free(&amp;commslave); 
    } 
    /* zero falls through immediately to this reduce, others do later... */ 
    MPI_Reduce(send_buf2, recv_buf2, count2, 
               MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD); 
 
    MPI_Group_free(&amp;group_world); 
    MPI_Group_free(&amp;grprem); 
    MPI_Finalize(); 
    return 0; 
  } 
</tt></pre> 
This example illustrates how a group consisting of all but the zeroth  
process of the ``all'' group is created, and then how a communicator  
is formed   
(<font face="sans-serif"> commslave</font>)   
for that new group.  The new communicator is used in  
a collective call, and all processes execute a collective call  
in the <font face="sans-serif">  MPI_COMM_WORLD</font> context.  This example illustrates  
how the two communicators (that inherently possess distinct contexts) protect  
communication.  That is, communication in <font face="sans-serif">  MPI_COMM_WORLD</font> is  
insulated from communication in <font face="sans-serif">  commslave</font>, and vice versa.  
<P> 
In summary, ``group safety'' is achieved via communicators because  
distinct contexts within communicators are enforced to be unique on  
any process.  
<P> 

<P>
<hr>
<a href="node161.htm#Node161"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node163.htm#Node163"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Motivating Examples</a>
<b>Next: </b><a href="node163.htm#Node163"> Example #4</a>
<b>Previous: </b><a href="node161.htm#Node161"> Current Practice #2</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
