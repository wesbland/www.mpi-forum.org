<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Nonblocking Gather-to-all</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node132">125. Nonblocking Gather-to-all</span></h2>
<a href="node131.htm#Node131"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node126.htm#Node126"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node133.htm#Node133"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node126.htm#Node126"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node133.htm#Node133"> Nonblocking All-to-All Scatter/Gather</a>
<b>Previous: </b><a href="node131.htm#Node131"> Nonblocking Scatter</a>
<p>
  
  
<P> 
<P><img width=362 height=236 src="img135.gif" alt="Image file"><P>
 <tt> int MPI_Iallgather(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request) <br></tt>  
<P> 
 <tt> MPI_Iallgather(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: sendbuf <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: recvbuf <br>INTEGER, INTENT(IN) :: sendcount, recvcount <br>TYPE(MPI_Datatype), INTENT(IN) :: sendtype, recvtype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_IALLGATHER(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; SENDBUF(*), RECVBUF(*) <br>INTEGER SENDCOUNT, SENDTYPE, RECVCOUNT, RECVTYPE, COMM, REQUEST, IERROR <br></tt>  
<P> 
This call starts a nonblocking variant of <font face="sans-serif"> MPI_ALLGATHER</font>  
(see Section <a href="node107.htm#Node107">Gather-to-all 
</a>).   
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_IALLGATHERV(sendbuf, sendcount, sendtype, recvbuf,  
recvcounts, displs, recvtype, comm, request)</TD></TR>  
<TR><TD> IN  sendbuf</TD><TD> starting address of send buffer (choice)</TD></TR>  
<TR><TD> IN  sendcount</TD><TD> number of elements in send buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN  sendtype</TD><TD> data type of send buffer elements (handle)</TD></TR>  
<TR><TD> OUT  recvbuf</TD><TD> address of receive buffer (choice)</TD></TR>  
<TR><TD> IN  recvcounts</TD><TD>non-negative  
integer array (of length group size)  
containing the number of elements that are received from each process</TD></TR>  
<TR><TD> IN  displs</TD><TD> integer array (of length group size).  Entry  
<font face="sans-serif"> i</font> specifies the displacement (relative to <font face="sans-serif"> recvbuf</font>) at  
which to place the incoming data from process <font face="sans-serif"> i</font></TD></TR>  
<TR><TD> IN  recvtype</TD><TD> data type of receive buffer elements (handle)</TD></TR>  
<TR><TD> IN  comm</TD><TD>  communicator (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>communication request (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Iallgatherv(const void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request* request) <br></tt>  
<P> 
 <tt> MPI_Iallgatherv(sendbuf, sendcount, sendtype, recvbuf, recvcounts, displs, recvtype, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: sendbuf <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: recvbuf <br>INTEGER, INTENT(IN) :: sendcount <br>INTEGER, INTENT(IN), ASYNCHRONOUS :: recvcounts(*), displs(*) <br>TYPE(MPI_Datatype), INTENT(IN) :: sendtype, recvtype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_IALLGATHERV(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNTS, DISPLS, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; SENDBUF(*), RECVBUF(*) <br>INTEGER SENDCOUNT, SENDTYPE, RECVCOUNTS(*), DISPLS(*), RECVTYPE, COMM, REQUEST, IERROR <br></tt>  
<P> 
This call starts a nonblocking variant of <font face="sans-serif"> MPI_ALLGATHERV</font> (see  
Section <a href="node107.htm#Node107">Gather-to-all 
</a>).   
<P> 

<P>
<hr>
<a href="node131.htm#Node131"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node126.htm#Node126"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node133.htm#Node133"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node126.htm#Node126"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node133.htm#Node133"> Nonblocking All-to-All Scatter/Gather</a>
<b>Previous: </b><a href="node131.htm#Node131"> Nonblocking Scatter</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
