<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-F2008Names.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Point-to-Point Communication Fortran 2008 Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node485">411. Point-to-Point Communication Fortran 2008 Bindings</span></h2>
<a href="node484.htm#Node484"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node486.htm#Node486"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node486.htm#Node486"> Datatypes Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<p>
 <tt> MPI_Bsend(buf, count, datatype, dest, tag, comm, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Bsend_init(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Buffer_attach(buffer, size, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buffer <br>INTEGER, INTENT(IN) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Buffer_detach(buffer_addr, size, ierror) <br> USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), INTENT(OUT) :: buffer_addr <br>INTEGER, INTENT(OUT) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Cancel(request, ierror) <br> TYPE(MPI_Request), INTENT(IN) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Get_count(status, datatype, count, ierror) <br> TYPE(MPI_Status), INTENT(IN) :: status <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>INTEGER, INTENT(OUT) :: count <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Ibsend(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Improbe(source, tag, comm, flag, message, status, ierror) <br> INTEGER, INTENT(IN) :: source, tag <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Message), INTENT(OUT) :: message <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Imrecv(buf, count, datatype, message, request, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Message), INTENT(INOUT) :: message <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Iprobe(source, tag, comm, flag, status, ierror) <br> INTEGER, INTENT(IN) :: source, tag <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Irecv(buf, count, datatype, source, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, source, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Irsend(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Isend(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Issend(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Mprobe(source, tag, comm, message, status, ierror) <br> INTEGER, INTENT(IN) :: source, tag <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Message), INTENT(OUT) :: message <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Mrecv(buf, count, datatype, message, status, ierror) <br> TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Message), INTENT(INOUT) :: message <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Probe(source, tag, comm, status, ierror) <br> INTEGER, INTENT(IN) :: source, tag <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Recv(buf, count, datatype, source, tag, comm, status, ierror) <br> TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count, source, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Recv_init(buf, count, datatype, source, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, source, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Request_free(request, ierror) <br> TYPE(MPI_Request), INTENT(INOUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Request_get_status(request, flag, status, ierror) <br> TYPE(MPI_Request), INTENT(IN) :: request <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Rsend(buf, count, datatype, dest, tag, comm, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Rsend_init(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Send(buf, count, datatype, dest, tag, comm, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Send_init(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Sendrecv(sendbuf, sendcount, sendtype, dest, sendtag, recvbuf, recvcount, recvtype, source, recvtag, comm, status, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN) :: sendbuf <br>TYPE(*), DIMENSION(..) :: recvbuf <br>INTEGER, INTENT(IN) :: sendcount, dest, sendtag, recvcount, source,<br>    recvtag <br>TYPE(MPI_Datatype), INTENT(IN) :: sendtype, recvtype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Sendrecv_replace(buf, count, datatype, dest, sendtag, source, recvtag, comm, status, ierror) <br> TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count, dest, sendtag, source, recvtag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Ssend(buf, count, datatype, dest, tag, comm, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN) :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Ssend_init(buf, count, datatype, dest, tag, comm, request, ierror) <br> TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count, dest, tag <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Start(request, ierror) <br> TYPE(MPI_Request), INTENT(INOUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Startall(count, array_of_requests, ierror) <br> INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(count) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Test(request, flag, status, ierror) <br> TYPE(MPI_Request), INTENT(INOUT) :: request <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Test_cancelled(status, flag, ierror) <br> TYPE(MPI_Status), INTENT(IN) :: status <br>LOGICAL, INTENT(OUT) :: flag <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Testall(count, array_of_requests, flag, array_of_statuses, ierror) <br> INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(count) <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Status) :: array_of_statuses(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Testany(count, array_of_requests, index, flag, status, ierror) <br> INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(count) <br>INTEGER, INTENT(OUT) :: index <br>LOGICAL, INTENT(OUT) :: flag <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Testsome(incount, array_of_requests, outcount, array_of_indices, array_of_statuses, ierror) <br> INTEGER, INTENT(IN) :: incount <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(incount) <br>INTEGER, INTENT(OUT) :: outcount, array_of_indices(*) <br>TYPE(MPI_Status) :: array_of_statuses(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Wait(request, status, ierror) <br> TYPE(MPI_Request), INTENT(INOUT) :: request <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Waitall(count, array_of_requests, array_of_statuses, ierror) <br> INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(count) <br>TYPE(MPI_Status) :: array_of_statuses(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Waitany(count, array_of_requests, index, status, ierror) <br> INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(count) <br>INTEGER, INTENT(OUT) :: index <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Waitsome(incount, array_of_requests, outcount, array_of_indices, array_of_statuses, ierror) <br> INTEGER, INTENT(IN) :: incount <br>TYPE(MPI_Request), INTENT(INOUT) :: array_of_requests(incount) <br>INTEGER, INTENT(OUT) :: outcount, array_of_indices(*) <br>TYPE(MPI_Status) :: array_of_statuses(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
<P> 

<P>
<hr>
<a href="node484.htm#Node484"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node486.htm#Node486"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node486.htm#Node486"> Datatypes Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
