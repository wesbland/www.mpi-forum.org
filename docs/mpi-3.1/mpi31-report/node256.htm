<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-dynamic/dynamic-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Releasing Connections</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node256">235. Releasing Connections</span></h2>
<a href="node255.htm#Node255"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node252.htm#Node252"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node257.htm#Node257"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node252.htm#Node252"> Other Functionality</a>
<b>Next: </b><a href="node257.htm#Node257"> Another Way to Establish <font face="sans-serif"> MPI</font> Communication</a>
<b>Previous: </b><a href="node255.htm#Node255"> <font face="sans-serif">  MPI_APPNUM</font></a>
<p>
  
Before a client and server connect, they are independent  
<font face="sans-serif"> MPI</font> applications. An error in one does not affect the other.   
After establishing a connection with <font face="sans-serif"> MPI_COMM_CONNECT</font>  
and <font face="sans-serif"> MPI_COMM_ACCEPT</font>, an error in one may  
affect the other.   
It is desirable for a client and server to be   
able to disconnect, so that an error in one will  
not affect the other. Similarly, it might be desirable for  
a parent and child to disconnect, so that errors  
in the child do not affect the parent, or vice-versa.   
<P> 
<ul> 
 
<li>Two processes are <b> connected</b> if there is a   
communication path (direct or indirect) between them. More precisely:  
  <ol> 
   
1. Two processes are connected if  
  <ol> 
     
1. they both belong   
      to the same communicator (inter- or intra-,   
      including <font face="sans-serif">  MPI_COMM_WORLD</font>) <em> or</em>  
     
<br> 
2. they have previously belonged to a communicator  
      that was freed with <font face="sans-serif"> MPI_COMM_FREE</font> instead  
      of <font face="sans-serif"> MPI_COMM_DISCONNECT</font> <em> or</em>  
     
<br> 
3. they both belong to the group of the same window or  
      filehandle.   
  </ol> 
 
<br> 
2. If A is connected to B and B to C, then A is connected to C.   
  </ol> 
 
<li>Two processes are <b> disconnected</b> (also <b> independent</b>)  
if they are not connected.   
 
<li>By the above definitions, connectivity is a transitive   
property, and divides the universe of <font face="sans-serif"> MPI</font> processes into  
disconnected (independent) sets (equivalence classes) of processes.   
 
<li>Processes which are connected, but do not share the same   
<font face="sans-serif">  MPI_COMM_WORLD</font>, may become disconnected (independent) if the  
communication path between them is broken by  
using <font face="sans-serif"> MPI_COMM_DISCONNECT</font>.  
</ul> 
<br> 
The following additional rules apply to   
<font face="sans-serif"> MPI</font> routines in other chapters:  
<ul> 
 
<li><font face="sans-serif"> MPI_FINALIZE</font> is collective over a set of  
connected processes.   
 
<li><font face="sans-serif"> MPI_ABORT</font> does not abort independent processes.   
It may abort all processes in the caller's  
<font face="sans-serif">  MPI_COMM_WORLD</font> (ignoring its <font face="sans-serif"> comm</font>  
argument). Additionally, it may abort connected processes  
as well, though it makes a ``best attempt'' to abort only  
the processes in <font face="sans-serif"> comm</font>.   
 
<li>If a process terminates without calling <font face="sans-serif"> MPI_FINALIZE</font>,  
independent processes are not affected but the effect on  
connected processes is not defined.   
</ul> 
<br> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_DISCONNECT(comm)</TD></TR>   
<TR><TD> INOUT comm</TD><TD> communicator (handle)</TD></TR>  
</TABLE>  
 <tt> int MPI_Comm_disconnect(MPI_Comm *comm) <br></tt>  
 <tt> MPI_Comm_disconnect(comm, ierror) <br> TYPE(MPI_Comm), INTENT(INOUT) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_COMM_DISCONNECT(COMM, IERROR)<br> INTEGER COMM, IERROR <br><br></tt>  
  
<P> 
This function waits for all pending communication on <font face="sans-serif"> comm</font>  
to complete internally, deallocates the communicator object, and sets the handle to  
<font face="sans-serif">  MPI_COMM_NULL</font>. It is a collective operation.   
<P> 
It may not be called with the communicator  
<font face="sans-serif">  MPI_COMM_WORLD</font> or <font face="sans-serif">  MPI_COMM_SELF</font>.  
<P> 
<font face="sans-serif"> MPI_COMM_DISCONNECT</font> may be called only if  
all communication is complete and matched, so that buffered  
data can be delivered to its destination. This requirement is   
the same as for <font face="sans-serif"> MPI_FINALIZE</font>.   
<P> 
<font face="sans-serif"> MPI_COMM_DISCONNECT</font> has the same action as   
<font face="sans-serif"> MPI_COMM_FREE</font>, except that it waits for pending   
communication to finish internally and enables the  
guarantee about the behavior of disconnected processes.   
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
To disconnect two processes you may need to call  
<font face="sans-serif"> MPI_COMM_DISCONNECT</font>, <font face="sans-serif"> MPI_WIN_FREE</font>,  
and <font face="sans-serif"> MPI_FILE_CLOSE</font> to remove all communication paths  
between the two processes.  Note that it may be necessary to  
disconnect several communicators (or to free several windows or files)  
before two processes are completely independent.  
 (<em> End of advice to users.</em>) <br> 
 
<br> 
<em> Rationale.</em>  
<P> 
It would be nice to be able to use <font face="sans-serif"> MPI_COMM_FREE</font> instead,  
but that function explicitly does not wait for pending  
communication to complete.   
 (<em> End of rationale.</em>) <br> 

<P>
<hr>
<a href="node255.htm#Node255"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node252.htm#Node252"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node257.htm#Node257"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node252.htm#Node252"> Other Functionality</a>
<b>Next: </b><a href="node257.htm#Node257"> Another Way to Establish <font face="sans-serif"> MPI</font> Communication</a>
<b>Previous: </b><a href="node255.htm#Node255"> <font face="sans-serif">  MPI_APPNUM</font></a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
