<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-ei/ei-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Examples</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node298">273. Examples</span></h2>
<a href="node297.htm#Node297"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node297.htm#Node297"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node299.htm#Node299"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node297.htm#Node297"> Generalized Requests</a>
<b>Next: </b><a href="node299.htm#Node299"> Associating Information with Status</a>
<b>Previous: </b><a href="node297.htm#Node297"> Generalized Requests</a>
<p>
<br><b> Example</b>  
This example shows the code for a user-defined reduce operation on an  
<tt>int</tt> using  
a binary tree: each non-root node receives two messages, sums them,   
and sends them up.  We assume that no status is returned and that the  
operation cannot be cancelled.  
<P> 
<br> 
<pre><tt>typedef struct { 
   MPI_Comm comm; 
   int tag; 
   int root; 
   int valin; 
   int *valout; 
   MPI_Request request; 
   } ARGS; 
 
 
int myreduce(MPI_Comm comm, int tag, int root,  
              int valin, int *valout, MPI_Request *request) 
{ 
   ARGS *args; 
   pthread_t thread; 
    
   /* start request */ 
   MPI_Grequest_start(query_fn, free_fn, cancel_fn, NULL, request); 
    
   args = (ARGS*)malloc(sizeof(ARGS)); 
   args-&gt;comm = comm; 
   args-&gt;tag = tag; 
   args-&gt;root = root; 
   args-&gt;valin = valin; 
   args-&gt;valout = valout; 
   args-&gt;request = *request; 
    
   /* spawn thread to handle request */ 
   /* The availability of the pthread_create call is system dependent */ 
   pthread_create(&amp;thread, NULL, reduce_thread, args); 
    
   return MPI_SUCCESS; 
} 
 
/* thread code */ 
void* reduce_thread(void *ptr)  
{ 
   int lchild, rchild, parent, lval, rval, val; 
   MPI_Request req[2]; 
   ARGS *args; 
    
   args = (ARGS*)ptr; 
    
   /* compute left and right child and parent in tree; set  
      to MPI_PROC_NULL if does not exist  */ 
   /* code not shown */ 
   ... 
      
   MPI_Irecv(&amp;lval, 1, MPI_INT, lchild, args-&gt;tag, args-&gt;comm, &amp;req[0]); 
   MPI_Irecv(&amp;rval, 1, MPI_INT, rchild, args-&gt;tag, args-&gt;comm, &amp;req[1]); 
   MPI_Waitall(2, req, MPI_STATUSES_IGNORE); 
   val = lval + args-&gt;valin + rval; 
   MPI_Send( &amp;val, 1, MPI_INT, parent, args-&gt;tag, args-&gt;comm ); 
   if (parent == MPI_PROC_NULL) *(args-&gt;valout) = val; 
   MPI_Grequest_complete((args-&gt;request));    
   free(ptr); 
   return(NULL); 
} 
 
int query_fn(void *extra_state, MPI_Status *status) 
{ 
   /* always send just one int */ 
   MPI_Status_set_elements(status, MPI_INT, 1); 
   /* can never cancel so always true */ 
   MPI_Status_set_cancelled(status, 0); 
   /* choose not to return a value for this */ 
   status-&gt;MPI_SOURCE = MPI_UNDEFINED; 
   /* tag has no meaning for this generalized request */ 
   status-&gt;MPI_TAG = MPI_UNDEFINED; 
   /* this generalized request never fails */ 
   return MPI_SUCCESS; 
} 
 
 
int free_fn(void *extra_state) 
{ 
   /* this generalized request does not need to do any freeing */ 
   /* as a result it never fails here */ 
   return MPI_SUCCESS; 
} 
 
 
int cancel_fn(void *extra_state, int complete) 
{ 
   /* This generalized request does not support cancelling. 
      Abort if not already done.  If done then treat as if cancel failed.*/ 
   if (!complete) { 
     fprintf(stderr, 
             "Cannot cancel generalized request - aborting program\n"); 
     MPI_Abort(MPI_COMM_WORLD, 99); 
     } 
   return MPI_SUCCESS; 
} 
</tt></pre> 
  
<P> 

<P>
<hr>
<a href="node297.htm#Node297"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node297.htm#Node297"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node299.htm#Node299"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node297.htm#Node297"> Generalized Requests</a>
<b>Next: </b><a href="node299.htm#Node299"> Associating Information with Status</a>
<b>Previous: </b><a href="node297.htm#Node297"> Generalized Requests</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
