<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Window That Allocates Memory</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node262">241. Window That Allocates Memory</span></h2>
<a href="node261.htm#Node261"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node260.htm#Node260"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node263.htm#Node263"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node260.htm#Node260"> Initialization</a>
<b>Next: </b><a href="node263.htm#Node263"> Window That Allocates Shared Memory</a>
<b>Previous: </b><a href="node261.htm#Node261"> Window Creation</a>
<p>
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_ALLOCATE(size, disp_unit, info, comm, baseptr, win)</TD></TR>  
<TR><TD> IN size</TD><TD>size of window in bytes (non-negative integer)</TD></TR>  
<TR><TD> IN disp_unit</TD><TD>local unit size for displacements, in bytes (positive integer)</TD></TR>  
<TR><TD> IN info</TD><TD>info argument (handle)</TD></TR>  
<TR><TD> IN comm</TD><TD>intra-communicator (handle)</TD></TR>  
<TR><TD> OUT baseptr</TD><TD>initial address of window (choice)</TD></TR>  
<TR><TD> OUT win</TD><TD>window object returned by the call (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Win_allocate(MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, void *baseptr, MPI_Win *win) <br></tt>  
<P> 
 <tt> MPI_Win_allocate(size, disp_unit, info, comm, baseptr, win, ierror) <br> USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: size <br>INTEGER, INTENT(IN) :: disp_unit <br>TYPE(MPI_Info), INTENT(IN) :: info <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(C_PTR), INTENT(OUT) :: baseptr <br>TYPE(MPI_Win), INTENT(OUT) :: win <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_WIN_ALLOCATE(SIZE, DISP_UNIT, INFO, COMM, BASEPTR, WIN, IERROR)<br> INTEGER DISP_UNIT, INFO, COMM, WIN, IERROR <br>INTEGER(KIND=MPI_ADDRESS_KIND) SIZE, BASEPTR  <br></tt>  
<P> 
<P> 
This is a collective call executed by all processes in the group of  
<font face="sans-serif"> comm</font>. On each process, it allocates memory of at least  
<font face="sans-serif"> size</font> bytes, returns a pointer to it, and returns a window object that  
can be used by all processes in <font face="sans-serif"> comm</font> to perform <font face="sans-serif"> RMA</font>  
operations.  The returned memory consists of <font face="sans-serif"> size</font> bytes local  
to each process, starting at address <font face="sans-serif"> baseptr</font> and is associated  
with the window as if the user called <font face="sans-serif"> MPI_WIN_CREATE</font> on  
existing memory. The size argument may be different at each process and  
<font face="sans-serif"> size = 0</font> is valid; however, a library might allocate and expose  
more memory in order to create a fast, globally symmetric allocation.  
The discussion of and rationales for <font face="sans-serif"> MPI_ALLOC_MEM</font> and  
<font face="sans-serif"> MPI_FREE_MEM</font> in Section <a href="node216.htm#Node216">Memory Allocation 
</a> also apply to  
<font face="sans-serif"> MPI_WIN_ALLOCATE</font>; in particular, see the rationale in  
Section <a href="node216.htm#Node216">Memory Allocation 
</a> for an explanation of the type used for  
<font face="sans-serif"> baseptr</font>.  
 <P> 
If the Fortran compiler provides <tt> TYPE(C_PTR)</tt>,   
then the following generic interface must be provided in the <tt>mpi</tt>  
module and should be provided in <tt>mpif.h</tt> through overloading,   
i.e., with the same routine name as the  
routine with <tt> INTEGER(KIND=MPI_ADDRESS_KIND) BASEPTR</tt>,   
but with a different specific procedure name:  
 <P> 
<br> 
<pre><tt>INTERFACE MPI_WIN_ALLOCATE 
    SUBROUTINE MPI_WIN_ALLOCATE(SIZE, DISP_UNIT, INFO, COMM, BASEPTR, &amp; 
                                WIN, IERROR) 
        IMPORT ::  MPI_ADDRESS_KIND 
        INTEGER DISP_UNIT, INFO, COMM, WIN, IERROR 
        INTEGER(KIND=MPI_ADDRESS_KIND) SIZE, BASEPTR 
    END SUBROUTINE 
    SUBROUTINE MPI_WIN_ALLOCATE_CPTR(SIZE, DISP_UNIT, INFO, COMM, BASEPTR, &amp; 
                                     WIN, IERROR) 
        USE, INTRINSIC ::  ISO_C_BINDING, ONLY : C_PTR 
        IMPORT ::  MPI_ADDRESS_KIND 
        INTEGER ::  DISP_UNIT, INFO, COMM, WIN, IERROR 
        INTEGER(KIND=MPI_ADDRESS_KIND) ::  SIZE 
        TYPE(C_PTR) ::  BASEPTR 
    END SUBROUTINE 
END INTERFACE 
</tt></pre> 
The base procedure name of this overloaded function is  
<font face="sans-serif"> MPI_WIN_ALLOCATE_CPTR</font>. The implied specific procedure  
names  
are described in Section <a href="node412.htm#Node412">Interface Specifications, Procedure Names, and the Profiling Interface 
</a>.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
By allocating (potentially aligned) memory instead of allowing the user  
to pass in an arbitrary buffer, this call can improve the performance  
for systems with remote direct memory access.   
This also permits the collective allocation of memory and  
  supports what is sometimes called the ``symmetric allocation'' model  
  that can be more scalable (for example, the implementation can  
  arrange to return an address for the allocated memory that is the  
  same on all processes).  
 (<em> End of rationale.</em>) <br> 
The <font face="sans-serif"> info</font> argument can be used to specify hints  
similar to the <font face="sans-serif"> info</font> argument for <font face="sans-serif"> MPI_WIN_CREATE</font> and  
<font face="sans-serif"> MPI_ALLOC_MEM</font>.  
<P> 

<P>
<hr>
<a href="node261.htm#Node261"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node260.htm#Node260"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node263.htm#Node263"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node260.htm#Node260"> Initialization</a>
<b>Next: </b><a href="node263.htm#Node263"> Window That Allocates Shared Memory</a>
<b>Previous: </b><a href="node261.htm#Node261"> Window Creation</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
