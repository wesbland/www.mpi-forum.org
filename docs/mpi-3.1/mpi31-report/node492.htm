<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-F2008Names.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Process Creation and Management Fortran 2008 Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node492">418. Process Creation and Management Fortran 2008 Bindings</span></h2>
<a href="node491.htm#Node491"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node493.htm#Node493"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node493.htm#Node493"> One-Sided Communications Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node491.htm#Node491"> The Info Object Fortran 2008 Bindings</a>
<p>
 <tt> MPI_Close_port(port_name, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: port_name <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_accept(port_name, info, root, comm, newcomm, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: port_name <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, INTENT(IN) :: root <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Comm), INTENT(OUT) :: newcomm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_connect(port_name, info, root, comm, newcomm, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: port_name <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, INTENT(IN) :: root <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Comm), INTENT(OUT) :: newcomm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_disconnect(comm, ierror) <br> TYPE(MPI_Comm), INTENT(INOUT) :: comm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_get_parent(parent, ierror) <br> TYPE(MPI_Comm), INTENT(OUT) :: parent <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_join(fd, intercomm, ierror) <br> INTEGER, INTENT(IN) :: fd <br>TYPE(MPI_Comm), INTENT(OUT) :: intercomm <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_spawn(command, argv, maxprocs, info, root, comm, intercomm, array_of_errcodes, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: command, argv(*) <br>INTEGER, INTENT(IN) :: maxprocs, root <br>TYPE(MPI_Info), INTENT(IN) :: info <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Comm), INTENT(OUT) :: intercomm <br>INTEGER :: array_of_errcodes(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Comm_spawn_multiple(count, array_of_commands, array_of_argv, array_of_maxprocs, array_of_info, root, comm, intercomm, array_of_errcodes, ierror) <br> INTEGER, INTENT(IN) :: count, array_of_maxprocs(*), root <br>CHARACTER(LEN=*), INTENT(IN) :: array_of_commands(*) <br>CHARACTER(LEN=*), INTENT(IN) :: array_of_argv(count, *) <br>TYPE(MPI_Info), INTENT(IN) :: array_of_info(*) <br>TYPE(MPI_Comm), INTENT(IN) :: comm <br>TYPE(MPI_Comm), INTENT(OUT) :: intercomm <br>INTEGER :: array_of_errcodes(*) <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Lookup_name(service_name, info, port_name, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: service_name <br>TYPE(MPI_Info), INTENT(IN) :: info <br>CHARACTER(LEN=MPI_MAX_PORT_NAME), INTENT(OUT) :: port_name <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Open_port(info, port_name, ierror) <br> TYPE(MPI_Info), INTENT(IN) :: info <br>CHARACTER(LEN=MPI_MAX_PORT_NAME), INTENT(OUT) :: port_name <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Publish_name(service_name, info, port_name, ierror) <br> TYPE(MPI_Info), INTENT(IN) :: info <br>CHARACTER(LEN=*), INTENT(IN) :: service_name, port_name <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_Unpublish_name(service_name, info, port_name, ierror) <br> CHARACTER(LEN=*), INTENT(IN) :: service_name, port_name <br>TYPE(MPI_Info), INTENT(IN) :: info <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
<P> 

<P>
<hr>
<a href="node491.htm#Node491"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node484.htm#Node484"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node493.htm#Node493"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node484.htm#Node484"> Fortran 2008 Bindings with the mpi_f08 Module</a>
<b>Next: </b><a href="node493.htm#Node493"> One-Sided Communications Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node491.htm#Node491"> The Info Object Fortran 2008 Bindings</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
