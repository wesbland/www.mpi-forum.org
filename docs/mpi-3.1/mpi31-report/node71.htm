<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-pt2pt/pt2pt.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Matched Receives</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node71">66. Matched Receives</span></h2>
<a href="node70.htm#Node70"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node68.htm#Node68"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node72.htm#Node72"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node68.htm#Node68"> Probe and Cancel</a>
<b>Next: </b><a href="node72.htm#Node72"> Cancel</a>
<b>Previous: </b><a href="node70.htm#Node70"> Matching Probe</a>
<p>
  
  
<P> 
The functions <font face="sans-serif"> MPI_MRECV</font> and <font face="sans-serif"> MPI_IMRECV</font> receive  
messages that have been previously matched by a matching probe  
(Section <a href="node70.htm#Node70">Matching Probe 
</a>).  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_MRECV(buf, count, datatype, message, status)</TD></TR>  
<TR><TD> OUT buf</TD><TD>initial address of receive buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in receive buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each receive buffer element (handle)</TD></TR>  
<TR><TD> INOUT message</TD><TD>message (handle)</TD></TR>  
<TR><TD> OUT status</TD><TD>status object (Status)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Mrecv(void* buf, int count, MPI_Datatype datatype, MPI_Message *message, MPI_Status *status) <br></tt>  
<P> 
 <tt> MPI_Mrecv(buf, count, datatype, message, status, ierror) <br> TYPE(*), DIMENSION(..) :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Message), INTENT(INOUT) :: message <br>TYPE(MPI_Status) :: status <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_MRECV(BUF, COUNT, DATATYPE, MESSAGE, STATUS, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, MESSAGE, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
<P> 
This call receives a message matched by a matching probe operation  
(Section <a href="node70.htm#Node70">Matching Probe 
</a>).   
<P> 
The receive buffer consists of the storage containing <font face="sans-serif"> count</font>  
consecutive elements of the type specified by <font face="sans-serif"> datatype</font>,  
starting at address <font face="sans-serif"> buf</font>.   
The length of the received message  
must be less than or equal to the length of the receive buffer. An  
overflow error occurs if all incoming data does not fit, without  
truncation, into the receive buffer.  
<P> 
If the message is shorter than the receive buffer, then only those  
locations corresponding to the (shorter) message are modified.  
<P> 
On return from this function, the message handle is set to  
<font face="sans-serif">  MPI_MESSAGE_NULL</font>. All errors that occur during the execution of  
this operation are handled according to the error handler set for the  
communicator used in the matching probe call that produced the message  
handle.  
<P> 
If <font face="sans-serif"> MPI_MRECV</font> is called with  
<font face="sans-serif">  MPI_MESSAGE_NO_PROC</font>  
as the  
message argument, the call returns immediately with the status object  
set to source = <font face="sans-serif">  MPI_PROC_NULL</font>, tag = <font face="sans-serif">  MPI_ANY_TAG</font>, and  
count = 0, as if a receive from <font face="sans-serif">  MPI_PROC_NULL</font> was issued  
(see  
Section <a href="node75.htm#Node75">Null Processes 
</a>).  
A call to <font face="sans-serif"> MPI_MRECV</font> with <font face="sans-serif">  MPI_MESSAGE_NULL</font> is erroneous.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_IMRECV(buf, count, datatype, message, request)</TD></TR>  
<TR><TD> OUT buf</TD><TD>initial address of receive buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in receive buffer (non-negative  
integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of each receive buffer element (handle)</TD></TR>  
<TR><TD> INOUT message</TD><TD>message (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>communication request (handle)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Imrecv(void* buf, int count, MPI_Datatype datatype, MPI_Message *message, MPI_Request *request) <br></tt>  
<P> 
 <tt> MPI_Imrecv(buf, count, datatype, message, request, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buf <br>INTEGER, INTENT(IN) :: count <br>TYPE(MPI_Datatype), INTENT(IN) :: datatype <br>TYPE(MPI_Message), INTENT(INOUT) :: message <br>TYPE(MPI_Request), INTENT(OUT) :: request <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_IMRECV(BUF, COUNT, DATATYPE, MESSAGE, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, MESSAGE, REQUEST, IERROR <br></tt>  
<P> 
<font face="sans-serif"> MPI_IMRECV</font> is the nonblocking variant of <font face="sans-serif"> MPI_MRECV</font>  
and starts a nonblocking receive of a matched message. Completion  
semantics are similar to <font face="sans-serif"> MPI_IRECV</font> as described in  
Section <a href="node63.htm#Node63">Communication Initiation 
</a>. On return from this function,  
the message handle is set to <font face="sans-serif">  MPI_MESSAGE_NULL</font>.   
<P> 
If <font face="sans-serif"> MPI_IMRECV</font> is called with <font face="sans-serif">  MPI_MESSAGE_NO_PROC</font>  
as the message argument, the call returns immediately with a request  
object which, when completed, will yield a status object set to  
source = <font face="sans-serif">  MPI_PROC_NULL</font>, tag = <font face="sans-serif">  MPI_ANY_TAG</font>,  
and count = 0, as if a receive from <font face="sans-serif">  MPI_PROC_NULL</font>  
was issued (see Section <a href="node75.htm#Node75">Null Processes 
</a>).  
A call to <font face="sans-serif"> MPI_IMRECV</font> with <font face="sans-serif">  MPI_MESSAGE_NULL</font> is erroneous.  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
If reception of a matched message is started with  
<font face="sans-serif"> MPI_IMRECV</font>, then it is possible to cancel the returned  
request with <font face="sans-serif"> MPI_CANCEL</font>. If <font face="sans-serif"> MPI_CANCEL</font> succeeds, the  
matched message must be found by a subsequent message probe  
(<font face="sans-serif"> MPI_PROBE</font>, <font face="sans-serif"> MPI_IPROBE</font>, <font face="sans-serif"> MPI_MPROBE</font>, or  
<font face="sans-serif"> MPI_IMPROBE</font>), received by a subsequent receive operation or  
cancelled by the sender.  
See Section <a href="node72.htm#Node72">Cancel 
</a> for details about <font face="sans-serif"> MPI_CANCEL</font>.  
The cancellation of operations initiated with <font face="sans-serif"> MPI_IMRECV</font> may  
fail.  
 (<em> End of advice to implementors.</em>) <br> 

<P>
<hr>
<a href="node70.htm#Node70"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node68.htm#Node68"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node72.htm#Node72"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node68.htm#Node68"> Probe and Cancel</a>
<b>Next: </b><a href="node72.htm#Node72"> Cancel</a>
<b>Previous: </b><a href="node70.htm#Node70"> Matching Probe</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
