<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Communicator Accessors</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node155">148. Communicator Accessors</span></h2>
<a href="node154.htm#Node154"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node154.htm#Node154"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node156.htm#Node156"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node154.htm#Node154"> Communicator Management</a>
<b>Next: </b><a href="node156.htm#Node156"> Communicator Constructors</a>
<b>Previous: </b><a href="node154.htm#Node154"> Communicator Management</a>
<p>
  
<P> 
The following are all local operations.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_SIZE(comm, size)</TD></TR>  
<TR><TD> IN comm</TD><TD>communicator (handle)</TD></TR>  
<TR><TD> OUT size</TD><TD>number of processes in the group of <font face="sans-serif"> comm</font>  
  (integer)</TD></TR>   
</TABLE>  
<P> 
 <tt> int MPI_Comm_size(MPI_Comm comm, int *size) <br></tt>  
<P> 
 <tt> MPI_Comm_size(comm, size, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, INTENT(OUT) :: size <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_COMM_SIZE(COMM, SIZE, IERROR)<br> INTEGER COMM, SIZE, IERROR <br></tt>  
  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
This function is equivalent to accessing the communicator's group with  
<font face="sans-serif"> MPI_COMM_GROUP</font> (see above), computing the size using  
<font face="sans-serif"> MPI_GROUP_SIZE</font>,  
and then freeing the temporary group via <font face="sans-serif"> MPI_GROUP_FREE</font>.  However,  
this function is so commonly used that this shortcut was introduced.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
This function indicates the number of processes involved in a communicator.  
For <font face="sans-serif">  MPI_COMM_WORLD</font>, it indicates the total number of processes  
available unless  
  the number of processes has been changed by using the functions  
  described in Chapter <a href="node230.htm#Node230">Process Creation and Management 
</a>; note that the number of  
  processes in <font face="sans-serif">  MPI_COMM_WORLD</font> does not change during the  
  life of an <font face="sans-serif"> MPI</font> program.   
<P> 
This call is often used with the next call to determine the amount of  
concurrency available for a specific library or program.  The following  
call, <font face="sans-serif"> MPI_COMM_RANK</font> indicates the rank of the process  
that calls it in the range from <i>0...</i><font face="sans-serif"> size</font><i>-1</i>, where <font face="sans-serif"> size</font>  
is the return value of <font face="sans-serif"> MPI_COMM_SIZE</font>. (<em> End of advice to users.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_RANK(comm, rank)</TD></TR>  
<TR><TD> IN comm</TD><TD> communicator (handle)</TD></TR>  
<TR><TD> OUT rank</TD><TD>  rank of the calling process in group of  
<font face="sans-serif">  comm</font> (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Comm_rank(MPI_Comm comm, int *rank) <br></tt>  
<P> 
 <tt> MPI_Comm_rank(comm, rank, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm <br>INTEGER, INTENT(OUT) :: rank <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_COMM_RANK(COMM, RANK, IERROR)<br> INTEGER COMM, RANK, IERROR <br></tt>  
  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
This function is equivalent to accessing the communicator's group with  
<font face="sans-serif"> MPI_COMM_GROUP</font> (see above), computing the rank using  
<font face="sans-serif"> MPI_GROUP_RANK</font>,  
and then freeing the temporary group via <font face="sans-serif"> MPI_GROUP_FREE</font>.  However,  
this function is so commonly used that this shortcut was introduced.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
This function gives the rank of the process in the particular communicator's  
group.  It is useful, as noted above, in conjunction with  
<font face="sans-serif"> MPI_COMM_SIZE</font>.  
<P> 
Many programs will be written with the master-slave model, where one process  
(such as the rank-zero process) will play a supervisory role, and the other  
processes will serve as compute nodes.  In this framework, the two preceding  
calls are useful for determining the roles of the various processes of a  
communicator.  
 (<em> End of advice to users.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_COMM_COMPARE(comm1, comm2, result)</TD></TR>  
<TR><TD> IN comm1</TD><TD> first communicator (handle)</TD></TR>  
<TR><TD> IN comm2</TD><TD> second communicator (handle)</TD></TR>  
<TR><TD> OUT result</TD><TD> result (integer)</TD></TR>  
</TABLE>  
<P> 
 <tt> int MPI_Comm_compare(MPI_Comm comm1, MPI_Comm comm2, int *result) <br></tt>  
<P> 
 <tt> MPI_Comm_compare(comm1, comm2, result, ierror) <br> TYPE(MPI_Comm), INTENT(IN) :: comm1, comm2 <br>INTEGER, INTENT(OUT) :: result <br>INTEGER, OPTIONAL, INTENT(OUT) :: ierror <br></tt>  
 <tt> MPI_COMM_COMPARE(COMM1, COMM2, RESULT, IERROR)<br> INTEGER COMM1, COMM2, RESULT, IERROR <br></tt>  
  
<P> 
<font face="sans-serif">  MPI_IDENT</font> results if and only if  
<font face="sans-serif"> comm1</font> and <font face="sans-serif"> comm2</font> are handles for the same object  
(identical groups and same contexts).  
<font face="sans-serif">  MPI_CONGRUENT</font> results if the underlying groups are identical  
in constituents and rank order; these communicators differ only by context.  
<font face="sans-serif">  MPI_SIMILAR</font> results if the group members of both  
communicators are the same but the rank order  
differs. <font face="sans-serif">  MPI_UNEQUAL</font> results otherwise.  
<P> 

<P>
<hr>
<a href="node154.htm#Node154"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node154.htm#Node154"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node156.htm#Node156"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node154.htm#Node154"> Communicator Management</a>
<b>Next: </b><a href="node156.htm#Node156"> Communicator Constructors</a>
<b>Previous: </b><a href="node154.htm#Node154"> Communicator Management</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
