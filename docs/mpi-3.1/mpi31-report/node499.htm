<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-FNames.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Point-to-Point Communication Fortran Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node499">425. Point-to-Point Communication Fortran Bindings</span></h2>
<a href="node498.htm#Node498"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node498.htm#Node498"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node500.htm#Node500"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node498.htm#Node498"> Fortran Bindings with mpif.h or the mpi Module</a>
<b>Next: </b><a href="node500.htm#Node500"> Datatypes Fortran Bindings</a>
<b>Previous: </b><a href="node498.htm#Node498"> Fortran Bindings with mpif.h or the mpi Module</a>
<p>
 <tt> MPI_BSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <br></tt>  
 <tt> MPI_BSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt;  BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_BUFFER_ATTACH(BUFFER, SIZE, IERROR)<br> &lt;type&gt; BUFFER(*) <br>INTEGER  SIZE, IERROR <br></tt>  
 <tt> MPI_BUFFER_DETACH(BUFFER_ADDR, SIZE, IERROR)<br> &lt;type&gt; BUFFER_ADDR(*) <br>INTEGER  SIZE, IERROR <br></tt>  
 <tt> MPI_CANCEL(REQUEST, IERROR)<br> INTEGER  REQUEST, IERROR <br></tt>  
 <tt> MPI_GET_COUNT(STATUS, DATATYPE, COUNT, IERROR)<br> INTEGER  STATUS(MPI_STATUS_SIZE), DATATYPE, COUNT, IERROR <br></tt>  
 <tt> MPI_IBSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_IMPROBE(SOURCE, TAG, COMM, FLAG, MESSAGE, STATUS, IERROR)<br> INTEGER SOURCE, TAG, COMM, MESSAGE, STATUS(MPI_STATUS_SIZE), IERROR <br>LOGICAL FLAG <br></tt>  
 <tt> MPI_IMRECV(BUF, COUNT, DATATYPE, MESSAGE, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, MESSAGE, REQUEST, IERROR <br></tt>  
 <tt> MPI_IPROBE(SOURCE, TAG, COMM, FLAG, STATUS, IERROR)<br> LOGICAL  FLAG <br>INTEGER  SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_IRECV(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_IRSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_ISEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_ISSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_MPROBE(SOURCE, TAG, COMM, MESSAGE, STATUS, IERROR)<br> INTEGER SOURCE, TAG, COMM, MESSAGE, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_MRECV(BUF, COUNT, DATATYPE, MESSAGE, STATUS, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, MESSAGE, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_PROBE(SOURCE, TAG, COMM, STATUS, IERROR)<br> INTEGER SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_RECV(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, STATUS, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_RECV_INIT(BUF, COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt;  BUF(*) <br>INTEGER  COUNT, DATATYPE, SOURCE, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_REQUEST_FREE(REQUEST, IERROR)<br> INTEGER  REQUEST, IERROR <br></tt>  
 <tt> MPI_REQUEST_GET_STATUS( REQUEST, FLAG, STATUS, IERROR) <br> INTEGER REQUEST, STATUS(MPI_STATUS_SIZE), IERROR<br>LOGICAL FLAG <br></tt>  
 <tt> MPI_RSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <br></tt>  
 <tt> MPI_RSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt;  BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_SEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <br></tt>  
 <tt> MPI_SENDRECV(SENDBUF, SENDCOUNT, SENDTYPE, DEST, SENDTAG, RECVBUF, RECVCOUNT, RECVTYPE, SOURCE, RECVTAG, COMM, STATUS, IERROR)<br> &lt;type&gt; SENDBUF(*), RECVBUF(*) <br>INTEGER  SENDCOUNT, SENDTYPE, DEST, SENDTAG, RECVCOUNT, RECVTYPE,<br>    SOURCE, RECVTAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_SENDRECV_REPLACE(BUF, COUNT, DATATYPE, DEST, SENDTAG, SOURCE, RECVTAG, COMM, STATUS, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER COUNT, DATATYPE, DEST, SENDTAG, SOURCE, RECVTAG, COMM,<br>    STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_SEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt;  BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_SSEND(BUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR)<br> &lt;type&gt; BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, IERROR <br></tt>  
 <tt> MPI_SSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)<br> &lt;type&gt;  BUF(*) <br>INTEGER  COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR <br></tt>  
 <tt> MPI_START(REQUEST, IERROR)<br> INTEGER  REQUEST, IERROR <br></tt>  
 <tt> MPI_STARTALL(COUNT, ARRAY_OF_REQUESTS, IERROR)<br> INTEGER  COUNT, ARRAY_OF_REQUESTS(*), IERROR <br></tt>  
 <tt> MPI_TEST(REQUEST, FLAG, STATUS, IERROR)<br> LOGICAL  FLAG <br>INTEGER  REQUEST, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_TESTALL(COUNT, ARRAY_OF_REQUESTS, FLAG, ARRAY_OF_STATUSES, IERROR)<br> LOGICAL  FLAG <br>INTEGER  COUNT, ARRAY_OF_REQUESTS(*),<br>    ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <br></tt>  
 <tt> MPI_TESTANY(COUNT, ARRAY_OF_REQUESTS, INDEX, FLAG, STATUS, IERROR)<br> LOGICAL  FLAG <br>INTEGER  COUNT, ARRAY_OF_REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE),<br>    IERROR <br></tt>  
 <tt> MPI_TESTSOME(INCOUNT, ARRAY_OF_REQUESTS, OUTCOUNT, ARRAY_OF_INDICES, ARRAY_OF_STATUSES, IERROR)<br> INTEGER INCOUNT, ARRAY_OF_REQUESTS(*), OUTCOUNT, ARRAY_OF_INDICES(*),<br>    ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <br></tt>  
 <tt> MPI_TEST_CANCELLED(STATUS, FLAG, IERROR)<br> LOGICAL FLAG <br>INTEGER  STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_WAIT(REQUEST, STATUS, IERROR)<br> INTEGER  REQUEST, STATUS(MPI_STATUS_SIZE), IERROR <br></tt>  
 <tt> MPI_WAITALL(COUNT, ARRAY_OF_REQUESTS, ARRAY_OF_STATUSES, IERROR)<br> INTEGER  COUNT, ARRAY_OF_REQUESTS(*) <br>INTEGER  ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <br></tt>  
 <tt> MPI_WAITANY(COUNT, ARRAY_OF_REQUESTS, INDEX, STATUS, IERROR)<br> INTEGER  COUNT, ARRAY_OF_REQUESTS(*), INDEX, STATUS(MPI_STATUS_SIZE),<br>    IERROR <br></tt>  
 <tt> MPI_WAITSOME(INCOUNT, ARRAY_OF_REQUESTS, OUTCOUNT, ARRAY_OF_INDICES,<br>    ARRAY_OF_STATUSES, IERROR)<br> INTEGER INCOUNT, ARRAY_OF_REQUESTS(*), OUTCOUNT, ARRAY_OF_INDICES(*),<br>    ARRAY_OF_STATUSES(MPI_STATUS_SIZE,*), IERROR <br></tt>  
<P> 

<P>
<hr>
<a href="node498.htm#Node498"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node498.htm#Node498"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node500.htm#Node500"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node498.htm#Node498"> Fortran Bindings with mpif.h or the mpi Module</a>
<b>Next: </b><a href="node500.htm#Node500"> Datatypes Fortran Bindings</a>
<b>Previous: </b><a href="node498.htm#Node498"> Fortran Bindings with mpif.h or the mpi Module</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
