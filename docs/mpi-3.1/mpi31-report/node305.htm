<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-io/io-2.tex -->
<!-- with the command
tohtml -default -basedef mpi3defs.txt -numbers -indexname myindex -dosnl -htables -quietlatex -allgif -endpage mpi3-forum-tail.htm -Wnoredef -o mpi31-report.tex mpi-report.tex 
-->
<title>Introduction</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node305">280. Introduction</span></h1>
<a href="node304.htm#Node304"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node306.htm#Node306"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node306.htm#Node306"> Definitions</a>
<b>Previous: </b><a href="node304.htm#Node304"> I/O</a>
<p>
  
<P> 
POSIX provides a model of a widely portable file system,  
but the portability and optimization needed for parallel I/O  
cannot be achieved with  
the POSIX interface.  
<P> 
The significant optimizations required for efficiency  
(e.g., grouping [<a href="node522.htm#-Bib47">47</a>],  
collective buffering  
[<a href="node522.htm#-Bib7">7</a>,<a href="node522.htm#-Bib15">15</a>,<a href="node522.htm#-Bib48">48</a>,<a href="node522.htm#-Bib52">52</a>,<a href="node522.htm#-Bib58">58</a>],  
and disk-directed I/O [<a href="node522.htm#-Bib43">43</a>])  
can only be implemented  
if the parallel I/O system provides a high-level interface supporting  
partitioning of file data among processes  
and a collective interface  
supporting  
complete transfers of global data structures between process  
memories and files.  
In addition, further efficiencies can be gained via support  
for asynchronous I/O, strided accesses,  
and control over physical file layout on storage devices (disks).  
The I/O environment described in this chapter provides these facilities.  
<P> 
Instead of defining  
I/O  
access modes to express the common patterns  
for accessing a shared file (broadcast, reduction, scatter, gather),  
we chose another approach  
in which data partitioning is expressed using  
derived datatypes.  
Compared to a limited set of predefined access patterns,   
this approach has the advantage of added flexibility and expressiveness.  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node304.htm#Node304"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="mpi31-report.htm#Node0"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node306.htm#Node306"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="mpi31-report.htm#Node0">Contents</a>
<b>Next: </b><a href="node306.htm#Node306"> Definitions</a>
<b>Previous: </b><a href="node304.htm#Node304"> I/O</a>
<p>
<HR>
Return to <A HREF="node523.htm">MPI-3.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-3.1 of June 4, 2015<BR>
HTML Generated on June 4, 2015
</FONT>
</body>
</html>
